### YamlMime:ManagedReference
items:
- uid: cfEngine.Info.InfoLayer
  commentId: T:cfEngine.Info.InfoLayer
  id: InfoLayer
  parent: cfEngine.Info
  children:
  - cfEngine.Info.InfoLayer.#ctor(cfEngine.IO.IStorage,cfEngine.Serialize.ISerializer)
  - cfEngine.Info.InfoLayer.Dispose
  - cfEngine.Info.InfoLayer.Get``1
  - cfEngine.Info.InfoLayer.InfoMap
  - cfEngine.Info.InfoLayer.RegisterInfo(cfEngine.Info.IInfoManager)
  - cfEngine.Info.InfoLayer.TryGetInfo``1(``0@)
  langs:
  - csharp
  - vb
  name: InfoLayer
  nameWithType: InfoLayer
  fullName: cfEngine.Info.InfoLayer
  type: Class
  source:
    id: InfoLayer
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/info/InfoLayer.cs
    startLine: 29
  namespace: cfEngine.Info
  syntax:
    content: 'public class InfoLayer : IService, IDisposable'
    content.vb: Public Class InfoLayer Implements IService, IDisposable
  inheritance:
  - System.Object
  implements:
  - cfEngine.Service.IService
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: cfEngine.Info.InfoLayer.InfoMap
  commentId: P:cfEngine.Info.InfoLayer.InfoMap
  id: InfoMap
  parent: cfEngine.Info.InfoLayer
  langs:
  - csharp
  - vb
  name: InfoMap
  nameWithType: InfoLayer.InfoMap
  fullName: cfEngine.Info.InfoLayer.InfoMap
  type: Property
  source:
    id: InfoMap
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/info/InfoLayer.cs
    startLine: 35
  namespace: cfEngine.Info
  syntax:
    content: public IReadOnlyDictionary<Type, IInfoManager> InfoMap { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.Type,cfEngine.Info.IInfoManager}
    content.vb: Public ReadOnly Property InfoMap As IReadOnlyDictionary(Of Type, IInfoManager)
  overload: cfEngine.Info.InfoLayer.InfoMap*
- uid: cfEngine.Info.InfoLayer.#ctor(cfEngine.IO.IStorage,cfEngine.Serialize.ISerializer)
  commentId: M:cfEngine.Info.InfoLayer.#ctor(cfEngine.IO.IStorage,cfEngine.Serialize.ISerializer)
  id: '#ctor(cfEngine.IO.IStorage,cfEngine.Serialize.ISerializer)'
  parent: cfEngine.Info.InfoLayer
  langs:
  - csharp
  - vb
  name: InfoLayer(IStorage, ISerializer)
  nameWithType: InfoLayer.InfoLayer(IStorage, ISerializer)
  fullName: cfEngine.Info.InfoLayer.InfoLayer(cfEngine.IO.IStorage, cfEngine.Serialize.ISerializer)
  type: Constructor
  source:
    id: .ctor
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/info/InfoLayer.cs
    startLine: 37
  namespace: cfEngine.Info
  syntax:
    content: public InfoLayer(IStorage storage, ISerializer serializer)
    parameters:
    - id: storage
      type: cfEngine.IO.IStorage
    - id: serializer
      type: cfEngine.Serialize.ISerializer
    content.vb: Public Sub New(storage As IStorage, serializer As ISerializer)
  overload: cfEngine.Info.InfoLayer.#ctor*
  nameWithType.vb: InfoLayer.New(IStorage, ISerializer)
  fullName.vb: cfEngine.Info.InfoLayer.New(cfEngine.IO.IStorage, cfEngine.Serialize.ISerializer)
  name.vb: New(IStorage, ISerializer)
- uid: cfEngine.Info.InfoLayer.RegisterInfo(cfEngine.Info.IInfoManager)
  commentId: M:cfEngine.Info.InfoLayer.RegisterInfo(cfEngine.Info.IInfoManager)
  id: RegisterInfo(cfEngine.Info.IInfoManager)
  parent: cfEngine.Info.InfoLayer
  langs:
  - csharp
  - vb
  name: RegisterInfo(IInfoManager)
  nameWithType: InfoLayer.RegisterInfo(IInfoManager)
  fullName: cfEngine.Info.InfoLayer.RegisterInfo(cfEngine.Info.IInfoManager)
  type: Method
  source:
    id: RegisterInfo
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/info/InfoLayer.cs
    startLine: 43
  namespace: cfEngine.Info
  syntax:
    content: public void RegisterInfo(IInfoManager infoManager)
    parameters:
    - id: infoManager
      type: cfEngine.Info.IInfoManager
    content.vb: Public Sub RegisterInfo(infoManager As IInfoManager)
  overload: cfEngine.Info.InfoLayer.RegisterInfo*
- uid: cfEngine.Info.InfoLayer.TryGetInfo``1(``0@)
  commentId: M:cfEngine.Info.InfoLayer.TryGetInfo``1(``0@)
  id: TryGetInfo``1(``0@)
  parent: cfEngine.Info.InfoLayer
  langs:
  - csharp
  - vb
  name: TryGetInfo<TInfo>(out TInfo)
  nameWithType: InfoLayer.TryGetInfo<TInfo>(out TInfo)
  fullName: cfEngine.Info.InfoLayer.TryGetInfo<TInfo>(out TInfo)
  type: Method
  source:
    id: TryGetInfo
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/info/InfoLayer.cs
    startLine: 51
  namespace: cfEngine.Info
  syntax:
    content: 'public bool TryGetInfo<TInfo>(out TInfo infoManager) where TInfo : InfoManager'
    parameters:
    - id: infoManager
      type: '{TInfo}'
    typeParameters:
    - id: TInfo
    return:
      type: System.Boolean
    content.vb: Public Function TryGetInfo(Of TInfo As InfoManager)(infoManager As TInfo) As Boolean
  overload: cfEngine.Info.InfoLayer.TryGetInfo*
  nameWithType.vb: InfoLayer.TryGetInfo(Of TInfo)(TInfo)
  fullName.vb: cfEngine.Info.InfoLayer.TryGetInfo(Of TInfo)(TInfo)
  name.vb: TryGetInfo(Of TInfo)(TInfo)
- uid: cfEngine.Info.InfoLayer.Get``1
  commentId: M:cfEngine.Info.InfoLayer.Get``1
  id: Get``1
  parent: cfEngine.Info.InfoLayer
  langs:
  - csharp
  - vb
  name: Get<TInfo>()
  nameWithType: InfoLayer.Get<TInfo>()
  fullName: cfEngine.Info.InfoLayer.Get<TInfo>()
  type: Method
  source:
    id: Get
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/info/InfoLayer.cs
    startLine: 63
  namespace: cfEngine.Info
  syntax:
    content: 'public TInfo Get<TInfo>() where TInfo : InfoManager'
    typeParameters:
    - id: TInfo
    return:
      type: '{TInfo}'
    content.vb: Public Function [Get](Of TInfo As InfoManager)() As TInfo
  overload: cfEngine.Info.InfoLayer.Get*
  nameWithType.vb: InfoLayer.Get(Of TInfo)()
  fullName.vb: cfEngine.Info.InfoLayer.Get(Of TInfo)()
  name.vb: Get(Of TInfo)()
- uid: cfEngine.Info.InfoLayer.Dispose
  commentId: M:cfEngine.Info.InfoLayer.Dispose
  id: Dispose
  parent: cfEngine.Info.InfoLayer
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: InfoLayer.Dispose()
  fullName: cfEngine.Info.InfoLayer.Dispose()
  type: Method
  source:
    id: Dispose
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/info/InfoLayer.cs
    startLine: 68
  namespace: cfEngine.Info
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: cfEngine.Info.InfoLayer.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: cfEngine.Info
  commentId: N:cfEngine.Info
  href: cfEngine.html
  name: cfEngine.Info
  nameWithType: cfEngine.Info
  fullName: cfEngine.Info
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Info
    name: Info
    href: cfEngine.Info.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Info
    name: Info
    href: cfEngine.Info.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: cfEngine.Service.IService
  commentId: T:cfEngine.Service.IService
  parent: cfEngine.Service
  href: cfEngine.Service.IService.html
  name: IService
  nameWithType: IService
  fullName: cfEngine.Service.IService
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: cfEngine.Service
  commentId: N:cfEngine.Service
  href: cfEngine.html
  name: cfEngine.Service
  nameWithType: cfEngine.Service
  fullName: cfEngine.Service
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Service
    name: Service
    href: cfEngine.Service.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Service
    name: Service
    href: cfEngine.Service.html
- uid: cfEngine.Info.InfoLayer.InfoMap*
  commentId: Overload:cfEngine.Info.InfoLayer.InfoMap
  href: cfEngine.Info.InfoLayer.html#cfEngine_Info_InfoLayer_InfoMap
  name: InfoMap
  nameWithType: InfoLayer.InfoMap
  fullName: cfEngine.Info.InfoLayer.InfoMap
- uid: System.Collections.Generic.IReadOnlyDictionary{System.Type,cfEngine.Info.IInfoManager}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.Type,cfEngine.Info.IInfoManager}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<Type, IInfoManager>
  nameWithType: IReadOnlyDictionary<Type, IInfoManager>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.Type, cfEngine.Info.IInfoManager>
  nameWithType.vb: IReadOnlyDictionary(Of Type, IInfoManager)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.Type, cfEngine.Info.IInfoManager)
  name.vb: IReadOnlyDictionary(Of Type, IInfoManager)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: cfEngine.Info.IInfoManager
    name: IInfoManager
    href: cfEngine.Info.IInfoManager.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: cfEngine.Info.IInfoManager
    name: IInfoManager
    href: cfEngine.Info.IInfoManager.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: cfEngine.Info.InfoLayer.#ctor*
  commentId: Overload:cfEngine.Info.InfoLayer.#ctor
  href: cfEngine.Info.InfoLayer.html#cfEngine_Info_InfoLayer__ctor_cfEngine_IO_IStorage_cfEngine_Serialize_ISerializer_
  name: InfoLayer
  nameWithType: InfoLayer.InfoLayer
  fullName: cfEngine.Info.InfoLayer.InfoLayer
  nameWithType.vb: InfoLayer.New
  fullName.vb: cfEngine.Info.InfoLayer.New
  name.vb: New
- uid: cfEngine.IO.IStorage
  commentId: T:cfEngine.IO.IStorage
  parent: cfEngine.IO
  href: cfEngine.IO.IStorage.html
  name: IStorage
  nameWithType: IStorage
  fullName: cfEngine.IO.IStorage
- uid: cfEngine.Serialize.ISerializer
  commentId: T:cfEngine.Serialize.ISerializer
  parent: cfEngine.Serialize
  href: cfEngine.Serialize.ISerializer.html
  name: ISerializer
  nameWithType: ISerializer
  fullName: cfEngine.Serialize.ISerializer
- uid: cfEngine.IO
  commentId: N:cfEngine.IO
  href: cfEngine.html
  name: cfEngine.IO
  nameWithType: cfEngine.IO
  fullName: cfEngine.IO
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.IO
    name: IO
    href: cfEngine.IO.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.IO
    name: IO
    href: cfEngine.IO.html
- uid: cfEngine.Serialize
  commentId: N:cfEngine.Serialize
  href: cfEngine.html
  name: cfEngine.Serialize
  nameWithType: cfEngine.Serialize
  fullName: cfEngine.Serialize
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Serialize
    name: Serialize
    href: cfEngine.Serialize.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Serialize
    name: Serialize
    href: cfEngine.Serialize.html
- uid: cfEngine.Info.InfoLayer.RegisterInfo*
  commentId: Overload:cfEngine.Info.InfoLayer.RegisterInfo
  href: cfEngine.Info.InfoLayer.html#cfEngine_Info_InfoLayer_RegisterInfo_cfEngine_Info_IInfoManager_
  name: RegisterInfo
  nameWithType: InfoLayer.RegisterInfo
  fullName: cfEngine.Info.InfoLayer.RegisterInfo
- uid: cfEngine.Info.IInfoManager
  commentId: T:cfEngine.Info.IInfoManager
  parent: cfEngine.Info
  href: cfEngine.Info.IInfoManager.html
  name: IInfoManager
  nameWithType: IInfoManager
  fullName: cfEngine.Info.IInfoManager
- uid: cfEngine.Info.InfoLayer.TryGetInfo*
  commentId: Overload:cfEngine.Info.InfoLayer.TryGetInfo
  href: cfEngine.Info.InfoLayer.html#cfEngine_Info_InfoLayer_TryGetInfo__1___0__
  name: TryGetInfo
  nameWithType: InfoLayer.TryGetInfo
  fullName: cfEngine.Info.InfoLayer.TryGetInfo
- uid: '{TInfo}'
  commentId: '!:TInfo'
  definition: TInfo
  name: TInfo
  nameWithType: TInfo
  fullName: TInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TInfo
  name: TInfo
  nameWithType: TInfo
  fullName: TInfo
- uid: cfEngine.Info.InfoLayer.Get*
  commentId: Overload:cfEngine.Info.InfoLayer.Get
  href: cfEngine.Info.InfoLayer.html#cfEngine_Info_InfoLayer_Get__1
  name: Get
  nameWithType: InfoLayer.Get
  fullName: cfEngine.Info.InfoLayer.Get
- uid: cfEngine.Info.InfoLayer.Dispose*
  commentId: Overload:cfEngine.Info.InfoLayer.Dispose
  href: cfEngine.Info.InfoLayer.html#cfEngine_Info_InfoLayer_Dispose
  name: Dispose
  nameWithType: InfoLayer.Dispose
  fullName: cfEngine.Info.InfoLayer.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
