### YamlMime:ManagedReference
items:
- uid: cfEngine.Pooling.ObjectPool`1
  commentId: T:cfEngine.Pooling.ObjectPool`1
  id: ObjectPool`1
  parent: cfEngine.Pooling
  children:
  - cfEngine.Pooling.ObjectPool`1.#ctor(System.Func{`0},System.Action{`0})
  - cfEngine.Pooling.ObjectPool`1.Dispose
  - cfEngine.Pooling.ObjectPool`1.Get
  - cfEngine.Pooling.ObjectPool`1.Get(`0@)
  - cfEngine.Pooling.ObjectPool`1.Queue
  - cfEngine.Pooling.ObjectPool`1.Release(`0)
  langs:
  - csharp
  - vb
  name: ObjectPool<T>
  nameWithType: ObjectPool<T>
  fullName: cfEngine.Pooling.ObjectPool<T>
  type: Class
  source:
    id: ObjectPool
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/pooling/ObjectPool.cs
    startLine: 10
  namespace: cfEngine.Pooling
  syntax:
    content: 'public class ObjectPool<T> : IObjectPool, IDisposable where T : class'
    typeParameters:
    - id: T
    content.vb: Public Class ObjectPool(Of T As Class) Implements IObjectPool, IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - cfEngine.DataStructure.WeakReferenceListPool`1
  - cfEngine.Pooling.ListPool`1
  implements:
  - cfEngine.Pooling.IObjectPool
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ObjectPool(Of T)
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T)
  name.vb: ObjectPool(Of T)
- uid: cfEngine.Pooling.ObjectPool`1.Queue
  commentId: F:cfEngine.Pooling.ObjectPool`1.Queue
  id: Queue
  parent: cfEngine.Pooling.ObjectPool`1
  langs:
  - csharp
  - vb
  name: Queue
  nameWithType: ObjectPool<T>.Queue
  fullName: cfEngine.Pooling.ObjectPool<T>.Queue
  type: Field
  source:
    id: Queue
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/pooling/ObjectPool.cs
    startLine: 32
  namespace: cfEngine.Pooling
  syntax:
    content: protected readonly Queue<T> Queue
    return:
      type: System.Collections.Generic.Queue{{T}}
    content.vb: Protected ReadOnly Queue As Queue(Of T)
  nameWithType.vb: ObjectPool(Of T).Queue
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T).Queue
- uid: cfEngine.Pooling.ObjectPool`1.#ctor(System.Func{`0},System.Action{`0})
  commentId: M:cfEngine.Pooling.ObjectPool`1.#ctor(System.Func{`0},System.Action{`0})
  id: '#ctor(System.Func{`0},System.Action{`0})'
  parent: cfEngine.Pooling.ObjectPool`1
  langs:
  - csharp
  - vb
  name: ObjectPool(Func<T>, Action<T>)
  nameWithType: ObjectPool<T>.ObjectPool(Func<T>, Action<T>)
  fullName: cfEngine.Pooling.ObjectPool<T>.ObjectPool(System.Func<T>, System.Action<T>)
  type: Constructor
  source:
    id: .ctor
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/pooling/ObjectPool.cs
    startLine: 34
  namespace: cfEngine.Pooling
  syntax:
    content: public ObjectPool(Func<T> createMethod, Action<T> releaseAction)
    parameters:
    - id: createMethod
      type: System.Func{{T}}
    - id: releaseAction
      type: System.Action{{T}}
    content.vb: Public Sub New(createMethod As Func(Of T), releaseAction As Action(Of T))
  overload: cfEngine.Pooling.ObjectPool`1.#ctor*
  nameWithType.vb: ObjectPool(Of T).New(Func(Of T), Action(Of T))
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T).New(System.Func(Of T), System.Action(Of T))
  name.vb: New(Func(Of T), Action(Of T))
- uid: cfEngine.Pooling.ObjectPool`1.Get
  commentId: M:cfEngine.Pooling.ObjectPool`1.Get
  id: Get
  parent: cfEngine.Pooling.ObjectPool`1
  langs:
  - csharp
  - vb
  name: Get()
  nameWithType: ObjectPool<T>.Get()
  fullName: cfEngine.Pooling.ObjectPool<T>.Get()
  type: Method
  source:
    id: Get
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/pooling/ObjectPool.cs
    startLine: 40
  namespace: cfEngine.Pooling
  syntax:
    content: public virtual T Get()
    return:
      type: '{T}'
    content.vb: Public Overridable Function [Get]() As T
  overload: cfEngine.Pooling.ObjectPool`1.Get*
  nameWithType.vb: ObjectPool(Of T).Get()
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T).Get()
- uid: cfEngine.Pooling.ObjectPool`1.Get(`0@)
  commentId: M:cfEngine.Pooling.ObjectPool`1.Get(`0@)
  id: Get(`0@)
  parent: cfEngine.Pooling.ObjectPool`1
  langs:
  - csharp
  - vb
  name: Get(out T)
  nameWithType: ObjectPool<T>.Get(out T)
  fullName: cfEngine.Pooling.ObjectPool<T>.Get(out T)
  type: Method
  source:
    id: Get
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/pooling/ObjectPool.cs
    startLine: 50
  namespace: cfEngine.Pooling
  syntax:
    content: public virtual ObjectPool<T>.Handle Get(out T value)
    parameters:
    - id: value
      type: '{T}'
    return:
      type: cfEngine.Pooling.ObjectPool`1.Handle
    content.vb: Public Overridable Function [Get](value As T) As ObjectPool(Of T).Handle
  overload: cfEngine.Pooling.ObjectPool`1.Get*
  nameWithType.vb: ObjectPool(Of T).Get(T)
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T).Get(T)
  name.vb: Get(T)
- uid: cfEngine.Pooling.ObjectPool`1.Release(`0)
  commentId: M:cfEngine.Pooling.ObjectPool`1.Release(`0)
  id: Release(`0)
  parent: cfEngine.Pooling.ObjectPool`1
  langs:
  - csharp
  - vb
  name: Release(T)
  nameWithType: ObjectPool<T>.Release(T)
  fullName: cfEngine.Pooling.ObjectPool<T>.Release(T)
  type: Method
  source:
    id: Release
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/pooling/ObjectPool.cs
    startLine: 56
  namespace: cfEngine.Pooling
  syntax:
    content: public virtual void Release(T obj)
    parameters:
    - id: obj
      type: '{T}'
    content.vb: Public Overridable Sub Release(obj As T)
  overload: cfEngine.Pooling.ObjectPool`1.Release*
  nameWithType.vb: ObjectPool(Of T).Release(T)
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T).Release(T)
- uid: cfEngine.Pooling.ObjectPool`1.Dispose
  commentId: M:cfEngine.Pooling.ObjectPool`1.Dispose
  id: Dispose
  parent: cfEngine.Pooling.ObjectPool`1
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ObjectPool<T>.Dispose()
  fullName: cfEngine.Pooling.ObjectPool<T>.Dispose()
  type: Method
  source:
    id: Dispose
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/pooling/ObjectPool.cs
    startLine: 62
  namespace: cfEngine.Pooling
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose()
  overload: cfEngine.Pooling.ObjectPool`1.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: ObjectPool(Of T).Dispose()
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T).Dispose()
references:
- uid: cfEngine.Pooling
  commentId: N:cfEngine.Pooling
  href: cfEngine.html
  name: cfEngine.Pooling
  nameWithType: cfEngine.Pooling
  fullName: cfEngine.Pooling
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Pooling
    name: Pooling
    href: cfEngine.Pooling.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Pooling
    name: Pooling
    href: cfEngine.Pooling.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: cfEngine.Pooling.IObjectPool
  commentId: T:cfEngine.Pooling.IObjectPool
  parent: cfEngine.Pooling
  href: cfEngine.Pooling.IObjectPool.html
  name: IObjectPool
  nameWithType: IObjectPool
  fullName: cfEngine.Pooling.IObjectPool
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Queue{{T}}
  commentId: T:System.Collections.Generic.Queue{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Queue`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  name: Queue<T>
  nameWithType: Queue<T>
  fullName: System.Collections.Generic.Queue<T>
  nameWithType.vb: Queue(Of T)
  fullName.vb: System.Collections.Generic.Queue(Of T)
  name.vb: Queue(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.Queue`1
  commentId: T:System.Collections.Generic.Queue`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  name: Queue<T>
  nameWithType: Queue<T>
  fullName: System.Collections.Generic.Queue<T>
  nameWithType.vb: Queue(Of T)
  fullName.vb: System.Collections.Generic.Queue(Of T)
  name.vb: Queue(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: cfEngine.Pooling.ObjectPool`1.#ctor*
  commentId: Overload:cfEngine.Pooling.ObjectPool`1.#ctor
  href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1__ctor_System_Func__0__System_Action__0__
  name: ObjectPool
  nameWithType: ObjectPool<T>.ObjectPool
  fullName: cfEngine.Pooling.ObjectPool<T>.ObjectPool
  nameWithType.vb: ObjectPool(Of T).New
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T).New
  name.vb: New
- uid: System.Func{{T}}
  commentId: T:System.Func{`0}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullName.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action{{T}}
  commentId: T:System.Action{`0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: cfEngine.Pooling.ObjectPool`1.Get*
  commentId: Overload:cfEngine.Pooling.ObjectPool`1.Get
  href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Get
  name: Get
  nameWithType: ObjectPool<T>.Get
  fullName: cfEngine.Pooling.ObjectPool<T>.Get
  nameWithType.vb: ObjectPool(Of T).Get
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T).Get
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: cfEngine.Pooling.ObjectPool`1.Handle
  commentId: T:cfEngine.Pooling.ObjectPool`1.Handle
  parent: cfEngine.Pooling
  href: cfEngine.Pooling.ObjectPool-1.html
  name: ObjectPool<T>.Handle
  nameWithType: ObjectPool<T>.Handle
  fullName: cfEngine.Pooling.ObjectPool<T>.Handle
  nameWithType.vb: ObjectPool(Of T).Handle
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T).Handle
  name.vb: ObjectPool(Of T).Handle
  spec.csharp:
  - uid: cfEngine.Pooling.ObjectPool`1
    name: ObjectPool
    href: cfEngine.Pooling.ObjectPool-1.html
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: cfEngine.Pooling.ObjectPool`1.Handle
    name: Handle
    href: cfEngine.Pooling.ObjectPool-1.Handle.html
  spec.vb:
  - uid: cfEngine.Pooling.ObjectPool`1
    name: ObjectPool
    href: cfEngine.Pooling.ObjectPool-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: cfEngine.Pooling.ObjectPool`1.Handle
    name: Handle
    href: cfEngine.Pooling.ObjectPool-1.Handle.html
- uid: cfEngine.Pooling.ObjectPool`1.Release*
  commentId: Overload:cfEngine.Pooling.ObjectPool`1.Release
  href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Release__0_
  name: Release
  nameWithType: ObjectPool<T>.Release
  fullName: cfEngine.Pooling.ObjectPool<T>.Release
  nameWithType.vb: ObjectPool(Of T).Release
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T).Release
- uid: cfEngine.Pooling.ObjectPool`1.Dispose*
  commentId: Overload:cfEngine.Pooling.ObjectPool`1.Dispose
  href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Dispose
  name: Dispose
  nameWithType: ObjectPool<T>.Dispose
  fullName: cfEngine.Pooling.ObjectPool<T>.Dispose
  nameWithType.vb: ObjectPool(Of T).Dispose
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T).Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
