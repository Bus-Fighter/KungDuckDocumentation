### YamlMime:ManagedReference
items:
- uid: cfEngine.DataStructure.ReadOnlyMemoryComparer`1
  commentId: T:cfEngine.DataStructure.ReadOnlyMemoryComparer`1
  id: ReadOnlyMemoryComparer`1
  parent: cfEngine.DataStructure
  children:
  - cfEngine.DataStructure.ReadOnlyMemoryComparer`1.Equals(System.ReadOnlyMemory{`0},System.ReadOnlyMemory{`0})
  - cfEngine.DataStructure.ReadOnlyMemoryComparer`1.GetHashCode(System.ReadOnlyMemory{`0})
  - cfEngine.DataStructure.ReadOnlyMemoryComparer`1.Instance
  langs:
  - csharp
  - vb
  name: ReadOnlyMemoryComparer<T>
  nameWithType: ReadOnlyMemoryComparer<T>
  fullName: cfEngine.DataStructure.ReadOnlyMemoryComparer<T>
  type: Class
  source:
    id: ReadOnlyMemoryComparer
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/datastructure/MemoryDictionary.cs
    startLine: 5
  namespace: cfEngine.DataStructure
  syntax:
    content: 'public class ReadOnlyMemoryComparer<T> : IEqualityComparer<ReadOnlyMemory<T>>'
    typeParameters:
    - id: T
    content.vb: Public Class ReadOnlyMemoryComparer(Of T) Implements IEqualityComparer(Of ReadOnlyMemory(Of T))
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEqualityComparer{System.ReadOnlyMemory{{T}}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ReadOnlyMemoryComparer(Of T)
  fullName.vb: cfEngine.DataStructure.ReadOnlyMemoryComparer(Of T)
  name.vb: ReadOnlyMemoryComparer(Of T)
- uid: cfEngine.DataStructure.ReadOnlyMemoryComparer`1.Instance
  commentId: P:cfEngine.DataStructure.ReadOnlyMemoryComparer`1.Instance
  id: Instance
  parent: cfEngine.DataStructure.ReadOnlyMemoryComparer`1
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: ReadOnlyMemoryComparer<T>.Instance
  fullName: cfEngine.DataStructure.ReadOnlyMemoryComparer<T>.Instance
  type: Property
  source:
    id: Instance
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/datastructure/MemoryDictionary.cs
    startLine: 8
  namespace: cfEngine.DataStructure
  syntax:
    content: public static ReadOnlyMemoryComparer<T> Instance { get; }
    parameters: []
    return:
      type: cfEngine.DataStructure.ReadOnlyMemoryComparer`1
    content.vb: Public Shared ReadOnly Property Instance As ReadOnlyMemoryComparer(Of T)
  overload: cfEngine.DataStructure.ReadOnlyMemoryComparer`1.Instance*
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).Instance
  fullName.vb: cfEngine.DataStructure.ReadOnlyMemoryComparer(Of T).Instance
- uid: cfEngine.DataStructure.ReadOnlyMemoryComparer`1.Equals(System.ReadOnlyMemory{`0},System.ReadOnlyMemory{`0})
  commentId: M:cfEngine.DataStructure.ReadOnlyMemoryComparer`1.Equals(System.ReadOnlyMemory{`0},System.ReadOnlyMemory{`0})
  id: Equals(System.ReadOnlyMemory{`0},System.ReadOnlyMemory{`0})
  parent: cfEngine.DataStructure.ReadOnlyMemoryComparer`1
  langs:
  - csharp
  - vb
  name: Equals(ReadOnlyMemory<T>, ReadOnlyMemory<T>)
  nameWithType: ReadOnlyMemoryComparer<T>.Equals(ReadOnlyMemory<T>, ReadOnlyMemory<T>)
  fullName: cfEngine.DataStructure.ReadOnlyMemoryComparer<T>.Equals(System.ReadOnlyMemory<T>, System.ReadOnlyMemory<T>)
  type: Method
  source:
    id: Equals
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/datastructure/MemoryDictionary.cs
    startLine: 10
  namespace: cfEngine.DataStructure
  summary: Determines whether the specified objects are equal.
  example: []
  syntax:
    content: public bool Equals(ReadOnlyMemory<T> x, ReadOnlyMemory<T> y)
    parameters:
    - id: x
      type: System.ReadOnlyMemory{{T}}
      description: The first object of type <code class="paramref">T</code> to compare.
    - id: y
      type: System.ReadOnlyMemory{{T}}
      description: The second object of type <code class="paramref">T</code> to compare.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified objects are equal; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(x As ReadOnlyMemory(Of T), y As ReadOnlyMemory(Of T)) As Boolean
  overload: cfEngine.DataStructure.ReadOnlyMemoryComparer`1.Equals*
  implements:
  - System.Collections.Generic.IEqualityComparer{System.ReadOnlyMemory{{T}}}.Equals(System.ReadOnlyMemory{{T}},System.ReadOnlyMemory{{T}})
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).Equals(ReadOnlyMemory(Of T), ReadOnlyMemory(Of T))
  fullName.vb: cfEngine.DataStructure.ReadOnlyMemoryComparer(Of T).Equals(System.ReadOnlyMemory(Of T), System.ReadOnlyMemory(Of T))
  name.vb: Equals(ReadOnlyMemory(Of T), ReadOnlyMemory(Of T))
- uid: cfEngine.DataStructure.ReadOnlyMemoryComparer`1.GetHashCode(System.ReadOnlyMemory{`0})
  commentId: M:cfEngine.DataStructure.ReadOnlyMemoryComparer`1.GetHashCode(System.ReadOnlyMemory{`0})
  id: GetHashCode(System.ReadOnlyMemory{`0})
  parent: cfEngine.DataStructure.ReadOnlyMemoryComparer`1
  langs:
  - csharp
  - vb
  name: GetHashCode(ReadOnlyMemory<T>)
  nameWithType: ReadOnlyMemoryComparer<T>.GetHashCode(ReadOnlyMemory<T>)
  fullName: cfEngine.DataStructure.ReadOnlyMemoryComparer<T>.GetHashCode(System.ReadOnlyMemory<T>)
  type: Method
  source:
    id: GetHashCode
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/datastructure/MemoryDictionary.cs
    startLine: 12
  namespace: cfEngine.DataStructure
  summary: Returns a hash code for the specified object.
  example: []
  syntax:
    content: public int GetHashCode(ReadOnlyMemory<T> obj)
    parameters:
    - id: obj
      type: System.ReadOnlyMemory{{T}}
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> for which a hash code is to be returned.
    return:
      type: System.Int32
      description: A hash code for the specified object.
    content.vb: Public Function GetHashCode(obj As ReadOnlyMemory(Of T)) As Integer
  overload: cfEngine.DataStructure.ReadOnlyMemoryComparer`1.GetHashCode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The type of <code class="paramref">obj</code> is a reference type and <code class="paramref">obj</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  implements:
  - System.Collections.Generic.IEqualityComparer{System.ReadOnlyMemory{{T}}}.GetHashCode(System.ReadOnlyMemory{{T}})
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).GetHashCode(ReadOnlyMemory(Of T))
  fullName.vb: cfEngine.DataStructure.ReadOnlyMemoryComparer(Of T).GetHashCode(System.ReadOnlyMemory(Of T))
  name.vb: GetHashCode(ReadOnlyMemory(Of T))
references:
- uid: cfEngine.DataStructure
  commentId: N:cfEngine.DataStructure
  href: cfEngine.html
  name: cfEngine.DataStructure
  nameWithType: cfEngine.DataStructure
  fullName: cfEngine.DataStructure
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.DataStructure
    name: DataStructure
    href: cfEngine.DataStructure.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.DataStructure
    name: DataStructure
    href: cfEngine.DataStructure.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IEqualityComparer{System.ReadOnlyMemory{{T}}}
  commentId: T:System.Collections.Generic.IEqualityComparer{System.ReadOnlyMemory{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<ReadOnlyMemory<T>>
  nameWithType: IEqualityComparer<ReadOnlyMemory<T>>
  fullName: System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>
  nameWithType.vb: IEqualityComparer(Of ReadOnlyMemory(Of T))
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of System.ReadOnlyMemory(Of T))
  name.vb: IEqualityComparer(Of ReadOnlyMemory(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: cfEngine.DataStructure.ReadOnlyMemoryComparer`1.Instance*
  commentId: Overload:cfEngine.DataStructure.ReadOnlyMemoryComparer`1.Instance
  href: cfEngine.DataStructure.ReadOnlyMemoryComparer-1.html#cfEngine_DataStructure_ReadOnlyMemoryComparer_1_Instance
  name: Instance
  nameWithType: ReadOnlyMemoryComparer<T>.Instance
  fullName: cfEngine.DataStructure.ReadOnlyMemoryComparer<T>.Instance
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).Instance
  fullName.vb: cfEngine.DataStructure.ReadOnlyMemoryComparer(Of T).Instance
- uid: cfEngine.DataStructure.ReadOnlyMemoryComparer`1
  commentId: T:cfEngine.DataStructure.ReadOnlyMemoryComparer`1
  parent: cfEngine.DataStructure
  href: cfEngine.DataStructure.ReadOnlyMemoryComparer-1.html
  name: ReadOnlyMemoryComparer<T>
  nameWithType: ReadOnlyMemoryComparer<T>
  fullName: cfEngine.DataStructure.ReadOnlyMemoryComparer<T>
  nameWithType.vb: ReadOnlyMemoryComparer(Of T)
  fullName.vb: cfEngine.DataStructure.ReadOnlyMemoryComparer(Of T)
  name.vb: ReadOnlyMemoryComparer(Of T)
  spec.csharp:
  - uid: cfEngine.DataStructure.ReadOnlyMemoryComparer`1
    name: ReadOnlyMemoryComparer
    href: cfEngine.DataStructure.ReadOnlyMemoryComparer-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: cfEngine.DataStructure.ReadOnlyMemoryComparer`1
    name: ReadOnlyMemoryComparer
    href: cfEngine.DataStructure.ReadOnlyMemoryComparer-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: cfEngine.DataStructure.ReadOnlyMemoryComparer`1.Equals*
  commentId: Overload:cfEngine.DataStructure.ReadOnlyMemoryComparer`1.Equals
  href: cfEngine.DataStructure.ReadOnlyMemoryComparer-1.html#cfEngine_DataStructure_ReadOnlyMemoryComparer_1_Equals_System_ReadOnlyMemory__0__System_ReadOnlyMemory__0__
  name: Equals
  nameWithType: ReadOnlyMemoryComparer<T>.Equals
  fullName: cfEngine.DataStructure.ReadOnlyMemoryComparer<T>.Equals
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).Equals
  fullName.vb: cfEngine.DataStructure.ReadOnlyMemoryComparer(Of T).Equals
- uid: System.Collections.Generic.IEqualityComparer{System.ReadOnlyMemory{{T}}}.Equals(System.ReadOnlyMemory{{T}},System.ReadOnlyMemory{{T}})
  commentId: M:System.Collections.Generic.IEqualityComparer{System.ReadOnlyMemory{`0}}.Equals(System.ReadOnlyMemory{`0},System.ReadOnlyMemory{`0})
  parent: System.Collections.Generic.IEqualityComparer{System.ReadOnlyMemory{{T}}}
  definition: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.equals
  name: Equals(ReadOnlyMemory<T>, ReadOnlyMemory<T>)
  nameWithType: IEqualityComparer<ReadOnlyMemory<T>>.Equals(ReadOnlyMemory<T>, ReadOnlyMemory<T>)
  fullName: System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.Equals(System.ReadOnlyMemory<T>, System.ReadOnlyMemory<T>)
  nameWithType.vb: IEqualityComparer(Of ReadOnlyMemory(Of T)).Equals(ReadOnlyMemory(Of T), ReadOnlyMemory(Of T))
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of System.ReadOnlyMemory(Of T)).Equals(System.ReadOnlyMemory(Of T), System.ReadOnlyMemory(Of T))
  name.vb: Equals(ReadOnlyMemory(Of T), ReadOnlyMemory(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer{System.ReadOnlyMemory{`0}}.Equals(System.ReadOnlyMemory{`0},System.ReadOnlyMemory{`0})
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.equals
  - name: (
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer{System.ReadOnlyMemory{`0}}.Equals(System.ReadOnlyMemory{`0},System.ReadOnlyMemory{`0})
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.equals
  - name: (
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.ReadOnlyMemory{{T}}
  commentId: T:System.ReadOnlyMemory{`0}
  parent: System
  definition: System.ReadOnlyMemory`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<T>
  nameWithType: ReadOnlyMemory<T>
  fullName: System.ReadOnlyMemory<T>
  nameWithType.vb: ReadOnlyMemory(Of T)
  fullName.vb: System.ReadOnlyMemory(Of T)
  name.vb: ReadOnlyMemory(Of T)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.equals
  name: Equals(T, T)
  nameWithType: IEqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  nameWithType.vb: IEqualityComparer(Of T).Equals(T, T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.equals
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.equals
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.ReadOnlyMemory`1
  commentId: T:System.ReadOnlyMemory`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<T>
  nameWithType: ReadOnlyMemory<T>
  fullName: System.ReadOnlyMemory<T>
  nameWithType.vb: ReadOnlyMemory(Of T)
  fullName.vb: System.ReadOnlyMemory(Of T)
  name.vb: ReadOnlyMemory(Of T)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: cfEngine.DataStructure.ReadOnlyMemoryComparer`1.GetHashCode*
  commentId: Overload:cfEngine.DataStructure.ReadOnlyMemoryComparer`1.GetHashCode
  href: cfEngine.DataStructure.ReadOnlyMemoryComparer-1.html#cfEngine_DataStructure_ReadOnlyMemoryComparer_1_GetHashCode_System_ReadOnlyMemory__0__
  name: GetHashCode
  nameWithType: ReadOnlyMemoryComparer<T>.GetHashCode
  fullName: cfEngine.DataStructure.ReadOnlyMemoryComparer<T>.GetHashCode
  nameWithType.vb: ReadOnlyMemoryComparer(Of T).GetHashCode
  fullName.vb: cfEngine.DataStructure.ReadOnlyMemoryComparer(Of T).GetHashCode
- uid: System.Collections.Generic.IEqualityComparer{System.ReadOnlyMemory{{T}}}.GetHashCode(System.ReadOnlyMemory{{T}})
  commentId: M:System.Collections.Generic.IEqualityComparer{System.ReadOnlyMemory{`0}}.GetHashCode(System.ReadOnlyMemory{`0})
  parent: System.Collections.Generic.IEqualityComparer{System.ReadOnlyMemory{{T}}}
  definition: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.gethashcode
  name: GetHashCode(ReadOnlyMemory<T>)
  nameWithType: IEqualityComparer<ReadOnlyMemory<T>>.GetHashCode(ReadOnlyMemory<T>)
  fullName: System.Collections.Generic.IEqualityComparer<System.ReadOnlyMemory<T>>.GetHashCode(System.ReadOnlyMemory<T>)
  nameWithType.vb: IEqualityComparer(Of ReadOnlyMemory(Of T)).GetHashCode(ReadOnlyMemory(Of T))
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of System.ReadOnlyMemory(Of T)).GetHashCode(System.ReadOnlyMemory(Of T))
  name.vb: GetHashCode(ReadOnlyMemory(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer{System.ReadOnlyMemory{`0}}.GetHashCode(System.ReadOnlyMemory{`0})
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.gethashcode
  - name: (
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer{System.ReadOnlyMemory{`0}}.GetHashCode(System.ReadOnlyMemory{`0})
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.gethashcode
  - name: (
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.gethashcode
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: IEqualityComparer(Of T).GetHashCode(T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode(T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.gethashcode
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1.gethashcode
  - name: (
  - name: T
  - name: )
