### YamlMime:ManagedReference
items:
- uid: cfEngine.Rx.RtDictionary`2
  commentId: T:cfEngine.Rx.RtDictionary`2
  id: RtDictionary`2
  parent: cfEngine.Rx
  children:
  - cfEngine.Rx.RtDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  - cfEngine.Rx.RtDictionary`2.Add(`0,`1)
  - cfEngine.Rx.RtDictionary`2.Clear
  - cfEngine.Rx.RtDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  - cfEngine.Rx.RtDictionary`2.ContainsKey(`0)
  - cfEngine.Rx.RtDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  - cfEngine.Rx.RtDictionary`2.Count
  - cfEngine.Rx.RtDictionary`2.Dispose
  - cfEngine.Rx.RtDictionary`2.GetEnumerator
  - cfEngine.Rx.RtDictionary`2.IsReadOnly
  - cfEngine.Rx.RtDictionary`2.Item(`0)
  - cfEngine.Rx.RtDictionary`2.Keys
  - cfEngine.Rx.RtDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  - cfEngine.Rx.RtDictionary`2.Remove(`0)
  - cfEngine.Rx.RtDictionary`2.TryGetValue(`0,`1@)
  - cfEngine.Rx.RtDictionary`2.Upsert(`0,`1)
  - cfEngine.Rx.RtDictionary`2.Values
  langs:
  - csharp
  - vb
  name: RtDictionary<TKey, TValue>
  nameWithType: RtDictionary<TKey, TValue>
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>
  type: Class
  source:
    id: RtDictionary
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 6
  namespace: cfEngine.Rx
  syntax:
    content: 'public class RtDictionary<TKey, TValue> : RtReadOnlyDictionary<TKey, TValue>, IDisposable, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable'
    typeParameters:
    - id: TKey
    - id: TValue
    content.vb: Public Class RtDictionary(Of TKey, TValue) Inherits RtReadOnlyDictionary(Of TKey, TValue) Implements IDisposable, IReadOnlyDictionary(Of TKey, TValue), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEnumerable
  inheritance:
  - System.Object
  - cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}
  implements:
  - System.IDisposable
  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}
  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.Count
  - cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.ContainsKey({TKey})
  - cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
  - cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.Item({TKey})
  - cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.Keys
  - cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.Values
  - cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.RtPairs
  - cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.RtKeys
  - cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.RtValues
  - cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.GetEnumerator
  - cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CollectionEvents
  - cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Events
  - cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Dispose
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.cfEngine.Rx.Linq.selectKey``3(System.Func{{TKey},{TSelectedKey}})
  - cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.cfEngine.Rx.Linq.selectValue``3(System.Func{{TValue},{TSelectValue}})
  - cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.cfEngine.Rx.Linq.where``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  nameWithType.vb: RtDictionary(Of TKey, TValue)
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue)
  name.vb: RtDictionary(Of TKey, TValue)
- uid: cfEngine.Rx.RtDictionary`2.Dispose
  commentId: M:cfEngine.Rx.RtDictionary`2.Dispose
  id: Dispose
  parent: cfEngine.Rx.RtDictionary`2
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: RtDictionary<TKey, TValue>.Dispose()
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Dispose()
  type: Method
  source:
    id: Dispose
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 10
  namespace: cfEngine.Rx
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose()
  overridden: cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Dispose
  overload: cfEngine.Rx.RtDictionary`2.Dispose*
  nameWithType.vb: RtDictionary(Of TKey, TValue).Dispose()
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Dispose()
- uid: cfEngine.Rx.RtDictionary`2.Item(`0)
  commentId: P:cfEngine.Rx.RtDictionary`2.Item(`0)
  id: Item(`0)
  parent: cfEngine.Rx.RtDictionary`2
  langs:
  - csharp
  - vb
  name: this[TKey]
  nameWithType: RtDictionary<TKey, TValue>.this[TKey]
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.this[TKey]
  type: Property
  source:
    id: this[]
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 18
  namespace: cfEngine.Rx
  summary: Gets the element that has the specified key in the read-only dictionary.
  example: []
  syntax:
    content: public override TValue this[TKey key] { get; }
    parameters:
    - id: key
      type: '{TKey}'
      description: The key to locate.
    return:
      type: '{TValue}'
      description: The element that has the specified key in the read-only dictionary.
    content.vb: Public Overrides ReadOnly Default Property this[](key As TKey) As TValue
  overridden: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.Item({TKey})
  overload: cfEngine.Rx.RtDictionary`2.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">key</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: The property is retrieved and <code class="paramref">key</code> is not found.
  nameWithType.vb: RtDictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
- uid: cfEngine.Rx.RtDictionary`2.Keys
  commentId: P:cfEngine.Rx.RtDictionary`2.Keys
  id: Keys
  parent: cfEngine.Rx.RtDictionary`2
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: RtDictionary<TKey, TValue>.Keys
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Keys
  type: Property
  source:
    id: Keys
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 19
  namespace: cfEngine.Rx
  summary: Gets an enumerable collection that contains the keys in the read-only dictionary.
  example: []
  syntax:
    content: public override IEnumerable<TKey> Keys { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{{TKey}}
      description: An enumerable collection that contains the keys in the read-only dictionary.
    content.vb: Public Overrides ReadOnly Property Keys As IEnumerable(Of TKey)
  overridden: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.Keys
  overload: cfEngine.Rx.RtDictionary`2.Keys*
  nameWithType.vb: RtDictionary(Of TKey, TValue).Keys
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Keys
- uid: cfEngine.Rx.RtDictionary`2.Values
  commentId: P:cfEngine.Rx.RtDictionary`2.Values
  id: Values
  parent: cfEngine.Rx.RtDictionary`2
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: RtDictionary<TKey, TValue>.Values
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Values
  type: Property
  source:
    id: Values
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 20
  namespace: cfEngine.Rx
  summary: Gets an enumerable collection that contains the values in the read-only dictionary.
  example: []
  syntax:
    content: public override IEnumerable<TValue> Values { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{{TValue}}
      description: An enumerable collection that contains the values in the read-only dictionary.
    content.vb: Public Overrides ReadOnly Property Values As IEnumerable(Of TValue)
  overridden: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.Values
  overload: cfEngine.Rx.RtDictionary`2.Values*
  nameWithType.vb: RtDictionary(Of TKey, TValue).Values
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Values
- uid: cfEngine.Rx.RtDictionary`2.GetEnumerator
  commentId: M:cfEngine.Rx.RtDictionary`2.GetEnumerator
  id: GetEnumerator
  parent: cfEngine.Rx.RtDictionary`2
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: RtDictionary<TKey, TValue>.GetEnumerator()
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 22
  namespace: cfEngine.Rx
  summary: Returns an enumerator that iterates through the collection.
  example: []
  syntax:
    content: public override IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: An enumerator that can be used to iterate through the collection.
    content.vb: Public Overrides Function GetEnumerator() As IEnumerator(Of KeyValuePair(Of TKey, TValue))
  overridden: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.GetEnumerator
  overload: cfEngine.Rx.RtDictionary`2.GetEnumerator*
  nameWithType.vb: RtDictionary(Of TKey, TValue).GetEnumerator()
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).GetEnumerator()
- uid: cfEngine.Rx.RtDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:cfEngine.Rx.RtDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  id: Add(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: cfEngine.Rx.RtDictionary`2
  langs:
  - csharp
  - vb
  name: Add(KeyValuePair<TKey, TValue>)
  nameWithType: RtDictionary<TKey, TValue>.Add(KeyValuePair<TKey, TValue>)
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  source:
    id: Add
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 32
  namespace: cfEngine.Rx
  summary: Adds a key-value pair to the dictionary.
  example: []
  syntax:
    content: public void Add(KeyValuePair<TKey, TValue> kvp)
    parameters:
    - id: kvp
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
      description: The key-value pair to add.
    content.vb: Public Sub Add(kvp As KeyValuePair(Of TKey, TValue))
  overload: cfEngine.Rx.RtDictionary`2.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when the key already exists.
  nameWithType.vb: RtDictionary(Of TKey, TValue).Add(KeyValuePair(Of TKey, TValue))
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Add(KeyValuePair(Of TKey, TValue))
- uid: cfEngine.Rx.RtDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:cfEngine.Rx.RtDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  id: Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: cfEngine.Rx.RtDictionary`2
  langs:
  - csharp
  - vb
  name: Contains(KeyValuePair<TKey, TValue>)
  nameWithType: RtDictionary<TKey, TValue>.Contains(KeyValuePair<TKey, TValue>)
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  source:
    id: Contains
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 45
  namespace: cfEngine.Rx
  syntax:
    content: public bool Contains(KeyValuePair<TKey, TValue> kvp)
    parameters:
    - id: kvp
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
    return:
      type: System.Boolean
    content.vb: Public Function Contains(kvp As KeyValuePair(Of TKey, TValue)) As Boolean
  overload: cfEngine.Rx.RtDictionary`2.Contains*
  nameWithType.vb: RtDictionary(Of TKey, TValue).Contains(KeyValuePair(Of TKey, TValue))
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Contains(KeyValuePair(Of TKey, TValue))
- uid: cfEngine.Rx.RtDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  commentId: M:cfEngine.Rx.RtDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  id: CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  parent: cfEngine.Rx.RtDictionary`2
  langs:
  - csharp
  - vb
  name: CopyTo(KeyValuePair<TKey, TValue>[], int)
  nameWithType: RtDictionary<TKey, TValue>.CopyTo(KeyValuePair<TKey, TValue>[], int)
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], int)
  type: Method
  source:
    id: CopyTo
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 50
  namespace: cfEngine.Rx
  syntax:
    content: public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]
    - id: arrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(array As KeyValuePair(Of TKey, TValue)(), arrayIndex As Integer)
  overload: cfEngine.Rx.RtDictionary`2.CopyTo*
  nameWithType.vb: RtDictionary(Of TKey, TValue).CopyTo(KeyValuePair(Of TKey, TValue)(), Integer)
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), Integer)
  name.vb: CopyTo(KeyValuePair(Of TKey, TValue)(), Integer)
- uid: cfEngine.Rx.RtDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:cfEngine.Rx.RtDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  id: Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: cfEngine.Rx.RtDictionary`2
  langs:
  - csharp
  - vb
  name: Remove(KeyValuePair<TKey, TValue>)
  nameWithType: RtDictionary<TKey, TValue>.Remove(KeyValuePair<TKey, TValue>)
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  source:
    id: Remove
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 55
  namespace: cfEngine.Rx
  syntax:
    content: public bool Remove(KeyValuePair<TKey, TValue> kvp)
    parameters:
    - id: kvp
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
    return:
      type: System.Boolean
    content.vb: Public Function Remove(kvp As KeyValuePair(Of TKey, TValue)) As Boolean
  overload: cfEngine.Rx.RtDictionary`2.Remove*
  nameWithType.vb: RtDictionary(Of TKey, TValue).Remove(KeyValuePair(Of TKey, TValue))
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Remove(KeyValuePair(Of TKey, TValue))
- uid: cfEngine.Rx.RtDictionary`2.Count
  commentId: P:cfEngine.Rx.RtDictionary`2.Count
  id: Count
  parent: cfEngine.Rx.RtDictionary`2
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: RtDictionary<TKey, TValue>.Count
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Count
  type: Property
  source:
    id: Count
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 69
  namespace: cfEngine.Rx
  summary: Gets the number of elements in the collection.
  example: []
  syntax:
    content: public override int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: The number of elements in the collection.
    content.vb: Public Overrides ReadOnly Property Count As Integer
  overridden: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.Count
  overload: cfEngine.Rx.RtDictionary`2.Count*
  nameWithType.vb: RtDictionary(Of TKey, TValue).Count
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Count
- uid: cfEngine.Rx.RtDictionary`2.IsReadOnly
  commentId: P:cfEngine.Rx.RtDictionary`2.IsReadOnly
  id: IsReadOnly
  parent: cfEngine.Rx.RtDictionary`2
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: RtDictionary<TKey, TValue>.IsReadOnly
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.IsReadOnly
  type: Property
  source:
    id: IsReadOnly
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 70
  namespace: cfEngine.Rx
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: cfEngine.Rx.RtDictionary`2.IsReadOnly*
  nameWithType.vb: RtDictionary(Of TKey, TValue).IsReadOnly
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).IsReadOnly
- uid: cfEngine.Rx.RtDictionary`2.ContainsKey(`0)
  commentId: M:cfEngine.Rx.RtDictionary`2.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: cfEngine.Rx.RtDictionary`2
  langs:
  - csharp
  - vb
  name: ContainsKey(TKey)
  nameWithType: RtDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.ContainsKey(TKey)
  type: Method
  source:
    id: ContainsKey
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 72
  namespace: cfEngine.Rx
  summary: Determines whether the read-only dictionary contains an element that has the specified key.
  example: []
  syntax:
    content: public override bool ContainsKey(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key to locate.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the read-only dictionary contains an element that has the specified key; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function ContainsKey(key As TKey) As Boolean
  overridden: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.ContainsKey({TKey})
  overload: cfEngine.Rx.RtDictionary`2.ContainsKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">key</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  nameWithType.vb: RtDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).ContainsKey(TKey)
- uid: cfEngine.Rx.RtDictionary`2.TryGetValue(`0,`1@)
  commentId: M:cfEngine.Rx.RtDictionary`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: cfEngine.Rx.RtDictionary`2
  langs:
  - csharp
  - vb
  name: TryGetValue(TKey, out TValue)
  nameWithType: RtDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  type: Method
  source:
    id: TryGetValue
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 78
  namespace: cfEngine.Rx
  summary: Gets the value that is associated with the specified key.
  example: []
  syntax:
    content: public override bool TryGetValue(TKey key, out TValue value)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key to locate.
    - id: value
      type: '{TValue}'
      description: When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <code class="paramref">value</code> parameter. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the object that implements the <xref href="System.Collections.Generic.IReadOnlyDictionary%602" data-throw-if-not-resolved="false"></xref> interface contains an element that has the specified key; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function TryGetValue(key As TKey, value As TValue) As Boolean
  overridden: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
  overload: cfEngine.Rx.RtDictionary`2.TryGetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">key</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  nameWithType.vb: RtDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
- uid: cfEngine.Rx.RtDictionary`2.Add(`0,`1)
  commentId: M:cfEngine.Rx.RtDictionary`2.Add(`0,`1)
  id: Add(`0,`1)
  parent: cfEngine.Rx.RtDictionary`2
  langs:
  - csharp
  - vb
  name: Add(TKey, TValue)
  nameWithType: RtDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Add(TKey, TValue)
  type: Method
  source:
    id: Add
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 84
  namespace: cfEngine.Rx
  syntax:
    content: public void Add(TKey key, TValue value)
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    content.vb: Public Sub Add(key As TKey, value As TValue)
  overload: cfEngine.Rx.RtDictionary`2.Add*
  nameWithType.vb: RtDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Add(TKey, TValue)
- uid: cfEngine.Rx.RtDictionary`2.Upsert(`0,`1)
  commentId: M:cfEngine.Rx.RtDictionary`2.Upsert(`0,`1)
  id: Upsert(`0,`1)
  parent: cfEngine.Rx.RtDictionary`2
  langs:
  - csharp
  - vb
  name: Upsert(TKey, TValue)
  nameWithType: RtDictionary<TKey, TValue>.Upsert(TKey, TValue)
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Upsert(TKey, TValue)
  type: Method
  source:
    id: Upsert
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 96
  namespace: cfEngine.Rx
  syntax:
    content: public void Upsert(TKey key, TValue value)
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    content.vb: Public Sub Upsert(key As TKey, value As TValue)
  overload: cfEngine.Rx.RtDictionary`2.Upsert*
  nameWithType.vb: RtDictionary(Of TKey, TValue).Upsert(TKey, TValue)
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Upsert(TKey, TValue)
- uid: cfEngine.Rx.RtDictionary`2.Remove(`0)
  commentId: M:cfEngine.Rx.RtDictionary`2.Remove(`0)
  id: Remove(`0)
  parent: cfEngine.Rx.RtDictionary`2
  langs:
  - csharp
  - vb
  name: Remove(TKey)
  nameWithType: RtDictionary<TKey, TValue>.Remove(TKey)
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Remove(TKey)
  type: Method
  source:
    id: Remove
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 113
  namespace: cfEngine.Rx
  syntax:
    content: public bool Remove(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: System.Boolean
    content.vb: Public Function Remove(key As TKey) As Boolean
  overload: cfEngine.Rx.RtDictionary`2.Remove*
  nameWithType.vb: RtDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Remove(TKey)
- uid: cfEngine.Rx.RtDictionary`2.Clear
  commentId: M:cfEngine.Rx.RtDictionary`2.Clear
  id: Clear
  parent: cfEngine.Rx.RtDictionary`2
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: RtDictionary<TKey, TValue>.Clear()
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Clear()
  type: Method
  source:
    id: Clear
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtDictionary/RtDictionary.cs
    startLine: 122
  namespace: cfEngine.Rx
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: cfEngine.Rx.RtDictionary`2.Clear*
  nameWithType.vb: RtDictionary(Of TKey, TValue).Clear()
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Clear()
references:
- uid: cfEngine.Rx
  commentId: N:cfEngine.Rx
  href: cfEngine.html
  name: cfEngine.Rx
  nameWithType: cfEngine.Rx
  fullName: cfEngine.Rx
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Rx
    name: Rx
    href: cfEngine.Rx.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Rx
    name: Rx
    href: cfEngine.Rx.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: cfEngine.Rx
  definition: cfEngine.Rx.RtCollection`1
  href: cfEngine.Rx.RtCollection-1.html
  name: RtCollection<KeyValuePair<TKey, TValue>>
  nameWithType: RtCollection<KeyValuePair<TKey, TValue>>
  fullName: cfEngine.Rx.RtCollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: RtCollection(Of KeyValuePair(Of TKey, TValue))
  fullName.vb: cfEngine.Rx.RtCollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: RtCollection(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: cfEngine.Rx.RtCollection`1
    name: RtCollection
    href: cfEngine.Rx.RtCollection-1.html
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: cfEngine.Rx.RtCollection`1
    name: RtCollection
    href: cfEngine.Rx.RtCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}
  commentId: T:cfEngine.Rx.RtReadOnlyDictionary{``0,``1}
  parent: cfEngine.Rx
  definition: cfEngine.Rx.RtReadOnlyDictionary`2
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  name: RtReadOnlyDictionary<TKey, TValue>
  nameWithType: RtReadOnlyDictionary<TKey, TValue>
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue)
  name.vb: RtReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{`0,`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<KeyValuePair<TKey, TValue>>
  nameWithType: IReadOnlyCollection<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<TKey, TValue>>
  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.Count
  commentId: P:cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.Count
  parent: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}
  definition: cfEngine.Rx.RtReadOnlyDictionary`2.Count
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_Count
  name: Count
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.Count
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.Count
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).Count
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).Count
- uid: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.ContainsKey({TKey})
  commentId: M:cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.ContainsKey(`0)
  parent: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}
  definition: cfEngine.Rx.RtReadOnlyDictionary`2.ContainsKey(`0)
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_ContainsKey__0_
  name: ContainsKey(TKey)
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.ContainsKey(`0)
    name: ContainsKey
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_ContainsKey__0_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.ContainsKey(`0)
    name: ContainsKey
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_ContainsKey__0_
  - name: (
  - name: TKey
  - name: )
- uid: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
  commentId: M:cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.TryGetValue(`0,`1@)
  parent: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}
  definition: cfEngine.Rx.RtReadOnlyDictionary`2.TryGetValue(`0,`1@)
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_TryGetValue__0__1__
  name: TryGetValue(TKey, out TValue)
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.TryGetValue(`0,`1@)
    name: TryGetValue
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_TryGetValue__0__1__
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.TryGetValue(`0,`1@)
    name: TryGetValue
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_TryGetValue__0__1__
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.Item({TKey})
  commentId: P:cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.Item(`0)
  parent: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}
  definition: cfEngine.Rx.RtReadOnlyDictionary`2.Item(`0)
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_Item__0_
  name: this[TKey]
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.this[TKey]
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.this[TKey]
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
  spec.csharp:
  - name: this
  - name: '['
  - name: TKey
  - name: ']'
  spec.vb:
  - uid: cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.Item(`0)
    name: this[]
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_Item__0_
  - name: (
  - name: TKey
  - name: )
- uid: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.Keys
  commentId: P:cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.Keys
  parent: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}
  definition: cfEngine.Rx.RtReadOnlyDictionary`2.Keys
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_Keys
  name: Keys
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.Keys
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.Keys
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).Keys
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).Keys
- uid: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.Values
  commentId: P:cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.Values
  parent: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}
  definition: cfEngine.Rx.RtReadOnlyDictionary`2.Values
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_Values
  name: Values
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.Values
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.Values
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).Values
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).Values
- uid: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.RtPairs
  commentId: P:cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.RtPairs
  parent: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}
  definition: cfEngine.Rx.RtReadOnlyDictionary`2.RtPairs
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_RtPairs
  name: RtPairs
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.RtPairs
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.RtPairs
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).RtPairs
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).RtPairs
- uid: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.RtKeys
  commentId: P:cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.RtKeys
  parent: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}
  definition: cfEngine.Rx.RtReadOnlyDictionary`2.RtKeys
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_RtKeys
  name: RtKeys
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.RtKeys
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.RtKeys
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).RtKeys
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).RtKeys
- uid: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.RtValues
  commentId: P:cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.RtValues
  parent: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}
  definition: cfEngine.Rx.RtReadOnlyDictionary`2.RtValues
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_RtValues
  name: RtValues
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.RtValues
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.RtValues
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).RtValues
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).RtValues
- uid: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}.GetEnumerator
  commentId: M:cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.GetEnumerator
  parent: cfEngine.Rx.RtReadOnlyDictionary{{TKey},{TValue}}
  definition: cfEngine.Rx.RtReadOnlyDictionary`2.GetEnumerator
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_GetEnumerator
  name: GetEnumerator()
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.GetEnumerator()
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.GetEnumerator()
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).GetEnumerator()
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).GetEnumerator()
  spec.csharp:
  - uid: cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.GetEnumerator
    name: GetEnumerator
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_GetEnumerator
  - name: (
  - name: )
  spec.vb:
  - uid: cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.GetEnumerator
    name: GetEnumerator
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_GetEnumerator
  - name: (
  - name: )
- uid: cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CollectionEvents
  commentId: P:cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{`0,`1}}.CollectionEvents
  parent: cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: cfEngine.Rx.RtCollection`1.CollectionEvents
  href: cfEngine.Rx.RtCollection-1.html#cfEngine_Rx_RtCollection_1_CollectionEvents
  name: CollectionEvents
  nameWithType: RtCollection<KeyValuePair<TKey, TValue>>.CollectionEvents
  fullName: cfEngine.Rx.RtCollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CollectionEvents
  nameWithType.vb: RtCollection(Of KeyValuePair(Of TKey, TValue)).CollectionEvents
  fullName.vb: cfEngine.Rx.RtCollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CollectionEvents
- uid: cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Events
  commentId: P:cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Events
  parent: cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: cfEngine.Rx.RtCollection`1.Events
  href: cfEngine.Rx.RtCollection-1.html#cfEngine_Rx_RtCollection_1_Events
  name: Events
  nameWithType: RtCollection<KeyValuePair<TKey, TValue>>.Events
  fullName: cfEngine.Rx.RtCollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Events
  nameWithType.vb: RtCollection(Of KeyValuePair(Of TKey, TValue)).Events
  fullName.vb: cfEngine.Rx.RtCollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Events
- uid: cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Dispose
  commentId: M:cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Dispose
  parent: cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: cfEngine.Rx.RtCollection`1.Dispose
  href: cfEngine.Rx.RtCollection-1.html#cfEngine_Rx_RtCollection_1_Dispose
  name: Dispose()
  nameWithType: RtCollection<KeyValuePair<TKey, TValue>>.Dispose()
  fullName: cfEngine.Rx.RtCollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Dispose()
  nameWithType.vb: RtCollection(Of KeyValuePair(Of TKey, TValue)).Dispose()
  fullName.vb: cfEngine.Rx.RtCollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Dispose()
  spec.csharp:
  - uid: cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Dispose
    name: Dispose
    href: cfEngine.Rx.RtCollection-1.html#cfEngine_Rx_RtCollection_1_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: cfEngine.Rx.RtCollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Dispose
    name: Dispose
    href: cfEngine.Rx.RtCollection-1.html#cfEngine_Rx_RtCollection_1_Dispose
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.cfEngine.Rx.Linq.selectKey``3(System.Func{{TKey},{TSelectedKey}})
  commentId: M:cfEngine.Rx.Linq.selectKey``3(cfEngine.Rx.RtReadOnlyDictionary{``0,``2},System.Func{``0,``1})
  parent: cfEngine.Rx.Linq
  definition: cfEngine.Rx.Linq.selectKey``3(cfEngine.Rx.RtReadOnlyDictionary{``0,``2},System.Func{``0,``1})
  href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_selectKey__3_cfEngine_Rx_RtReadOnlyDictionary___0___2__System_Func___0___1__
  name: selectKey<TKey, TSelectedKey, TValue>(RtReadOnlyDictionary<TKey, TValue>, Func<TKey, TSelectedKey>)
  nameWithType: Linq.selectKey<TKey, TSelectedKey, TValue>(RtReadOnlyDictionary<TKey, TValue>, Func<TKey, TSelectedKey>)
  fullName: cfEngine.Rx.Linq.selectKey<TKey, TSelectedKey, TValue>(cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>, System.Func<TKey, TSelectedKey>)
  nameWithType.vb: Linq.selectKey(Of TKey, TSelectedKey, TValue)(RtReadOnlyDictionary(Of TKey, TValue), Func(Of TKey, TSelectedKey))
  fullName.vb: cfEngine.Rx.Linq.selectKey(Of TKey, TSelectedKey, TValue)(cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue), System.Func(Of TKey, TSelectedKey))
  name.vb: selectKey(Of TKey, TSelectedKey, TValue)(RtReadOnlyDictionary(Of TKey, TValue), Func(Of TKey, TSelectedKey))
  spec.csharp:
  - uid: cfEngine.Rx.Linq.selectKey``3(cfEngine.Rx.RtReadOnlyDictionary{`0,`1},System.Func{`0,``1})
    name: selectKey
    href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_selectKey__3_cfEngine_Rx_RtReadOnlyDictionary___0___2__System_Func___0___1__
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TSelectedKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: (
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TSelectedKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: cfEngine.Rx.Linq.selectKey``3(cfEngine.Rx.RtReadOnlyDictionary{`0,`1},System.Func{`0,``1})
    name: selectKey
    href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_selectKey__3_cfEngine_Rx_RtReadOnlyDictionary___0___2__System_Func___0___1__
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TSelectedKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TSelectedKey
  - name: )
  - name: )
- uid: cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.cfEngine.Rx.Linq.selectValue``3(System.Func{{TValue},{TSelectValue}})
  commentId: M:cfEngine.Rx.Linq.selectValue``3(cfEngine.Rx.RtReadOnlyDictionary{``0,``1},System.Func{``1,``2})
  parent: cfEngine.Rx.Linq
  definition: cfEngine.Rx.Linq.selectValue``3(cfEngine.Rx.RtReadOnlyDictionary{``0,``1},System.Func{``1,``2})
  href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_selectValue__3_cfEngine_Rx_RtReadOnlyDictionary___0___1__System_Func___1___2__
  name: selectValue<TKey, TValue, TSelectValue>(RtReadOnlyDictionary<TKey, TValue>, Func<TValue, TSelectValue>)
  nameWithType: Linq.selectValue<TKey, TValue, TSelectValue>(RtReadOnlyDictionary<TKey, TValue>, Func<TValue, TSelectValue>)
  fullName: cfEngine.Rx.Linq.selectValue<TKey, TValue, TSelectValue>(cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>, System.Func<TValue, TSelectValue>)
  nameWithType.vb: Linq.selectValue(Of TKey, TValue, TSelectValue)(RtReadOnlyDictionary(Of TKey, TValue), Func(Of TValue, TSelectValue))
  fullName.vb: cfEngine.Rx.Linq.selectValue(Of TKey, TValue, TSelectValue)(cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue), System.Func(Of TValue, TSelectValue))
  name.vb: selectValue(Of TKey, TValue, TSelectValue)(RtReadOnlyDictionary(Of TKey, TValue), Func(Of TValue, TSelectValue))
  spec.csharp:
  - uid: cfEngine.Rx.Linq.selectValue``3(cfEngine.Rx.RtReadOnlyDictionary{`0,`1},System.Func{`1,``2})
    name: selectValue
    href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_selectValue__3_cfEngine_Rx_RtReadOnlyDictionary___0___1__System_Func___1___2__
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TSelectValue
  - name: '>'
  - name: (
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TValue
  - name: ','
  - name: " "
  - name: TSelectValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: cfEngine.Rx.Linq.selectValue``3(cfEngine.Rx.RtReadOnlyDictionary{`0,`1},System.Func{`1,``2})
    name: selectValue
    href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_selectValue__3_cfEngine_Rx_RtReadOnlyDictionary___0___1__System_Func___1___2__
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TSelectValue
  - name: )
  - name: (
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TSelectValue
  - name: )
  - name: )
- uid: cfEngine.Rx.RtReadOnlyDictionary{`0,`1}.cfEngine.Rx.Linq.where``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  commentId: M:cfEngine.Rx.Linq.where``2(cfEngine.Rx.RtReadOnlyDictionary{``0,``1},System.Func{System.Collections.Generic.KeyValuePair{``0,``1},System.Boolean})
  parent: cfEngine.Rx.Linq
  definition: cfEngine.Rx.Linq.where``2(cfEngine.Rx.RtReadOnlyDictionary{``0,``1},System.Func{System.Collections.Generic.KeyValuePair{``0,``1},System.Boolean})
  href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_where__2_cfEngine_Rx_RtReadOnlyDictionary___0___1__System_Func_System_Collections_Generic_KeyValuePair___0___1__System_Boolean__
  name: where<TKey, TValue>(RtReadOnlyDictionary<TKey, TValue>, Func<KeyValuePair<TKey, TValue>, bool>)
  nameWithType: Linq.where<TKey, TValue>(RtReadOnlyDictionary<TKey, TValue>, Func<KeyValuePair<TKey, TValue>, bool>)
  fullName: cfEngine.Rx.Linq.where<TKey, TValue>(cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, bool>)
  nameWithType.vb: Linq.where(Of TKey, TValue)(RtReadOnlyDictionary(Of TKey, TValue), Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  fullName.vb: cfEngine.Rx.Linq.where(Of TKey, TValue)(cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), Boolean))
  name.vb: where(Of TKey, TValue)(RtReadOnlyDictionary(Of TKey, TValue), Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  spec.csharp:
  - uid: cfEngine.Rx.Linq.where``2(cfEngine.Rx.RtReadOnlyDictionary{`0,`1},System.Func{System.Collections.Generic.KeyValuePair{`0,`1},System.Boolean})
    name: where
    href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_where__2_cfEngine_Rx_RtReadOnlyDictionary___0___1__System_Func_System_Collections_Generic_KeyValuePair___0___1__System_Boolean__
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: (
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: cfEngine.Rx.Linq.where``2(cfEngine.Rx.RtReadOnlyDictionary{`0,`1},System.Func{System.Collections.Generic.KeyValuePair{`0,`1},System.Boolean})
    name: where
    href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_where__2_cfEngine_Rx_RtReadOnlyDictionary___0___1__System_Func_System_Collections_Generic_KeyValuePair___0___1__System_Boolean__
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: cfEngine.Rx.RtCollection`1
  commentId: T:cfEngine.Rx.RtCollection`1
  href: cfEngine.Rx.RtCollection-1.html
  name: RtCollection<TEventArgs>
  nameWithType: RtCollection<TEventArgs>
  fullName: cfEngine.Rx.RtCollection<TEventArgs>
  nameWithType.vb: RtCollection(Of TEventArgs)
  fullName.vb: cfEngine.Rx.RtCollection(Of TEventArgs)
  name.vb: RtCollection(Of TEventArgs)
  spec.csharp:
  - uid: cfEngine.Rx.RtCollection`1
    name: RtCollection
    href: cfEngine.Rx.RtCollection-1.html
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: cfEngine.Rx.RtCollection`1
    name: RtCollection
    href: cfEngine.Rx.RtCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: cfEngine.Rx.RtReadOnlyDictionary`2
  commentId: T:cfEngine.Rx.RtReadOnlyDictionary`2
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  name: RtReadOnlyDictionary<TKey, TValue>
  nameWithType: RtReadOnlyDictionary<TKey, TValue>
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue)
  name.vb: RtReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: cfEngine.Rx.RtReadOnlyDictionary`2.Count
  commentId: P:cfEngine.Rx.RtReadOnlyDictionary`2.Count
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_Count
  name: Count
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.Count
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.Count
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).Count
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).Count
- uid: cfEngine.Rx.RtReadOnlyDictionary`2.ContainsKey(`0)
  commentId: M:cfEngine.Rx.RtReadOnlyDictionary`2.ContainsKey(`0)
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_ContainsKey__0_
  name: ContainsKey(TKey)
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2.ContainsKey(`0)
    name: ContainsKey
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_ContainsKey__0_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2.ContainsKey(`0)
    name: ContainsKey
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_ContainsKey__0_
  - name: (
  - name: TKey
  - name: )
- uid: cfEngine.Rx.RtReadOnlyDictionary`2.TryGetValue(`0,`1@)
  commentId: M:cfEngine.Rx.RtReadOnlyDictionary`2.TryGetValue(`0,`1@)
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_TryGetValue__0__1__
  name: TryGetValue(TKey, out TValue)
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_TryGetValue__0__1__
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_TryGetValue__0__1__
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: cfEngine.Rx.RtReadOnlyDictionary`2.Item(`0)
  commentId: P:cfEngine.Rx.RtReadOnlyDictionary`2.Item(`0)
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_Item__0_
  name: this[TKey]
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.this[TKey]
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.this[TKey]
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
  spec.csharp:
  - name: this
  - name: '['
  - name: TKey
  - name: ']'
  spec.vb:
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2.Item(`0)
    name: this[]
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_Item__0_
  - name: (
  - name: TKey
  - name: )
- uid: cfEngine.Rx.RtReadOnlyDictionary`2.Keys
  commentId: P:cfEngine.Rx.RtReadOnlyDictionary`2.Keys
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_Keys
  name: Keys
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.Keys
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.Keys
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).Keys
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).Keys
- uid: cfEngine.Rx.RtReadOnlyDictionary`2.Values
  commentId: P:cfEngine.Rx.RtReadOnlyDictionary`2.Values
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_Values
  name: Values
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.Values
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.Values
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).Values
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).Values
- uid: cfEngine.Rx.RtReadOnlyDictionary`2.RtPairs
  commentId: P:cfEngine.Rx.RtReadOnlyDictionary`2.RtPairs
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_RtPairs
  name: RtPairs
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.RtPairs
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.RtPairs
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).RtPairs
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).RtPairs
- uid: cfEngine.Rx.RtReadOnlyDictionary`2.RtKeys
  commentId: P:cfEngine.Rx.RtReadOnlyDictionary`2.RtKeys
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_RtKeys
  name: RtKeys
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.RtKeys
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.RtKeys
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).RtKeys
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).RtKeys
- uid: cfEngine.Rx.RtReadOnlyDictionary`2.RtValues
  commentId: P:cfEngine.Rx.RtReadOnlyDictionary`2.RtValues
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_RtValues
  name: RtValues
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.RtValues
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.RtValues
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).RtValues
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).RtValues
- uid: cfEngine.Rx.RtReadOnlyDictionary`2.GetEnumerator
  commentId: M:cfEngine.Rx.RtReadOnlyDictionary`2.GetEnumerator
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_GetEnumerator
  name: GetEnumerator()
  nameWithType: RtReadOnlyDictionary<TKey, TValue>.GetEnumerator()
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>.GetEnumerator()
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue).GetEnumerator()
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue).GetEnumerator()
  spec.csharp:
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2.GetEnumerator
    name: GetEnumerator
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_GetEnumerator
  - name: (
  - name: )
  spec.vb:
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2.GetEnumerator
    name: GetEnumerator
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html#cfEngine_Rx_RtReadOnlyDictionary_2_GetEnumerator
  - name: (
  - name: )
- uid: cfEngine.Rx.RtCollection`1.CollectionEvents
  commentId: P:cfEngine.Rx.RtCollection`1.CollectionEvents
  href: cfEngine.Rx.RtCollection-1.html#cfEngine_Rx_RtCollection_1_CollectionEvents
  name: CollectionEvents
  nameWithType: RtCollection<TEventArgs>.CollectionEvents
  fullName: cfEngine.Rx.RtCollection<TEventArgs>.CollectionEvents
  nameWithType.vb: RtCollection(Of TEventArgs).CollectionEvents
  fullName.vb: cfEngine.Rx.RtCollection(Of TEventArgs).CollectionEvents
- uid: cfEngine.Rx.RtCollection`1.Events
  commentId: P:cfEngine.Rx.RtCollection`1.Events
  href: cfEngine.Rx.RtCollection-1.html#cfEngine_Rx_RtCollection_1_Events
  name: Events
  nameWithType: RtCollection<TEventArgs>.Events
  fullName: cfEngine.Rx.RtCollection<TEventArgs>.Events
  nameWithType.vb: RtCollection(Of TEventArgs).Events
  fullName.vb: cfEngine.Rx.RtCollection(Of TEventArgs).Events
- uid: cfEngine.Rx.RtCollection`1.Dispose
  commentId: M:cfEngine.Rx.RtCollection`1.Dispose
  href: cfEngine.Rx.RtCollection-1.html#cfEngine_Rx_RtCollection_1_Dispose
  name: Dispose()
  nameWithType: RtCollection<TEventArgs>.Dispose()
  fullName: cfEngine.Rx.RtCollection<TEventArgs>.Dispose()
  nameWithType.vb: RtCollection(Of TEventArgs).Dispose()
  fullName.vb: cfEngine.Rx.RtCollection(Of TEventArgs).Dispose()
  spec.csharp:
  - uid: cfEngine.Rx.RtCollection`1.Dispose
    name: Dispose
    href: cfEngine.Rx.RtCollection-1.html#cfEngine_Rx_RtCollection_1_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: cfEngine.Rx.RtCollection`1.Dispose
    name: Dispose
    href: cfEngine.Rx.RtCollection-1.html#cfEngine_Rx_RtCollection_1_Dispose
  - name: (
  - name: )
- uid: cfEngine.Rx.Linq.selectKey``3(cfEngine.Rx.RtReadOnlyDictionary{``0,``2},System.Func{``0,``1})
  commentId: M:cfEngine.Rx.Linq.selectKey``3(cfEngine.Rx.RtReadOnlyDictionary{``0,``2},System.Func{``0,``1})
  isExternal: true
  href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_selectKey__3_cfEngine_Rx_RtReadOnlyDictionary___0___2__System_Func___0___1__
  name: selectKey<TOrigKey, TSelectedKey, TValue>(RtReadOnlyDictionary<TOrigKey, TValue>, Func<TOrigKey, TSelectedKey>)
  nameWithType: Linq.selectKey<TOrigKey, TSelectedKey, TValue>(RtReadOnlyDictionary<TOrigKey, TValue>, Func<TOrigKey, TSelectedKey>)
  fullName: cfEngine.Rx.Linq.selectKey<TOrigKey, TSelectedKey, TValue>(cfEngine.Rx.RtReadOnlyDictionary<TOrigKey, TValue>, System.Func<TOrigKey, TSelectedKey>)
  nameWithType.vb: Linq.selectKey(Of TOrigKey, TSelectedKey, TValue)(RtReadOnlyDictionary(Of TOrigKey, TValue), Func(Of TOrigKey, TSelectedKey))
  fullName.vb: cfEngine.Rx.Linq.selectKey(Of TOrigKey, TSelectedKey, TValue)(cfEngine.Rx.RtReadOnlyDictionary(Of TOrigKey, TValue), System.Func(Of TOrigKey, TSelectedKey))
  name.vb: selectKey(Of TOrigKey, TSelectedKey, TValue)(RtReadOnlyDictionary(Of TOrigKey, TValue), Func(Of TOrigKey, TSelectedKey))
  spec.csharp:
  - uid: cfEngine.Rx.Linq.selectKey``3(cfEngine.Rx.RtReadOnlyDictionary{``0,``2},System.Func{``0,``1})
    name: selectKey
    href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_selectKey__3_cfEngine_Rx_RtReadOnlyDictionary___0___2__System_Func___0___1__
  - name: <
  - name: TOrigKey
  - name: ','
  - name: " "
  - name: TSelectedKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: (
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: <
  - name: TOrigKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TOrigKey
  - name: ','
  - name: " "
  - name: TSelectedKey
  - name: '>'
  - name: )
  spec.vb:
  - uid: cfEngine.Rx.Linq.selectKey``3(cfEngine.Rx.RtReadOnlyDictionary{``0,``2},System.Func{``0,``1})
    name: selectKey
    href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_selectKey__3_cfEngine_Rx_RtReadOnlyDictionary___0___2__System_Func___0___1__
  - name: (
  - name: Of
  - name: " "
  - name: TOrigKey
  - name: ','
  - name: " "
  - name: TSelectedKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TOrigKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TOrigKey
  - name: ','
  - name: " "
  - name: TSelectedKey
  - name: )
  - name: )
- uid: cfEngine.Rx.Linq
  commentId: T:cfEngine.Rx.Linq
  parent: cfEngine.Rx
  href: cfEngine.Rx.Linq.html
  name: Linq
  nameWithType: Linq
  fullName: cfEngine.Rx.Linq
- uid: cfEngine.Rx.Linq.selectValue``3(cfEngine.Rx.RtReadOnlyDictionary{``0,``1},System.Func{``1,``2})
  commentId: M:cfEngine.Rx.Linq.selectValue``3(cfEngine.Rx.RtReadOnlyDictionary{``0,``1},System.Func{``1,``2})
  isExternal: true
  href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_selectValue__3_cfEngine_Rx_RtReadOnlyDictionary___0___1__System_Func___1___2__
  name: selectValue<TKey, TValue, TSelectValue>(RtReadOnlyDictionary<TKey, TValue>, Func<TValue, TSelectValue>)
  nameWithType: Linq.selectValue<TKey, TValue, TSelectValue>(RtReadOnlyDictionary<TKey, TValue>, Func<TValue, TSelectValue>)
  fullName: cfEngine.Rx.Linq.selectValue<TKey, TValue, TSelectValue>(cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>, System.Func<TValue, TSelectValue>)
  nameWithType.vb: Linq.selectValue(Of TKey, TValue, TSelectValue)(RtReadOnlyDictionary(Of TKey, TValue), Func(Of TValue, TSelectValue))
  fullName.vb: cfEngine.Rx.Linq.selectValue(Of TKey, TValue, TSelectValue)(cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue), System.Func(Of TValue, TSelectValue))
  name.vb: selectValue(Of TKey, TValue, TSelectValue)(RtReadOnlyDictionary(Of TKey, TValue), Func(Of TValue, TSelectValue))
  spec.csharp:
  - uid: cfEngine.Rx.Linq.selectValue``3(cfEngine.Rx.RtReadOnlyDictionary{``0,``1},System.Func{``1,``2})
    name: selectValue
    href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_selectValue__3_cfEngine_Rx_RtReadOnlyDictionary___0___1__System_Func___1___2__
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TSelectValue
  - name: '>'
  - name: (
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TValue
  - name: ','
  - name: " "
  - name: TSelectValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: cfEngine.Rx.Linq.selectValue``3(cfEngine.Rx.RtReadOnlyDictionary{``0,``1},System.Func{``1,``2})
    name: selectValue
    href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_selectValue__3_cfEngine_Rx_RtReadOnlyDictionary___0___1__System_Func___1___2__
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TSelectValue
  - name: )
  - name: (
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TSelectValue
  - name: )
  - name: )
- uid: cfEngine.Rx.Linq.where``2(cfEngine.Rx.RtReadOnlyDictionary{``0,``1},System.Func{System.Collections.Generic.KeyValuePair{``0,``1},System.Boolean})
  commentId: M:cfEngine.Rx.Linq.where``2(cfEngine.Rx.RtReadOnlyDictionary{``0,``1},System.Func{System.Collections.Generic.KeyValuePair{``0,``1},System.Boolean})
  isExternal: true
  href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_where__2_cfEngine_Rx_RtReadOnlyDictionary___0___1__System_Func_System_Collections_Generic_KeyValuePair___0___1__System_Boolean__
  name: where<TKey, TValue>(RtReadOnlyDictionary<TKey, TValue>, Func<KeyValuePair<TKey, TValue>, bool>)
  nameWithType: Linq.where<TKey, TValue>(RtReadOnlyDictionary<TKey, TValue>, Func<KeyValuePair<TKey, TValue>, bool>)
  fullName: cfEngine.Rx.Linq.where<TKey, TValue>(cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, bool>)
  nameWithType.vb: Linq.where(Of TKey, TValue)(RtReadOnlyDictionary(Of TKey, TValue), Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  fullName.vb: cfEngine.Rx.Linq.where(Of TKey, TValue)(cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), Boolean))
  name.vb: where(Of TKey, TValue)(RtReadOnlyDictionary(Of TKey, TValue), Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  spec.csharp:
  - uid: cfEngine.Rx.Linq.where``2(cfEngine.Rx.RtReadOnlyDictionary{``0,``1},System.Func{System.Collections.Generic.KeyValuePair{``0,``1},System.Boolean})
    name: where
    href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_where__2_cfEngine_Rx_RtReadOnlyDictionary___0___1__System_Func_System_Collections_Generic_KeyValuePair___0___1__System_Boolean__
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: (
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: cfEngine.Rx.Linq.where``2(cfEngine.Rx.RtReadOnlyDictionary{``0,``1},System.Func{System.Collections.Generic.KeyValuePair{``0,``1},System.Boolean})
    name: where
    href: cfEngine.Rx.Linq.html#cfEngine_Rx_Linq_where__2_cfEngine_Rx_RtReadOnlyDictionary___0___1__System_Func_System_Collections_Generic_KeyValuePair___0___1__System_Boolean__
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: cfEngine.Rx.RtDictionary`2.Dispose*
  commentId: Overload:cfEngine.Rx.RtDictionary`2.Dispose
  href: cfEngine.Rx.RtDictionary-2.html#cfEngine_Rx_RtDictionary_2_Dispose
  name: Dispose
  nameWithType: RtDictionary<TKey, TValue>.Dispose
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Dispose
  nameWithType.vb: RtDictionary(Of TKey, TValue).Dispose
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Dispose
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Collections.Generic.KeyNotFoundException
  commentId: T:System.Collections.Generic.KeyNotFoundException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keynotfoundexception
  name: KeyNotFoundException
  nameWithType: KeyNotFoundException
  fullName: System.Collections.Generic.KeyNotFoundException
- uid: cfEngine.Rx.RtDictionary`2.Item*
  commentId: Overload:cfEngine.Rx.RtDictionary`2.Item
  href: cfEngine.Rx.RtDictionary-2.html#cfEngine_Rx_RtDictionary_2_Item__0_
  name: this
  nameWithType: RtDictionary<TKey, TValue>.this
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.this
  nameWithType.vb: RtDictionary(Of TKey, TValue).this[]
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).this[]
  name.vb: this[]
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: cfEngine.Rx.RtDictionary`2.Keys*
  commentId: Overload:cfEngine.Rx.RtDictionary`2.Keys
  href: cfEngine.Rx.RtDictionary-2.html#cfEngine_Rx_RtDictionary_2_Keys
  name: Keys
  nameWithType: RtDictionary<TKey, TValue>.Keys
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Keys
  nameWithType.vb: RtDictionary(Of TKey, TValue).Keys
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Keys
- uid: System.Collections.Generic.IEnumerable{{TKey}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TKey>
  nameWithType: IEnumerable<TKey>
  fullName: System.Collections.Generic.IEnumerable<TKey>
  nameWithType.vb: IEnumerable(Of TKey)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TKey)
  name.vb: IEnumerable(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
- uid: cfEngine.Rx.RtDictionary`2.Values*
  commentId: Overload:cfEngine.Rx.RtDictionary`2.Values
  href: cfEngine.Rx.RtDictionary-2.html#cfEngine_Rx_RtDictionary_2_Values
  name: Values
  nameWithType: RtDictionary<TKey, TValue>.Values
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Values
  nameWithType.vb: RtDictionary(Of TKey, TValue).Values
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Values
- uid: System.Collections.Generic.IEnumerable{{TValue}}
  commentId: T:System.Collections.Generic.IEnumerable{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TValue>
  nameWithType: IEnumerable<TValue>
  fullName: System.Collections.Generic.IEnumerable<TValue>
  nameWithType.vb: IEnumerable(Of TValue)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TValue)
  name.vb: IEnumerable(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: cfEngine.Rx.RtDictionary`2.GetEnumerator*
  commentId: Overload:cfEngine.Rx.RtDictionary`2.GetEnumerator
  href: cfEngine.Rx.RtDictionary-2.html#cfEngine_Rx_RtDictionary_2_GetEnumerator
  name: GetEnumerator
  nameWithType: RtDictionary<TKey, TValue>.GetEnumerator
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.GetEnumerator
  nameWithType.vb: RtDictionary(Of TKey, TValue).GetEnumerator
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).GetEnumerator
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<KeyValuePair<TKey, TValue>>
  nameWithType: IEnumerator<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: cfEngine.Rx.RtDictionary`2.Add*
  commentId: Overload:cfEngine.Rx.RtDictionary`2.Add
  href: cfEngine.Rx.RtDictionary-2.html#cfEngine_Rx_RtDictionary_2_Add_System_Collections_Generic_KeyValuePair__0__1__
  name: Add
  nameWithType: RtDictionary<TKey, TValue>.Add
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Add
  nameWithType.vb: RtDictionary(Of TKey, TValue).Add
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Add
- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.KeyValuePair{`0,`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.KeyValuePair`2
  commentId: T:System.Collections.Generic.KeyValuePair`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: cfEngine.Rx.RtDictionary`2.Contains*
  commentId: Overload:cfEngine.Rx.RtDictionary`2.Contains
  href: cfEngine.Rx.RtDictionary-2.html#cfEngine_Rx_RtDictionary_2_Contains_System_Collections_Generic_KeyValuePair__0__1__
  name: Contains
  nameWithType: RtDictionary<TKey, TValue>.Contains
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Contains
  nameWithType.vb: RtDictionary(Of TKey, TValue).Contains
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: cfEngine.Rx.RtDictionary`2.CopyTo*
  commentId: Overload:cfEngine.Rx.RtDictionary`2.CopyTo
  href: cfEngine.Rx.RtDictionary-2.html#cfEngine_Rx_RtDictionary_2_CopyTo_System_Collections_Generic_KeyValuePair__0__1____System_Int32_
  name: CopyTo
  nameWithType: RtDictionary<TKey, TValue>.CopyTo
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.CopyTo
  nameWithType.vb: RtDictionary(Of TKey, TValue).CopyTo
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).CopyTo
- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  name: KeyValuePair<TKey, TValue>[]
  nameWithType: KeyValuePair<TKey, TValue>[]
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>[]
  nameWithType.vb: KeyValuePair(Of TKey, TValue)()
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)()
  name.vb: KeyValuePair(Of TKey, TValue)()
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: cfEngine.Rx.RtDictionary`2.Remove*
  commentId: Overload:cfEngine.Rx.RtDictionary`2.Remove
  href: cfEngine.Rx.RtDictionary-2.html#cfEngine_Rx_RtDictionary_2_Remove_System_Collections_Generic_KeyValuePair__0__1__
  name: Remove
  nameWithType: RtDictionary<TKey, TValue>.Remove
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Remove
  nameWithType.vb: RtDictionary(Of TKey, TValue).Remove
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Remove
- uid: cfEngine.Rx.RtDictionary`2.Count*
  commentId: Overload:cfEngine.Rx.RtDictionary`2.Count
  href: cfEngine.Rx.RtDictionary-2.html#cfEngine_Rx_RtDictionary_2_Count
  name: Count
  nameWithType: RtDictionary<TKey, TValue>.Count
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Count
  nameWithType.vb: RtDictionary(Of TKey, TValue).Count
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Count
- uid: cfEngine.Rx.RtDictionary`2.IsReadOnly*
  commentId: Overload:cfEngine.Rx.RtDictionary`2.IsReadOnly
  href: cfEngine.Rx.RtDictionary-2.html#cfEngine_Rx_RtDictionary_2_IsReadOnly
  name: IsReadOnly
  nameWithType: RtDictionary<TKey, TValue>.IsReadOnly
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.IsReadOnly
  nameWithType.vb: RtDictionary(Of TKey, TValue).IsReadOnly
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).IsReadOnly
- uid: cfEngine.Rx.RtDictionary`2.ContainsKey*
  commentId: Overload:cfEngine.Rx.RtDictionary`2.ContainsKey
  href: cfEngine.Rx.RtDictionary-2.html#cfEngine_Rx_RtDictionary_2_ContainsKey__0_
  name: ContainsKey
  nameWithType: RtDictionary<TKey, TValue>.ContainsKey
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.ContainsKey
  nameWithType.vb: RtDictionary(Of TKey, TValue).ContainsKey
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).ContainsKey
- uid: cfEngine.Rx.RtDictionary`2.TryGetValue*
  commentId: Overload:cfEngine.Rx.RtDictionary`2.TryGetValue
  href: cfEngine.Rx.RtDictionary-2.html#cfEngine_Rx_RtDictionary_2_TryGetValue__0__1__
  name: TryGetValue
  nameWithType: RtDictionary<TKey, TValue>.TryGetValue
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.TryGetValue
  nameWithType.vb: RtDictionary(Of TKey, TValue).TryGetValue
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).TryGetValue
- uid: cfEngine.Rx.RtDictionary`2.Upsert*
  commentId: Overload:cfEngine.Rx.RtDictionary`2.Upsert
  href: cfEngine.Rx.RtDictionary-2.html#cfEngine_Rx_RtDictionary_2_Upsert__0__1_
  name: Upsert
  nameWithType: RtDictionary<TKey, TValue>.Upsert
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Upsert
  nameWithType.vb: RtDictionary(Of TKey, TValue).Upsert
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Upsert
- uid: cfEngine.Rx.RtDictionary`2.Clear*
  commentId: Overload:cfEngine.Rx.RtDictionary`2.Clear
  href: cfEngine.Rx.RtDictionary-2.html#cfEngine_Rx_RtDictionary_2_Clear
  name: Clear
  nameWithType: RtDictionary<TKey, TValue>.Clear
  fullName: cfEngine.Rx.RtDictionary<TKey, TValue>.Clear
  nameWithType.vb: RtDictionary(Of TKey, TValue).Clear
  fullName.vb: cfEngine.Rx.RtDictionary(Of TKey, TValue).Clear
