### YamlMime:ManagedReference
items:
- uid: cfEngine.Rx.RtCollection`1
  commentId: T:cfEngine.Rx.RtCollection`1
  id: RtCollection`1
  parent: cfEngine.Rx
  children:
  - cfEngine.Rx.RtCollection`1.#ctor
  - cfEngine.Rx.RtCollection`1.CollectionEvents
  - cfEngine.Rx.RtCollection`1.Dispose
  - cfEngine.Rx.RtCollection`1.Events
  langs:
  - csharp
  - vb
  name: RtCollection<TEventArgs>
  nameWithType: RtCollection<TEventArgs>
  fullName: cfEngine.Rx.RtCollection<TEventArgs>
  type: Class
  source:
    id: RtCollection
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtCollection.cs
    startLine: 7
  namespace: cfEngine.Rx
  syntax:
    content: 'public abstract class RtCollection<TEventArgs> : IDisposable'
    typeParameters:
    - id: TEventArgs
    content.vb: Public MustInherit Class RtCollection(Of TEventArgs) Implements IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - cfEngine.Rx.RtReadOnlyDictionary`2
  - cfEngine.Rx.RtReadOnlyList`1
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: RtCollection(Of TEventArgs)
  fullName.vb: cfEngine.Rx.RtCollection(Of TEventArgs)
  name.vb: RtCollection(Of TEventArgs)
- uid: cfEngine.Rx.RtCollection`1.CollectionEvents
  commentId: P:cfEngine.Rx.RtCollection`1.CollectionEvents
  id: CollectionEvents
  parent: cfEngine.Rx.RtCollection`1
  langs:
  - csharp
  - vb
  name: CollectionEvents
  nameWithType: RtCollection<TEventArgs>.CollectionEvents
  fullName: cfEngine.Rx.RtCollection<TEventArgs>.CollectionEvents
  type: Property
  source:
    id: CollectionEvents
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtCollection.cs
    startLine: 10
  namespace: cfEngine.Rx
  syntax:
    content: protected CollectionEvents<TEventArgs> CollectionEvents { get; }
    parameters: []
    return:
      type: cfEngine.Rx.CollectionEvents{{TEventArgs}}
    content.vb: Protected ReadOnly Property CollectionEvents As CollectionEvents(Of TEventArgs)
  overload: cfEngine.Rx.RtCollection`1.CollectionEvents*
  nameWithType.vb: RtCollection(Of TEventArgs).CollectionEvents
  fullName.vb: cfEngine.Rx.RtCollection(Of TEventArgs).CollectionEvents
- uid: cfEngine.Rx.RtCollection`1.Events
  commentId: P:cfEngine.Rx.RtCollection`1.Events
  id: Events
  parent: cfEngine.Rx.RtCollection`1
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: RtCollection<TEventArgs>.Events
  fullName: cfEngine.Rx.RtCollection<TEventArgs>.Events
  type: Property
  source:
    id: Events
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtCollection.cs
    startLine: 11
  namespace: cfEngine.Rx
  syntax:
    content: public ICollectionEvents<TEventArgs> Events { get; }
    parameters: []
    return:
      type: cfEngine.Rx.ICollectionEvents{{TEventArgs}}
    content.vb: Public ReadOnly Property Events As ICollectionEvents(Of TEventArgs)
  overload: cfEngine.Rx.RtCollection`1.Events*
  nameWithType.vb: RtCollection(Of TEventArgs).Events
  fullName.vb: cfEngine.Rx.RtCollection(Of TEventArgs).Events
- uid: cfEngine.Rx.RtCollection`1.#ctor
  commentId: M:cfEngine.Rx.RtCollection`1.#ctor
  id: '#ctor'
  parent: cfEngine.Rx.RtCollection`1
  langs:
  - csharp
  - vb
  name: RtCollection()
  nameWithType: RtCollection<TEventArgs>.RtCollection()
  fullName: cfEngine.Rx.RtCollection<TEventArgs>.RtCollection()
  type: Constructor
  source:
    id: .ctor
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtCollection.cs
    startLine: 13
  namespace: cfEngine.Rx
  syntax:
    content: protected RtCollection()
    content.vb: Protected Sub New()
  overload: cfEngine.Rx.RtCollection`1.#ctor*
  nameWithType.vb: RtCollection(Of TEventArgs).New()
  fullName.vb: cfEngine.Rx.RtCollection(Of TEventArgs).New()
  name.vb: New()
- uid: cfEngine.Rx.RtCollection`1.Dispose
  commentId: M:cfEngine.Rx.RtCollection`1.Dispose
  id: Dispose
  parent: cfEngine.Rx.RtCollection`1
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: RtCollection<TEventArgs>.Dispose()
  fullName: cfEngine.Rx.RtCollection<TEventArgs>.Dispose()
  type: Method
  source:
    id: Dispose
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/reactive/RtCollection.cs
    startLine: 20
  namespace: cfEngine.Rx
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose()
  overload: cfEngine.Rx.RtCollection`1.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: RtCollection(Of TEventArgs).Dispose()
  fullName.vb: cfEngine.Rx.RtCollection(Of TEventArgs).Dispose()
references:
- uid: cfEngine.Rx
  commentId: N:cfEngine.Rx
  href: cfEngine.html
  name: cfEngine.Rx
  nameWithType: cfEngine.Rx
  fullName: cfEngine.Rx
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Rx
    name: Rx
    href: cfEngine.Rx.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Rx
    name: Rx
    href: cfEngine.Rx.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: cfEngine.Rx.RtCollection`1.CollectionEvents*
  commentId: Overload:cfEngine.Rx.RtCollection`1.CollectionEvents
  href: cfEngine.Rx.RtCollection-1.html#cfEngine_Rx_RtCollection_1_CollectionEvents
  name: CollectionEvents
  nameWithType: RtCollection<TEventArgs>.CollectionEvents
  fullName: cfEngine.Rx.RtCollection<TEventArgs>.CollectionEvents
  nameWithType.vb: RtCollection(Of TEventArgs).CollectionEvents
  fullName.vb: cfEngine.Rx.RtCollection(Of TEventArgs).CollectionEvents
- uid: cfEngine.Rx.CollectionEvents{{TEventArgs}}
  commentId: T:cfEngine.Rx.CollectionEvents{`0}
  parent: cfEngine.Rx
  definition: cfEngine.Rx.CollectionEvents`1
  href: cfEngine.Rx.CollectionEvents-1.html
  name: CollectionEvents<TEventArgs>
  nameWithType: CollectionEvents<TEventArgs>
  fullName: cfEngine.Rx.CollectionEvents<TEventArgs>
  nameWithType.vb: CollectionEvents(Of TEventArgs)
  fullName.vb: cfEngine.Rx.CollectionEvents(Of TEventArgs)
  name.vb: CollectionEvents(Of TEventArgs)
  spec.csharp:
  - uid: cfEngine.Rx.CollectionEvents`1
    name: CollectionEvents
    href: cfEngine.Rx.CollectionEvents-1.html
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: cfEngine.Rx.CollectionEvents`1
    name: CollectionEvents
    href: cfEngine.Rx.CollectionEvents-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: cfEngine.Rx.CollectionEvents`1
  commentId: T:cfEngine.Rx.CollectionEvents`1
  href: cfEngine.Rx.CollectionEvents-1.html
  name: CollectionEvents<T>
  nameWithType: CollectionEvents<T>
  fullName: cfEngine.Rx.CollectionEvents<T>
  nameWithType.vb: CollectionEvents(Of T)
  fullName.vb: cfEngine.Rx.CollectionEvents(Of T)
  name.vb: CollectionEvents(Of T)
  spec.csharp:
  - uid: cfEngine.Rx.CollectionEvents`1
    name: CollectionEvents
    href: cfEngine.Rx.CollectionEvents-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: cfEngine.Rx.CollectionEvents`1
    name: CollectionEvents
    href: cfEngine.Rx.CollectionEvents-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: cfEngine.Rx.RtCollection`1.Events*
  commentId: Overload:cfEngine.Rx.RtCollection`1.Events
  href: cfEngine.Rx.RtCollection-1.html#cfEngine_Rx_RtCollection_1_Events
  name: Events
  nameWithType: RtCollection<TEventArgs>.Events
  fullName: cfEngine.Rx.RtCollection<TEventArgs>.Events
  nameWithType.vb: RtCollection(Of TEventArgs).Events
  fullName.vb: cfEngine.Rx.RtCollection(Of TEventArgs).Events
- uid: cfEngine.Rx.ICollectionEvents{{TEventArgs}}
  commentId: T:cfEngine.Rx.ICollectionEvents{`0}
  parent: cfEngine.Rx
  definition: cfEngine.Rx.ICollectionEvents`1
  href: cfEngine.Rx.ICollectionEvents-1.html
  name: ICollectionEvents<TEventArgs>
  nameWithType: ICollectionEvents<TEventArgs>
  fullName: cfEngine.Rx.ICollectionEvents<TEventArgs>
  nameWithType.vb: ICollectionEvents(Of TEventArgs)
  fullName.vb: cfEngine.Rx.ICollectionEvents(Of TEventArgs)
  name.vb: ICollectionEvents(Of TEventArgs)
  spec.csharp:
  - uid: cfEngine.Rx.ICollectionEvents`1
    name: ICollectionEvents
    href: cfEngine.Rx.ICollectionEvents-1.html
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: cfEngine.Rx.ICollectionEvents`1
    name: ICollectionEvents
    href: cfEngine.Rx.ICollectionEvents-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: cfEngine.Rx.ICollectionEvents`1
  commentId: T:cfEngine.Rx.ICollectionEvents`1
  href: cfEngine.Rx.ICollectionEvents-1.html
  name: ICollectionEvents<T>
  nameWithType: ICollectionEvents<T>
  fullName: cfEngine.Rx.ICollectionEvents<T>
  nameWithType.vb: ICollectionEvents(Of T)
  fullName.vb: cfEngine.Rx.ICollectionEvents(Of T)
  name.vb: ICollectionEvents(Of T)
  spec.csharp:
  - uid: cfEngine.Rx.ICollectionEvents`1
    name: ICollectionEvents
    href: cfEngine.Rx.ICollectionEvents-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: cfEngine.Rx.ICollectionEvents`1
    name: ICollectionEvents
    href: cfEngine.Rx.ICollectionEvents-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: cfEngine.Rx.RtCollection`1.#ctor*
  commentId: Overload:cfEngine.Rx.RtCollection`1.#ctor
  href: cfEngine.Rx.RtCollection-1.html#cfEngine_Rx_RtCollection_1__ctor
  name: RtCollection
  nameWithType: RtCollection<TEventArgs>.RtCollection
  fullName: cfEngine.Rx.RtCollection<TEventArgs>.RtCollection
  nameWithType.vb: RtCollection(Of TEventArgs).New
  fullName.vb: cfEngine.Rx.RtCollection(Of TEventArgs).New
  name.vb: New
- uid: cfEngine.Rx.RtCollection`1.Dispose*
  commentId: Overload:cfEngine.Rx.RtCollection`1.Dispose
  href: cfEngine.Rx.RtCollection-1.html#cfEngine_Rx_RtCollection_1_Dispose
  name: Dispose
  nameWithType: RtCollection<TEventArgs>.Dispose
  fullName: cfEngine.Rx.RtCollection<TEventArgs>.Dispose
  nameWithType.vb: RtCollection(Of TEventArgs).Dispose
  fullName.vb: cfEngine.Rx.RtCollection(Of TEventArgs).Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
