### YamlMime:ManagedReference
items:
- uid: cfEngine.Service.ServiceLocator
  commentId: T:cfEngine.Service.ServiceLocator
  id: ServiceLocator
  parent: cfEngine.Service
  children:
  - cfEngine.Service.ServiceLocator.Dispose
  - cfEngine.Service.ServiceLocator.GetService``1
  - cfEngine.Service.ServiceLocator.GetService``1(System.String)
  - cfEngine.Service.ServiceLocator.Register``1(``0,System.String)
  - cfEngine.Service.ServiceLocator.Unregister(System.String)
  - cfEngine.Service.ServiceLocator.Unregister``1(``0)
  langs:
  - csharp
  - vb
  name: ServiceLocator
  nameWithType: ServiceLocator
  fullName: cfEngine.Service.ServiceLocator
  type: Class
  source:
    id: ServiceLocator
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/game/ServiceLocator.cs
    startLine: 16
  namespace: cfEngine.Service
  syntax:
    content: 'public class ServiceLocator : IServiceLocator, IDisposable'
    content.vb: Public Class ServiceLocator Implements IServiceLocator, IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - cfEngine.Core.Game
  implements:
  - cfEngine.Service.IServiceLocator
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: cfEngine.Service.ServiceLocator.Register``1(``0,System.String)
  commentId: M:cfEngine.Service.ServiceLocator.Register``1(``0,System.String)
  id: Register``1(``0,System.String)
  parent: cfEngine.Service.ServiceLocator
  langs:
  - csharp
  - vb
  name: Register<T>(T, string)
  nameWithType: ServiceLocator.Register<T>(T, string)
  fullName: cfEngine.Service.ServiceLocator.Register<T>(T, string)
  type: Method
  source:
    id: Register
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/game/ServiceLocator.cs
    startLine: 19
  namespace: cfEngine.Service
  example: []
  syntax:
    content: 'public void Register<T>(T service, string serviceName) where T : IService'
    parameters:
    - id: service
      type: '{T}'
    - id: serviceName
      type: System.String
    typeParameters:
    - id: T
    content.vb: Public Sub Register(Of T As IService)(service As T, serviceName As String)
  overload: cfEngine.Service.ServiceLocator.Register*
  implements:
  - cfEngine.Service.IServiceLocator.Register``1({T},System.String)
  nameWithType.vb: ServiceLocator.Register(Of T)(T, String)
  fullName.vb: cfEngine.Service.ServiceLocator.Register(Of T)(T, String)
  name.vb: Register(Of T)(T, String)
- uid: cfEngine.Service.ServiceLocator.Unregister``1(``0)
  commentId: M:cfEngine.Service.ServiceLocator.Unregister``1(``0)
  id: Unregister``1(``0)
  parent: cfEngine.Service.ServiceLocator
  langs:
  - csharp
  - vb
  name: Unregister<T>(T)
  nameWithType: ServiceLocator.Unregister<T>(T)
  fullName: cfEngine.Service.ServiceLocator.Unregister<T>(T)
  type: Method
  source:
    id: Unregister
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/game/ServiceLocator.cs
    startLine: 27
  namespace: cfEngine.Service
  example: []
  syntax:
    content: 'public void Unregister<T>(T service) where T : IService'
    parameters:
    - id: service
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Sub Unregister(Of T As IService)(service As T)
  overload: cfEngine.Service.ServiceLocator.Unregister*
  implements:
  - cfEngine.Service.IServiceLocator.Unregister``1({T})
  nameWithType.vb: ServiceLocator.Unregister(Of T)(T)
  fullName.vb: cfEngine.Service.ServiceLocator.Unregister(Of T)(T)
  name.vb: Unregister(Of T)(T)
- uid: cfEngine.Service.ServiceLocator.Unregister(System.String)
  commentId: M:cfEngine.Service.ServiceLocator.Unregister(System.String)
  id: Unregister(System.String)
  parent: cfEngine.Service.ServiceLocator
  langs:
  - csharp
  - vb
  name: Unregister(string)
  nameWithType: ServiceLocator.Unregister(string)
  fullName: cfEngine.Service.ServiceLocator.Unregister(string)
  type: Method
  source:
    id: Unregister
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/game/ServiceLocator.cs
    startLine: 47
  namespace: cfEngine.Service
  example: []
  syntax:
    content: public void Unregister(string serviceName)
    parameters:
    - id: serviceName
      type: System.String
    content.vb: Public Sub Unregister(serviceName As String)
  overload: cfEngine.Service.ServiceLocator.Unregister*
  implements:
  - cfEngine.Service.IServiceLocator.Unregister(System.String)
  nameWithType.vb: ServiceLocator.Unregister(String)
  fullName.vb: cfEngine.Service.ServiceLocator.Unregister(String)
  name.vb: Unregister(String)
- uid: cfEngine.Service.ServiceLocator.GetService``1
  commentId: M:cfEngine.Service.ServiceLocator.GetService``1
  id: GetService``1
  parent: cfEngine.Service.ServiceLocator
  langs:
  - csharp
  - vb
  name: GetService<T>()
  nameWithType: ServiceLocator.GetService<T>()
  fullName: cfEngine.Service.ServiceLocator.GetService<T>()
  type: Method
  source:
    id: GetService
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/game/ServiceLocator.cs
    startLine: 58
  namespace: cfEngine.Service
  example: []
  syntax:
    content: 'public T GetService<T>() where T : IService'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetService(Of T As IService)() As T
  overload: cfEngine.Service.ServiceLocator.GetService*
  implements:
  - cfEngine.Service.IServiceLocator.GetService``1
  nameWithType.vb: ServiceLocator.GetService(Of T)()
  fullName.vb: cfEngine.Service.ServiceLocator.GetService(Of T)()
  name.vb: GetService(Of T)()
- uid: cfEngine.Service.ServiceLocator.GetService``1(System.String)
  commentId: M:cfEngine.Service.ServiceLocator.GetService``1(System.String)
  id: GetService``1(System.String)
  parent: cfEngine.Service.ServiceLocator
  langs:
  - csharp
  - vb
  name: GetService<T>(string)
  nameWithType: ServiceLocator.GetService<T>(string)
  fullName: cfEngine.Service.ServiceLocator.GetService<T>(string)
  type: Method
  source:
    id: GetService
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/game/ServiceLocator.cs
    startLine: 71
  namespace: cfEngine.Service
  example: []
  syntax:
    content: 'public T GetService<T>(string serviceName) where T : IService'
    parameters:
    - id: serviceName
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetService(Of T As IService)(serviceName As String) As T
  overload: cfEngine.Service.ServiceLocator.GetService*
  implements:
  - cfEngine.Service.IServiceLocator.GetService``1(System.String)
  nameWithType.vb: ServiceLocator.GetService(Of T)(String)
  fullName.vb: cfEngine.Service.ServiceLocator.GetService(Of T)(String)
  name.vb: GetService(Of T)(String)
- uid: cfEngine.Service.ServiceLocator.Dispose
  commentId: M:cfEngine.Service.ServiceLocator.Dispose
  id: Dispose
  parent: cfEngine.Service.ServiceLocator
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ServiceLocator.Dispose()
  fullName: cfEngine.Service.ServiceLocator.Dispose()
  type: Method
  source:
    id: Dispose
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/game/ServiceLocator.cs
    startLine: 82
  namespace: cfEngine.Service
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: cfEngine.Service.ServiceLocator.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: cfEngine.Service
  commentId: N:cfEngine.Service
  href: cfEngine.html
  name: cfEngine.Service
  nameWithType: cfEngine.Service
  fullName: cfEngine.Service
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Service
    name: Service
    href: cfEngine.Service.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Service
    name: Service
    href: cfEngine.Service.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: cfEngine.Service.IServiceLocator
  commentId: T:cfEngine.Service.IServiceLocator
  parent: cfEngine.Service
  href: cfEngine.Service.IServiceLocator.html
  name: IServiceLocator
  nameWithType: IServiceLocator
  fullName: cfEngine.Service.IServiceLocator
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: cfEngine.Service.ServiceLocator.Register*
  commentId: Overload:cfEngine.Service.ServiceLocator.Register
  href: cfEngine.Service.ServiceLocator.html#cfEngine_Service_ServiceLocator_Register__1___0_System_String_
  name: Register
  nameWithType: ServiceLocator.Register
  fullName: cfEngine.Service.ServiceLocator.Register
- uid: cfEngine.Service.IServiceLocator.Register``1({T},System.String)
  commentId: M:cfEngine.Service.IServiceLocator.Register``1(``0,System.String)
  parent: cfEngine.Service.IServiceLocator
  definition: cfEngine.Service.IServiceLocator.Register``1(``0,System.String)
  href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_Register__1___0_System_String_
  name: Register<T>(T, string)
  nameWithType: IServiceLocator.Register<T>(T, string)
  fullName: cfEngine.Service.IServiceLocator.Register<T>(T, string)
  nameWithType.vb: IServiceLocator.Register(Of T)(T, String)
  fullName.vb: cfEngine.Service.IServiceLocator.Register(Of T)(T, String)
  name.vb: Register(Of T)(T, String)
  spec.csharp:
  - uid: cfEngine.Service.IServiceLocator.Register``1(``0,System.String)
    name: Register
    href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_Register__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: cfEngine.Service.IServiceLocator.Register``1(``0,System.String)
    name: Register
    href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_Register__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: cfEngine.Service.IServiceLocator.Register``1(``0,System.String)
  commentId: M:cfEngine.Service.IServiceLocator.Register``1(``0,System.String)
  isExternal: true
  href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_Register__1___0_System_String_
  name: Register<T>(T, string)
  nameWithType: IServiceLocator.Register<T>(T, string)
  fullName: cfEngine.Service.IServiceLocator.Register<T>(T, string)
  nameWithType.vb: IServiceLocator.Register(Of T)(T, String)
  fullName.vb: cfEngine.Service.IServiceLocator.Register(Of T)(T, String)
  name.vb: Register(Of T)(T, String)
  spec.csharp:
  - uid: cfEngine.Service.IServiceLocator.Register``1(``0,System.String)
    name: Register
    href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_Register__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: cfEngine.Service.IServiceLocator.Register``1(``0,System.String)
    name: Register
    href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_Register__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: cfEngine.Service.ServiceLocator.Unregister*
  commentId: Overload:cfEngine.Service.ServiceLocator.Unregister
  href: cfEngine.Service.ServiceLocator.html#cfEngine_Service_ServiceLocator_Unregister__1___0_
  name: Unregister
  nameWithType: ServiceLocator.Unregister
  fullName: cfEngine.Service.ServiceLocator.Unregister
- uid: cfEngine.Service.IServiceLocator.Unregister``1({T})
  commentId: M:cfEngine.Service.IServiceLocator.Unregister``1(``0)
  parent: cfEngine.Service.IServiceLocator
  definition: cfEngine.Service.IServiceLocator.Unregister``1(``0)
  href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_Unregister__1___0_
  name: Unregister<T>(T)
  nameWithType: IServiceLocator.Unregister<T>(T)
  fullName: cfEngine.Service.IServiceLocator.Unregister<T>(T)
  nameWithType.vb: IServiceLocator.Unregister(Of T)(T)
  fullName.vb: cfEngine.Service.IServiceLocator.Unregister(Of T)(T)
  name.vb: Unregister(Of T)(T)
  spec.csharp:
  - uid: cfEngine.Service.IServiceLocator.Unregister``1(``0)
    name: Unregister
    href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_Unregister__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: cfEngine.Service.IServiceLocator.Unregister``1(``0)
    name: Unregister
    href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_Unregister__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: cfEngine.Service.IServiceLocator.Unregister``1(``0)
  commentId: M:cfEngine.Service.IServiceLocator.Unregister``1(``0)
  href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_Unregister__1___0_
  name: Unregister<T>(T)
  nameWithType: IServiceLocator.Unregister<T>(T)
  fullName: cfEngine.Service.IServiceLocator.Unregister<T>(T)
  nameWithType.vb: IServiceLocator.Unregister(Of T)(T)
  fullName.vb: cfEngine.Service.IServiceLocator.Unregister(Of T)(T)
  name.vb: Unregister(Of T)(T)
  spec.csharp:
  - uid: cfEngine.Service.IServiceLocator.Unregister``1(``0)
    name: Unregister
    href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_Unregister__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: cfEngine.Service.IServiceLocator.Unregister``1(``0)
    name: Unregister
    href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_Unregister__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: cfEngine.Service.IServiceLocator.Unregister(System.String)
  commentId: M:cfEngine.Service.IServiceLocator.Unregister(System.String)
  parent: cfEngine.Service.IServiceLocator
  isExternal: true
  href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_Unregister_System_String_
  name: Unregister(string)
  nameWithType: IServiceLocator.Unregister(string)
  fullName: cfEngine.Service.IServiceLocator.Unregister(string)
  nameWithType.vb: IServiceLocator.Unregister(String)
  fullName.vb: cfEngine.Service.IServiceLocator.Unregister(String)
  name.vb: Unregister(String)
  spec.csharp:
  - uid: cfEngine.Service.IServiceLocator.Unregister(System.String)
    name: Unregister
    href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_Unregister_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: cfEngine.Service.IServiceLocator.Unregister(System.String)
    name: Unregister
    href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_Unregister_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: cfEngine.Service.ServiceLocator.GetService*
  commentId: Overload:cfEngine.Service.ServiceLocator.GetService
  href: cfEngine.Service.ServiceLocator.html#cfEngine_Service_ServiceLocator_GetService__1
  name: GetService
  nameWithType: ServiceLocator.GetService
  fullName: cfEngine.Service.ServiceLocator.GetService
- uid: cfEngine.Service.IServiceLocator.GetService``1
  commentId: M:cfEngine.Service.IServiceLocator.GetService``1
  parent: cfEngine.Service.IServiceLocator
  href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_GetService__1
  name: GetService<T>()
  nameWithType: IServiceLocator.GetService<T>()
  fullName: cfEngine.Service.IServiceLocator.GetService<T>()
  nameWithType.vb: IServiceLocator.GetService(Of T)()
  fullName.vb: cfEngine.Service.IServiceLocator.GetService(Of T)()
  name.vb: GetService(Of T)()
  spec.csharp:
  - uid: cfEngine.Service.IServiceLocator.GetService``1
    name: GetService
    href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_GetService__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: cfEngine.Service.IServiceLocator.GetService``1
    name: GetService
    href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_GetService__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: cfEngine.Service.IServiceLocator.GetService``1(System.String)
  commentId: M:cfEngine.Service.IServiceLocator.GetService``1(System.String)
  parent: cfEngine.Service.IServiceLocator
  isExternal: true
  href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_GetService__1_System_String_
  name: GetService<T>(string)
  nameWithType: IServiceLocator.GetService<T>(string)
  fullName: cfEngine.Service.IServiceLocator.GetService<T>(string)
  nameWithType.vb: IServiceLocator.GetService(Of T)(String)
  fullName.vb: cfEngine.Service.IServiceLocator.GetService(Of T)(String)
  name.vb: GetService(Of T)(String)
  spec.csharp:
  - uid: cfEngine.Service.IServiceLocator.GetService``1(System.String)
    name: GetService
    href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_GetService__1_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: cfEngine.Service.IServiceLocator.GetService``1(System.String)
    name: GetService
    href: cfEngine.Service.IServiceLocator.html#cfEngine_Service_IServiceLocator_GetService__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: cfEngine.Service.ServiceLocator.Dispose*
  commentId: Overload:cfEngine.Service.ServiceLocator.Dispose
  href: cfEngine.Service.ServiceLocator.html#cfEngine_Service_ServiceLocator_Dispose
  name: Dispose
  nameWithType: ServiceLocator.Dispose
  fullName: cfEngine.Service.ServiceLocator.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
