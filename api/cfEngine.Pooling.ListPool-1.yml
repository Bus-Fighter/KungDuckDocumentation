### YamlMime:ManagedReference
items:
- uid: cfEngine.Pooling.ListPool`1
  commentId: T:cfEngine.Pooling.ListPool`1
  id: ListPool`1
  parent: cfEngine.Pooling
  children:
  - cfEngine.Pooling.ListPool`1.#ctor
  - cfEngine.Pooling.ListPool`1.Default
  langs:
  - csharp
  - vb
  name: ListPool<T>
  nameWithType: ListPool<T>
  fullName: cfEngine.Pooling.ListPool<T>
  type: Class
  source:
    id: ListPool
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/pooling/ListPool.cs
    startLine: 4
  namespace: cfEngine.Pooling
  syntax:
    content: 'public class ListPool<T> : ObjectPool<List<T>>, IObjectPool, IDisposable'
    typeParameters:
    - id: T
    content.vb: Public Class ListPool(Of T) Inherits ObjectPool(Of List(Of T)) Implements IObjectPool, IDisposable
  inheritance:
  - System.Object
  - cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{{T}}}
  implements:
  - cfEngine.Pooling.IObjectPool
  - System.IDisposable
  inheritedMembers:
  - cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{{T}}}.Queue
  - cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{{T}}}.Get
  - cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{{T}}}.Get(System.Collections.Generic.List{{T}}@)
  - cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{{T}}}.Release(System.Collections.Generic.List{{T}})
  - cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{{T}}}.Dispose
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ListPool(Of T)
  fullName.vb: cfEngine.Pooling.ListPool(Of T)
  name.vb: ListPool(Of T)
- uid: cfEngine.Pooling.ListPool`1.Default
  commentId: P:cfEngine.Pooling.ListPool`1.Default
  id: Default
  parent: cfEngine.Pooling.ListPool`1
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: ListPool<T>.Default
  fullName: cfEngine.Pooling.ListPool<T>.Default
  type: Property
  source:
    id: Default
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/pooling/ListPool.cs
    startLine: 7
  namespace: cfEngine.Pooling
  syntax:
    content: public static ListPool<T> Default { get; }
    parameters: []
    return:
      type: cfEngine.Pooling.ListPool`1
    content.vb: Public Shared ReadOnly Property [Default] As ListPool(Of T)
  overload: cfEngine.Pooling.ListPool`1.Default*
  nameWithType.vb: ListPool(Of T).Default
  fullName.vb: cfEngine.Pooling.ListPool(Of T).Default
- uid: cfEngine.Pooling.ListPool`1.#ctor
  commentId: M:cfEngine.Pooling.ListPool`1.#ctor
  id: '#ctor'
  parent: cfEngine.Pooling.ListPool`1
  langs:
  - csharp
  - vb
  name: ListPool()
  nameWithType: ListPool<T>.ListPool()
  fullName: cfEngine.Pooling.ListPool<T>.ListPool()
  type: Constructor
  source:
    id: .ctor
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/pooling/ListPool.cs
    startLine: 9
  namespace: cfEngine.Pooling
  syntax:
    content: public ListPool()
    content.vb: Public Sub New()
  overload: cfEngine.Pooling.ListPool`1.#ctor*
  nameWithType.vb: ListPool(Of T).New()
  fullName.vb: cfEngine.Pooling.ListPool(Of T).New()
  name.vb: New()
references:
- uid: cfEngine.Pooling
  commentId: N:cfEngine.Pooling
  href: cfEngine.html
  name: cfEngine.Pooling
  nameWithType: cfEngine.Pooling
  fullName: cfEngine.Pooling
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Pooling
    name: Pooling
    href: cfEngine.Pooling.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Pooling
    name: Pooling
    href: cfEngine.Pooling.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{{T}}}
  commentId: T:cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{`0}}
  parent: cfEngine.Pooling
  definition: cfEngine.Pooling.ObjectPool`1
  href: cfEngine.Pooling.ObjectPool-1.html
  name: ObjectPool<List<T>>
  nameWithType: ObjectPool<List<T>>
  fullName: cfEngine.Pooling.ObjectPool<System.Collections.Generic.List<T>>
  nameWithType.vb: ObjectPool(Of List(Of T))
  fullName.vb: cfEngine.Pooling.ObjectPool(Of System.Collections.Generic.List(Of T))
  name.vb: ObjectPool(Of List(Of T))
  spec.csharp:
  - uid: cfEngine.Pooling.ObjectPool`1
    name: ObjectPool
    href: cfEngine.Pooling.ObjectPool-1.html
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: cfEngine.Pooling.ObjectPool`1
    name: ObjectPool
    href: cfEngine.Pooling.ObjectPool-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: cfEngine.Pooling.IObjectPool
  commentId: T:cfEngine.Pooling.IObjectPool
  parent: cfEngine.Pooling
  href: cfEngine.Pooling.IObjectPool.html
  name: IObjectPool
  nameWithType: IObjectPool
  fullName: cfEngine.Pooling.IObjectPool
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{{T}}}.Queue
  commentId: F:cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{`0}}.Queue
  parent: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{{T}}}
  definition: cfEngine.Pooling.ObjectPool`1.Queue
  href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Queue
  name: Queue
  nameWithType: ObjectPool<List<T>>.Queue
  fullName: cfEngine.Pooling.ObjectPool<System.Collections.Generic.List<T>>.Queue
  nameWithType.vb: ObjectPool(Of List(Of T)).Queue
  fullName.vb: cfEngine.Pooling.ObjectPool(Of System.Collections.Generic.List(Of T)).Queue
- uid: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{{T}}}.Get
  commentId: M:cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{`0}}.Get
  parent: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{{T}}}
  definition: cfEngine.Pooling.ObjectPool`1.Get
  href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Get
  name: Get()
  nameWithType: ObjectPool<List<T>>.Get()
  fullName: cfEngine.Pooling.ObjectPool<System.Collections.Generic.List<T>>.Get()
  nameWithType.vb: ObjectPool(Of List(Of T)).Get()
  fullName.vb: cfEngine.Pooling.ObjectPool(Of System.Collections.Generic.List(Of T)).Get()
  spec.csharp:
  - uid: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{`0}}.Get
    name: Get
    href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Get
  - name: (
  - name: )
  spec.vb:
  - uid: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{`0}}.Get
    name: Get
    href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Get
  - name: (
  - name: )
- uid: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{{T}}}.Get(System.Collections.Generic.List{{T}}@)
  commentId: M:cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{`0}}.Get(System.Collections.Generic.List{`0}@)
  parent: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{{T}}}
  definition: cfEngine.Pooling.ObjectPool`1.Get(`0@)
  href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Get__0__
  name: Get(out List<T>)
  nameWithType: ObjectPool<List<T>>.Get(out List<T>)
  fullName: cfEngine.Pooling.ObjectPool<System.Collections.Generic.List<T>>.Get(out System.Collections.Generic.List<T>)
  nameWithType.vb: ObjectPool(Of List(Of T)).Get(List(Of T))
  fullName.vb: cfEngine.Pooling.ObjectPool(Of System.Collections.Generic.List(Of T)).Get(System.Collections.Generic.List(Of T))
  name.vb: Get(List(Of T))
  spec.csharp:
  - uid: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{`0}}.Get(System.Collections.Generic.List{`0}@)
    name: Get
    href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Get__0__
  - name: (
  - name: out
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{`0}}.Get(System.Collections.Generic.List{`0}@)
    name: Get
    href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Get__0__
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{{T}}}.Release(System.Collections.Generic.List{{T}})
  commentId: M:cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{`0}}.Release(System.Collections.Generic.List{`0})
  parent: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{{T}}}
  definition: cfEngine.Pooling.ObjectPool`1.Release(`0)
  href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Release__0_
  name: Release(List<T>)
  nameWithType: ObjectPool<List<T>>.Release(List<T>)
  fullName: cfEngine.Pooling.ObjectPool<System.Collections.Generic.List<T>>.Release(System.Collections.Generic.List<T>)
  nameWithType.vb: ObjectPool(Of List(Of T)).Release(List(Of T))
  fullName.vb: cfEngine.Pooling.ObjectPool(Of System.Collections.Generic.List(Of T)).Release(System.Collections.Generic.List(Of T))
  name.vb: Release(List(Of T))
  spec.csharp:
  - uid: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{`0}}.Release(System.Collections.Generic.List{`0})
    name: Release
    href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Release__0_
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{`0}}.Release(System.Collections.Generic.List{`0})
    name: Release
    href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Release__0_
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{{T}}}.Dispose
  commentId: M:cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{`0}}.Dispose
  parent: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{{T}}}
  definition: cfEngine.Pooling.ObjectPool`1.Dispose
  href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Dispose
  name: Dispose()
  nameWithType: ObjectPool<List<T>>.Dispose()
  fullName: cfEngine.Pooling.ObjectPool<System.Collections.Generic.List<T>>.Dispose()
  nameWithType.vb: ObjectPool(Of List(Of T)).Dispose()
  fullName.vb: cfEngine.Pooling.ObjectPool(Of System.Collections.Generic.List(Of T)).Dispose()
  spec.csharp:
  - uid: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{`0}}.Dispose
    name: Dispose
    href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: cfEngine.Pooling.ObjectPool{System.Collections.Generic.List{`0}}.Dispose
    name: Dispose
    href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Dispose
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: cfEngine.Pooling.ObjectPool`1
  commentId: T:cfEngine.Pooling.ObjectPool`1
  href: cfEngine.Pooling.ObjectPool-1.html
  name: ObjectPool<T>
  nameWithType: ObjectPool<T>
  fullName: cfEngine.Pooling.ObjectPool<T>
  nameWithType.vb: ObjectPool(Of T)
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T)
  name.vb: ObjectPool(Of T)
  spec.csharp:
  - uid: cfEngine.Pooling.ObjectPool`1
    name: ObjectPool
    href: cfEngine.Pooling.ObjectPool-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: cfEngine.Pooling.ObjectPool`1
    name: ObjectPool
    href: cfEngine.Pooling.ObjectPool-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: cfEngine.Pooling.ObjectPool`1.Queue
  commentId: F:cfEngine.Pooling.ObjectPool`1.Queue
  href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Queue
  name: Queue
  nameWithType: ObjectPool<T>.Queue
  fullName: cfEngine.Pooling.ObjectPool<T>.Queue
  nameWithType.vb: ObjectPool(Of T).Queue
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T).Queue
- uid: cfEngine.Pooling.ObjectPool`1.Get
  commentId: M:cfEngine.Pooling.ObjectPool`1.Get
  href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Get
  name: Get()
  nameWithType: ObjectPool<T>.Get()
  fullName: cfEngine.Pooling.ObjectPool<T>.Get()
  nameWithType.vb: ObjectPool(Of T).Get()
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T).Get()
  spec.csharp:
  - uid: cfEngine.Pooling.ObjectPool`1.Get
    name: Get
    href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Get
  - name: (
  - name: )
  spec.vb:
  - uid: cfEngine.Pooling.ObjectPool`1.Get
    name: Get
    href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Get
  - name: (
  - name: )
- uid: cfEngine.Pooling.ObjectPool`1.Get(`0@)
  commentId: M:cfEngine.Pooling.ObjectPool`1.Get(`0@)
  href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Get__0__
  name: Get(out T)
  nameWithType: ObjectPool<T>.Get(out T)
  fullName: cfEngine.Pooling.ObjectPool<T>.Get(out T)
  nameWithType.vb: ObjectPool(Of T).Get(T)
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T).Get(T)
  name.vb: Get(T)
  spec.csharp:
  - uid: cfEngine.Pooling.ObjectPool`1.Get(`0@)
    name: Get
    href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Get__0__
  - name: (
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: cfEngine.Pooling.ObjectPool`1.Get(`0@)
    name: Get
    href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Get__0__
  - name: (
  - name: T
  - name: )
- uid: cfEngine.Pooling.ObjectPool`1.Release(`0)
  commentId: M:cfEngine.Pooling.ObjectPool`1.Release(`0)
  href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Release__0_
  name: Release(T)
  nameWithType: ObjectPool<T>.Release(T)
  fullName: cfEngine.Pooling.ObjectPool<T>.Release(T)
  nameWithType.vb: ObjectPool(Of T).Release(T)
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T).Release(T)
  spec.csharp:
  - uid: cfEngine.Pooling.ObjectPool`1.Release(`0)
    name: Release
    href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Release__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: cfEngine.Pooling.ObjectPool`1.Release(`0)
    name: Release
    href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Release__0_
  - name: (
  - name: T
  - name: )
- uid: cfEngine.Pooling.ObjectPool`1.Dispose
  commentId: M:cfEngine.Pooling.ObjectPool`1.Dispose
  href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Dispose
  name: Dispose()
  nameWithType: ObjectPool<T>.Dispose()
  fullName: cfEngine.Pooling.ObjectPool<T>.Dispose()
  nameWithType.vb: ObjectPool(Of T).Dispose()
  fullName.vb: cfEngine.Pooling.ObjectPool(Of T).Dispose()
  spec.csharp:
  - uid: cfEngine.Pooling.ObjectPool`1.Dispose
    name: Dispose
    href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: cfEngine.Pooling.ObjectPool`1.Dispose
    name: Dispose
    href: cfEngine.Pooling.ObjectPool-1.html#cfEngine_Pooling_ObjectPool_1_Dispose
  - name: (
  - name: )
- uid: cfEngine.Pooling.ListPool`1.Default*
  commentId: Overload:cfEngine.Pooling.ListPool`1.Default
  href: cfEngine.Pooling.ListPool-1.html#cfEngine_Pooling_ListPool_1_Default
  name: Default
  nameWithType: ListPool<T>.Default
  fullName: cfEngine.Pooling.ListPool<T>.Default
  nameWithType.vb: ListPool(Of T).Default
  fullName.vb: cfEngine.Pooling.ListPool(Of T).Default
- uid: cfEngine.Pooling.ListPool`1
  commentId: T:cfEngine.Pooling.ListPool`1
  parent: cfEngine.Pooling
  href: cfEngine.Pooling.ListPool-1.html
  name: ListPool<T>
  nameWithType: ListPool<T>
  fullName: cfEngine.Pooling.ListPool<T>
  nameWithType.vb: ListPool(Of T)
  fullName.vb: cfEngine.Pooling.ListPool(Of T)
  name.vb: ListPool(Of T)
  spec.csharp:
  - uid: cfEngine.Pooling.ListPool`1
    name: ListPool
    href: cfEngine.Pooling.ListPool-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: cfEngine.Pooling.ListPool`1
    name: ListPool
    href: cfEngine.Pooling.ListPool-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: cfEngine.Pooling.ListPool`1.#ctor*
  commentId: Overload:cfEngine.Pooling.ListPool`1.#ctor
  href: cfEngine.Pooling.ListPool-1.html#cfEngine_Pooling_ListPool_1__ctor
  name: ListPool
  nameWithType: ListPool<T>.ListPool
  fullName: cfEngine.Pooling.ListPool<T>.ListPool
  nameWithType.vb: ListPool(Of T).New
  fullName.vb: cfEngine.Pooling.ListPool(Of T).New
  name.vb: New
