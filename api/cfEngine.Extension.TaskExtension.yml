### YamlMime:ManagedReference
items:
- uid: cfEngine.Extension.TaskExtension
  commentId: T:cfEngine.Extension.TaskExtension
  id: TaskExtension
  parent: cfEngine.Extension
  children:
  - cfEngine.Extension.TaskExtension.ContinueWithSynchronized(System.Threading.Tasks.Task,System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  - cfEngine.Extension.TaskExtension.ContinueWithSynchronized``1(System.Threading.Tasks.Task{``0},System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  - cfEngine.Extension.TaskExtension.ContinueWithSynchronized``1(System.Threading.Tasks.Task{``0},System.Func{System.Threading.Tasks.Task{``0},``0},System.Threading.CancellationToken)
  - cfEngine.Extension.TaskExtension.DisposeIfCompleted(System.Threading.Tasks.Task)
  langs:
  - csharp
  - vb
  name: TaskExtension
  nameWithType: TaskExtension
  fullName: cfEngine.Extension.TaskExtension
  type: Class
  source:
    id: TaskExtension
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/extension/TaskExtension.cs
    startLine: 6
  namespace: cfEngine.Extension
  syntax:
    content: public static class TaskExtension
    content.vb: Public Module TaskExtension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: cfEngine.Extension.TaskExtension.ContinueWithSynchronized(System.Threading.Tasks.Task,System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  commentId: M:cfEngine.Extension.TaskExtension.ContinueWithSynchronized(System.Threading.Tasks.Task,System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  id: ContinueWithSynchronized(System.Threading.Tasks.Task,System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: cfEngine.Extension.TaskExtension
  langs:
  - csharp
  - vb
  name: ContinueWithSynchronized(Task, Action<Task>, CancellationToken)
  nameWithType: TaskExtension.ContinueWithSynchronized(Task, Action<Task>, CancellationToken)
  fullName: cfEngine.Extension.TaskExtension.ContinueWithSynchronized(System.Threading.Tasks.Task, System.Action<System.Threading.Tasks.Task>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ContinueWithSynchronized
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/extension/TaskExtension.cs
    startLine: 8
  namespace: cfEngine.Extension
  syntax:
    content: public static Task ContinueWithSynchronized(this Task t, Action<Task> action, CancellationToken token = default)
    parameters:
    - id: t
      type: System.Threading.Tasks.Task
    - id: action
      type: System.Action{System.Threading.Tasks.Task}
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function ContinueWithSynchronized(t As Task, action As Action(Of Task), token As CancellationToken = Nothing) As Task
  overload: cfEngine.Extension.TaskExtension.ContinueWithSynchronized*
  nameWithType.vb: TaskExtension.ContinueWithSynchronized(Task, Action(Of Task), CancellationToken)
  fullName.vb: cfEngine.Extension.TaskExtension.ContinueWithSynchronized(System.Threading.Tasks.Task, System.Action(Of System.Threading.Tasks.Task), System.Threading.CancellationToken)
  name.vb: ContinueWithSynchronized(Task, Action(Of Task), CancellationToken)
- uid: cfEngine.Extension.TaskExtension.ContinueWithSynchronized``1(System.Threading.Tasks.Task{``0},System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  commentId: M:cfEngine.Extension.TaskExtension.ContinueWithSynchronized``1(System.Threading.Tasks.Task{``0},System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  id: ContinueWithSynchronized``1(System.Threading.Tasks.Task{``0},System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: cfEngine.Extension.TaskExtension
  langs:
  - csharp
  - vb
  name: ContinueWithSynchronized<T>(Task<T>, Action<Task<T>>, CancellationToken)
  nameWithType: TaskExtension.ContinueWithSynchronized<T>(Task<T>, Action<Task<T>>, CancellationToken)
  fullName: cfEngine.Extension.TaskExtension.ContinueWithSynchronized<T>(System.Threading.Tasks.Task<T>, System.Action<System.Threading.Tasks.Task<T>>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ContinueWithSynchronized
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/extension/TaskExtension.cs
    startLine: 14
  namespace: cfEngine.Extension
  syntax:
    content: public static Task ContinueWithSynchronized<T>(this Task<T> t, Action<Task<T>> action, CancellationToken token = default)
    parameters:
    - id: t
      type: System.Threading.Tasks.Task{{T}}
    - id: action
      type: System.Action{System.Threading.Tasks.Task{{T}}}
    - id: token
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function ContinueWithSynchronized(Of T)(t As Task(Of T), action As Action(Of Task(Of T)), token As CancellationToken = Nothing) As Task
  overload: cfEngine.Extension.TaskExtension.ContinueWithSynchronized*
  nameWithType.vb: TaskExtension.ContinueWithSynchronized(Of T)(Task(Of T), Action(Of Task(Of T)), CancellationToken)
  fullName.vb: cfEngine.Extension.TaskExtension.ContinueWithSynchronized(Of T)(System.Threading.Tasks.Task(Of T), System.Action(Of System.Threading.Tasks.Task(Of T)), System.Threading.CancellationToken)
  name.vb: ContinueWithSynchronized(Of T)(Task(Of T), Action(Of Task(Of T)), CancellationToken)
- uid: cfEngine.Extension.TaskExtension.ContinueWithSynchronized``1(System.Threading.Tasks.Task{``0},System.Func{System.Threading.Tasks.Task{``0},``0},System.Threading.CancellationToken)
  commentId: M:cfEngine.Extension.TaskExtension.ContinueWithSynchronized``1(System.Threading.Tasks.Task{``0},System.Func{System.Threading.Tasks.Task{``0},``0},System.Threading.CancellationToken)
  id: ContinueWithSynchronized``1(System.Threading.Tasks.Task{``0},System.Func{System.Threading.Tasks.Task{``0},``0},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: cfEngine.Extension.TaskExtension
  langs:
  - csharp
  - vb
  name: ContinueWithSynchronized<T>(Task<T>, Func<Task<T>, T>, CancellationToken)
  nameWithType: TaskExtension.ContinueWithSynchronized<T>(Task<T>, Func<Task<T>, T>, CancellationToken)
  fullName: cfEngine.Extension.TaskExtension.ContinueWithSynchronized<T>(System.Threading.Tasks.Task<T>, System.Func<System.Threading.Tasks.Task<T>, T>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ContinueWithSynchronized
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/extension/TaskExtension.cs
    startLine: 21
  namespace: cfEngine.Extension
  syntax:
    content: public static Task<T> ContinueWithSynchronized<T>(this Task<T> t, Func<Task<T>, T> action, CancellationToken token = default)
    parameters:
    - id: t
      type: System.Threading.Tasks.Task{{T}}
    - id: action
      type: System.Func{System.Threading.Tasks.Task{{T}},{T}}
    - id: token
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Public Shared Function ContinueWithSynchronized(Of T)(t As Task(Of T), action As Func(Of Task(Of T), T), token As CancellationToken = Nothing) As Task(Of T)
  overload: cfEngine.Extension.TaskExtension.ContinueWithSynchronized*
  nameWithType.vb: TaskExtension.ContinueWithSynchronized(Of T)(Task(Of T), Func(Of Task(Of T), T), CancellationToken)
  fullName.vb: cfEngine.Extension.TaskExtension.ContinueWithSynchronized(Of T)(System.Threading.Tasks.Task(Of T), System.Func(Of System.Threading.Tasks.Task(Of T), T), System.Threading.CancellationToken)
  name.vb: ContinueWithSynchronized(Of T)(Task(Of T), Func(Of Task(Of T), T), CancellationToken)
- uid: cfEngine.Extension.TaskExtension.DisposeIfCompleted(System.Threading.Tasks.Task)
  commentId: M:cfEngine.Extension.TaskExtension.DisposeIfCompleted(System.Threading.Tasks.Task)
  id: DisposeIfCompleted(System.Threading.Tasks.Task)
  isExtensionMethod: true
  parent: cfEngine.Extension.TaskExtension
  langs:
  - csharp
  - vb
  name: DisposeIfCompleted(Task)
  nameWithType: TaskExtension.DisposeIfCompleted(Task)
  fullName: cfEngine.Extension.TaskExtension.DisposeIfCompleted(System.Threading.Tasks.Task)
  type: Method
  source:
    id: DisposeIfCompleted
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/extension/TaskExtension.cs
    startLine: 28
  namespace: cfEngine.Extension
  syntax:
    content: public static void DisposeIfCompleted(this Task t)
    parameters:
    - id: t
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Sub DisposeIfCompleted(t As Task)
  overload: cfEngine.Extension.TaskExtension.DisposeIfCompleted*
references:
- uid: cfEngine.Extension
  commentId: N:cfEngine.Extension
  href: cfEngine.html
  name: cfEngine.Extension
  nameWithType: cfEngine.Extension
  fullName: cfEngine.Extension
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Extension
    name: Extension
    href: cfEngine.Extension.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Extension
    name: Extension
    href: cfEngine.Extension.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: cfEngine.Extension.TaskExtension.ContinueWithSynchronized*
  commentId: Overload:cfEngine.Extension.TaskExtension.ContinueWithSynchronized
  href: cfEngine.Extension.TaskExtension.html#cfEngine_Extension_TaskExtension_ContinueWithSynchronized_System_Threading_Tasks_Task_System_Action_System_Threading_Tasks_Task__System_Threading_CancellationToken_
  name: ContinueWithSynchronized
  nameWithType: TaskExtension.ContinueWithSynchronized
  fullName: cfEngine.Extension.TaskExtension.ContinueWithSynchronized
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Action{System.Threading.Tasks.Task}
  commentId: T:System.Action{System.Threading.Tasks.Task}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Task>
  nameWithType: Action<Task>
  fullName: System.Action<System.Threading.Tasks.Task>
  nameWithType.vb: Action(Of Task)
  fullName.vb: System.Action(Of System.Threading.Tasks.Task)
  name.vb: Action(Of Task)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action{System.Threading.Tasks.Task{{T}}}
  commentId: T:System.Action{System.Threading.Tasks.Task{``0}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Task<T>>
  nameWithType: Action<Task<T>>
  fullName: System.Action<System.Threading.Tasks.Task<T>>
  nameWithType.vb: Action(Of Task(Of T))
  fullName.vb: System.Action(Of System.Threading.Tasks.Task(Of T))
  name.vb: Action(Of Task(Of T))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{System.Threading.Tasks.Task{{T}},{T}}
  commentId: T:System.Func{System.Threading.Tasks.Task{``0},``0}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Task<T>, T>
  nameWithType: Func<Task<T>, T>
  fullName: System.Func<System.Threading.Tasks.Task<T>, T>
  nameWithType.vb: Func(Of Task(Of T), T)
  fullName.vb: System.Func(Of System.Threading.Tasks.Task(Of T), T)
  name.vb: Func(Of Task(Of T), T)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: cfEngine.Extension.TaskExtension.DisposeIfCompleted*
  commentId: Overload:cfEngine.Extension.TaskExtension.DisposeIfCompleted
  href: cfEngine.Extension.TaskExtension.html#cfEngine_Extension_TaskExtension_DisposeIfCompleted_System_Threading_Tasks_Task_
  name: DisposeIfCompleted
  nameWithType: TaskExtension.DisposeIfCompleted
  fullName: cfEngine.Extension.TaskExtension.DisposeIfCompleted
