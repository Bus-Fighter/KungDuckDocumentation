### YamlMime:ManagedReference
items:
- uid: cfEngine.IO.LocalFileStorage
  commentId: T:cfEngine.IO.LocalFileStorage
  id: LocalFileStorage
  parent: cfEngine.IO
  children:
  - cfEngine.IO.LocalFileStorage.#ctor(System.String)
  - cfEngine.IO.LocalFileStorage.CopyFile(System.String,System.String,System.Boolean)
  - cfEngine.IO.LocalFileStorage.CreateStream(System.String,System.Boolean)
  - cfEngine.IO.LocalFileStorage.DeleteFile(System.String)
  - cfEngine.IO.LocalFileStorage.GetFiles(System.String)
  - cfEngine.IO.LocalFileStorage.IsFileExist(System.String)
  - cfEngine.IO.LocalFileStorage.IsStorageExist
  - cfEngine.IO.LocalFileStorage.LoadBytes(System.String)
  - cfEngine.IO.LocalFileStorage.LoadBytesAsync(System.String,System.Threading.CancellationToken)
  - cfEngine.IO.LocalFileStorage.Save(System.String,System.Byte[])
  - cfEngine.IO.LocalFileStorage.SaveAsync(System.String,System.Byte[],System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: LocalFileStorage
  nameWithType: LocalFileStorage
  fullName: cfEngine.IO.LocalFileStorage
  type: Class
  source:
    id: LocalFileStorage
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/io/LocalFileStorage.cs
    startLine: 8
  namespace: cfEngine.IO
  syntax:
    content: 'public class LocalFileStorage : Storage, IStorage, IDisposable'
    content.vb: Public Class LocalFileStorage Inherits Storage Implements IStorage, IDisposable
  inheritance:
  - System.Object
  - cfEngine.IO.Storage
  implements:
  - cfEngine.IO.IStorage
  - System.IDisposable
  inheritedMembers:
  - cfEngine.IO.Storage.storagePath
  - cfEngine.IO.Storage.Validate
  - cfEngine.IO.Storage.Dispose
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: cfEngine.IO.LocalFileStorage.#ctor(System.String)
  commentId: M:cfEngine.IO.LocalFileStorage.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: cfEngine.IO.LocalFileStorage
  langs:
  - csharp
  - vb
  name: LocalFileStorage(string)
  nameWithType: LocalFileStorage.LocalFileStorage(string)
  fullName: cfEngine.IO.LocalFileStorage.LocalFileStorage(string)
  type: Constructor
  source:
    id: .ctor
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/io/LocalFileStorage.cs
    startLine: 10
  namespace: cfEngine.IO
  syntax:
    content: public LocalFileStorage(string storagePath)
    parameters:
    - id: storagePath
      type: System.String
    content.vb: Public Sub New(storagePath As String)
  overload: cfEngine.IO.LocalFileStorage.#ctor*
  nameWithType.vb: LocalFileStorage.New(String)
  fullName.vb: cfEngine.IO.LocalFileStorage.New(String)
  name.vb: New(String)
- uid: cfEngine.IO.LocalFileStorage.GetFiles(System.String)
  commentId: M:cfEngine.IO.LocalFileStorage.GetFiles(System.String)
  id: GetFiles(System.String)
  parent: cfEngine.IO.LocalFileStorage
  langs:
  - csharp
  - vb
  name: GetFiles(string)
  nameWithType: LocalFileStorage.GetFiles(string)
  fullName: cfEngine.IO.LocalFileStorage.GetFiles(string)
  type: Method
  source:
    id: GetFiles
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/io/LocalFileStorage.cs
    startLine: 14
  namespace: cfEngine.IO
  example: []
  syntax:
    content: public override string[] GetFiles(string searchPattern)
    parameters:
    - id: searchPattern
      type: System.String
    return:
      type: System.String[]
    content.vb: Public Overrides Function GetFiles(searchPattern As String) As String()
  overridden: cfEngine.IO.Storage.GetFiles(System.String)
  overload: cfEngine.IO.LocalFileStorage.GetFiles*
  nameWithType.vb: LocalFileStorage.GetFiles(String)
  fullName.vb: cfEngine.IO.LocalFileStorage.GetFiles(String)
  name.vb: GetFiles(String)
- uid: cfEngine.IO.LocalFileStorage.IsFileExist(System.String)
  commentId: M:cfEngine.IO.LocalFileStorage.IsFileExist(System.String)
  id: IsFileExist(System.String)
  parent: cfEngine.IO.LocalFileStorage
  langs:
  - csharp
  - vb
  name: IsFileExist(string)
  nameWithType: LocalFileStorage.IsFileExist(string)
  fullName: cfEngine.IO.LocalFileStorage.IsFileExist(string)
  type: Method
  source:
    id: IsFileExist
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/io/LocalFileStorage.cs
    startLine: 19
  namespace: cfEngine.IO
  example: []
  syntax:
    content: public override bool IsFileExist(string relativePath)
    parameters:
    - id: relativePath
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overrides Function IsFileExist(relativePath As String) As Boolean
  overridden: cfEngine.IO.Storage.IsFileExist(System.String)
  overload: cfEngine.IO.LocalFileStorage.IsFileExist*
  nameWithType.vb: LocalFileStorage.IsFileExist(String)
  fullName.vb: cfEngine.IO.LocalFileStorage.IsFileExist(String)
  name.vb: IsFileExist(String)
- uid: cfEngine.IO.LocalFileStorage.CopyFile(System.String,System.String,System.Boolean)
  commentId: M:cfEngine.IO.LocalFileStorage.CopyFile(System.String,System.String,System.Boolean)
  id: CopyFile(System.String,System.String,System.Boolean)
  parent: cfEngine.IO.LocalFileStorage
  langs:
  - csharp
  - vb
  name: CopyFile(string, string, bool)
  nameWithType: LocalFileStorage.CopyFile(string, string, bool)
  fullName: cfEngine.IO.LocalFileStorage.CopyFile(string, string, bool)
  type: Method
  source:
    id: CopyFile
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/io/LocalFileStorage.cs
    startLine: 24
  namespace: cfEngine.IO
  example: []
  syntax:
    content: public override void CopyFile(string relativeFrom, string relativeTo, bool overwrite = false)
    parameters:
    - id: relativeFrom
      type: System.String
    - id: relativeTo
      type: System.String
    - id: overwrite
      type: System.Boolean
    content.vb: Public Overrides Sub CopyFile(relativeFrom As String, relativeTo As String, overwrite As Boolean = False)
  overridden: cfEngine.IO.Storage.CopyFile(System.String,System.String,System.Boolean)
  overload: cfEngine.IO.LocalFileStorage.CopyFile*
  nameWithType.vb: LocalFileStorage.CopyFile(String, String, Boolean)
  fullName.vb: cfEngine.IO.LocalFileStorage.CopyFile(String, String, Boolean)
  name.vb: CopyFile(String, String, Boolean)
- uid: cfEngine.IO.LocalFileStorage.DeleteFile(System.String)
  commentId: M:cfEngine.IO.LocalFileStorage.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: cfEngine.IO.LocalFileStorage
  langs:
  - csharp
  - vb
  name: DeleteFile(string)
  nameWithType: LocalFileStorage.DeleteFile(string)
  fullName: cfEngine.IO.LocalFileStorage.DeleteFile(string)
  type: Method
  source:
    id: DeleteFile
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/io/LocalFileStorage.cs
    startLine: 29
  namespace: cfEngine.IO
  example: []
  syntax:
    content: public override void DeleteFile(string relativePath)
    parameters:
    - id: relativePath
      type: System.String
    content.vb: Public Overrides Sub DeleteFile(relativePath As String)
  overridden: cfEngine.IO.Storage.DeleteFile(System.String)
  overload: cfEngine.IO.LocalFileStorage.DeleteFile*
  nameWithType.vb: LocalFileStorage.DeleteFile(String)
  fullName.vb: cfEngine.IO.LocalFileStorage.DeleteFile(String)
  name.vb: DeleteFile(String)
- uid: cfEngine.IO.LocalFileStorage.LoadBytes(System.String)
  commentId: M:cfEngine.IO.LocalFileStorage.LoadBytes(System.String)
  id: LoadBytes(System.String)
  parent: cfEngine.IO.LocalFileStorage
  langs:
  - csharp
  - vb
  name: LoadBytes(string)
  nameWithType: LocalFileStorage.LoadBytes(string)
  fullName: cfEngine.IO.LocalFileStorage.LoadBytes(string)
  type: Method
  source:
    id: LoadBytes
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/io/LocalFileStorage.cs
    startLine: 34
  namespace: cfEngine.IO
  example: []
  syntax:
    content: public override byte[] LoadBytes(string relativePath)
    parameters:
    - id: relativePath
      type: System.String
    return:
      type: System.Byte[]
    content.vb: Public Overrides Function LoadBytes(relativePath As String) As Byte()
  overridden: cfEngine.IO.Storage.LoadBytes(System.String)
  overload: cfEngine.IO.LocalFileStorage.LoadBytes*
  nameWithType.vb: LocalFileStorage.LoadBytes(String)
  fullName.vb: cfEngine.IO.LocalFileStorage.LoadBytes(String)
  name.vb: LoadBytes(String)
- uid: cfEngine.IO.LocalFileStorage.LoadBytesAsync(System.String,System.Threading.CancellationToken)
  commentId: M:cfEngine.IO.LocalFileStorage.LoadBytesAsync(System.String,System.Threading.CancellationToken)
  id: LoadBytesAsync(System.String,System.Threading.CancellationToken)
  parent: cfEngine.IO.LocalFileStorage
  langs:
  - csharp
  - vb
  name: LoadBytesAsync(string, CancellationToken)
  nameWithType: LocalFileStorage.LoadBytesAsync(string, CancellationToken)
  fullName: cfEngine.IO.LocalFileStorage.LoadBytesAsync(string, System.Threading.CancellationToken)
  type: Method
  source:
    id: LoadBytesAsync
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/io/LocalFileStorage.cs
    startLine: 50
  namespace: cfEngine.IO
  example: []
  syntax:
    content: public override Task<byte[]> LoadBytesAsync(string relativePath, CancellationToken cancellationToken = default)
    parameters:
    - id: relativePath
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
    content.vb: Public Overrides Function LoadBytesAsync(relativePath As String, cancellationToken As CancellationToken = Nothing) As Task(Of Byte())
  overridden: cfEngine.IO.Storage.LoadBytesAsync(System.String,System.Threading.CancellationToken)
  overload: cfEngine.IO.LocalFileStorage.LoadBytesAsync*
  nameWithType.vb: LocalFileStorage.LoadBytesAsync(String, CancellationToken)
  fullName.vb: cfEngine.IO.LocalFileStorage.LoadBytesAsync(String, System.Threading.CancellationToken)
  name.vb: LoadBytesAsync(String, CancellationToken)
- uid: cfEngine.IO.LocalFileStorage.CreateStream(System.String,System.Boolean)
  commentId: M:cfEngine.IO.LocalFileStorage.CreateStream(System.String,System.Boolean)
  id: CreateStream(System.String,System.Boolean)
  parent: cfEngine.IO.LocalFileStorage
  langs:
  - csharp
  - vb
  name: CreateStream(string, bool)
  nameWithType: LocalFileStorage.CreateStream(string, bool)
  fullName: cfEngine.IO.LocalFileStorage.CreateStream(string, bool)
  type: Method
  source:
    id: CreateStream
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/io/LocalFileStorage.cs
    startLine: 72
  namespace: cfEngine.IO
  example: []
  syntax:
    content: public override Stream CreateStream(string relativePath, bool useAsync)
    parameters:
    - id: relativePath
      type: System.String
    - id: useAsync
      type: System.Boolean
    return:
      type: System.IO.Stream
    content.vb: Public Overrides Function CreateStream(relativePath As String, useAsync As Boolean) As Stream
  overridden: cfEngine.IO.Storage.CreateStream(System.String,System.Boolean)
  overload: cfEngine.IO.LocalFileStorage.CreateStream*
  nameWithType.vb: LocalFileStorage.CreateStream(String, Boolean)
  fullName.vb: cfEngine.IO.LocalFileStorage.CreateStream(String, Boolean)
  name.vb: CreateStream(String, Boolean)
- uid: cfEngine.IO.LocalFileStorage.Save(System.String,System.Byte[])
  commentId: M:cfEngine.IO.LocalFileStorage.Save(System.String,System.Byte[])
  id: Save(System.String,System.Byte[])
  parent: cfEngine.IO.LocalFileStorage
  langs:
  - csharp
  - vb
  name: Save(string, byte[])
  nameWithType: LocalFileStorage.Save(string, byte[])
  fullName: cfEngine.IO.LocalFileStorage.Save(string, byte[])
  type: Method
  source:
    id: Save
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/io/LocalFileStorage.cs
    startLine: 78
  namespace: cfEngine.IO
  example: []
  syntax:
    content: public override void Save(string fileName, byte[] data)
    parameters:
    - id: fileName
      type: System.String
    - id: data
      type: System.Byte[]
    content.vb: Public Overrides Sub Save(fileName As String, data As Byte())
  overridden: cfEngine.IO.Storage.Save(System.String,System.Byte[])
  overload: cfEngine.IO.LocalFileStorage.Save*
  nameWithType.vb: LocalFileStorage.Save(String, Byte())
  fullName.vb: cfEngine.IO.LocalFileStorage.Save(String, Byte())
  name.vb: Save(String, Byte())
- uid: cfEngine.IO.LocalFileStorage.SaveAsync(System.String,System.Byte[],System.Threading.CancellationToken)
  commentId: M:cfEngine.IO.LocalFileStorage.SaveAsync(System.String,System.Byte[],System.Threading.CancellationToken)
  id: SaveAsync(System.String,System.Byte[],System.Threading.CancellationToken)
  parent: cfEngine.IO.LocalFileStorage
  langs:
  - csharp
  - vb
  name: SaveAsync(string, byte[], CancellationToken)
  nameWithType: LocalFileStorage.SaveAsync(string, byte[], CancellationToken)
  fullName: cfEngine.IO.LocalFileStorage.SaveAsync(string, byte[], System.Threading.CancellationToken)
  type: Method
  source:
    id: SaveAsync
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/io/LocalFileStorage.cs
    startLine: 90
  namespace: cfEngine.IO
  example: []
  syntax:
    content: public override Task SaveAsync(string fileName, byte[] data, CancellationToken token = default)
    parameters:
    - id: fileName
      type: System.String
    - id: data
      type: System.Byte[]
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overrides Function SaveAsync(fileName As String, data As Byte(), token As CancellationToken = Nothing) As Task
  overridden: cfEngine.IO.Storage.SaveAsync(System.String,System.Byte[],System.Threading.CancellationToken)
  overload: cfEngine.IO.LocalFileStorage.SaveAsync*
  nameWithType.vb: LocalFileStorage.SaveAsync(String, Byte(), CancellationToken)
  fullName.vb: cfEngine.IO.LocalFileStorage.SaveAsync(String, Byte(), System.Threading.CancellationToken)
  name.vb: SaveAsync(String, Byte(), CancellationToken)
- uid: cfEngine.IO.LocalFileStorage.IsStorageExist
  commentId: M:cfEngine.IO.LocalFileStorage.IsStorageExist
  id: IsStorageExist
  parent: cfEngine.IO.LocalFileStorage
  langs:
  - csharp
  - vb
  name: IsStorageExist()
  nameWithType: LocalFileStorage.IsStorageExist()
  fullName: cfEngine.IO.LocalFileStorage.IsStorageExist()
  type: Method
  source:
    id: IsStorageExist
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/io/LocalFileStorage.cs
    startLine: 102
  namespace: cfEngine.IO
  example: []
  syntax:
    content: public override bool IsStorageExist()
    return:
      type: System.Boolean
    content.vb: Public Overrides Function IsStorageExist() As Boolean
  overridden: cfEngine.IO.Storage.IsStorageExist
  overload: cfEngine.IO.LocalFileStorage.IsStorageExist*
references:
- uid: cfEngine.IO
  commentId: N:cfEngine.IO
  href: cfEngine.html
  name: cfEngine.IO
  nameWithType: cfEngine.IO
  fullName: cfEngine.IO
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.IO
    name: IO
    href: cfEngine.IO.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.IO
    name: IO
    href: cfEngine.IO.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: cfEngine.IO.Storage
  commentId: T:cfEngine.IO.Storage
  parent: cfEngine.IO
  href: cfEngine.IO.Storage.html
  name: Storage
  nameWithType: Storage
  fullName: cfEngine.IO.Storage
- uid: cfEngine.IO.IStorage
  commentId: T:cfEngine.IO.IStorage
  parent: cfEngine.IO
  href: cfEngine.IO.IStorage.html
  name: IStorage
  nameWithType: IStorage
  fullName: cfEngine.IO.IStorage
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: cfEngine.IO.Storage.storagePath
  commentId: F:cfEngine.IO.Storage.storagePath
  parent: cfEngine.IO.Storage
  href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_storagePath
  name: storagePath
  nameWithType: Storage.storagePath
  fullName: cfEngine.IO.Storage.storagePath
- uid: cfEngine.IO.Storage.Validate
  commentId: M:cfEngine.IO.Storage.Validate
  parent: cfEngine.IO.Storage
  href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_Validate
  name: Validate()
  nameWithType: Storage.Validate()
  fullName: cfEngine.IO.Storage.Validate()
  spec.csharp:
  - uid: cfEngine.IO.Storage.Validate
    name: Validate
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_Validate
  - name: (
  - name: )
  spec.vb:
  - uid: cfEngine.IO.Storage.Validate
    name: Validate
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_Validate
  - name: (
  - name: )
- uid: cfEngine.IO.Storage.Dispose
  commentId: M:cfEngine.IO.Storage.Dispose
  parent: cfEngine.IO.Storage
  href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_Dispose
  name: Dispose()
  nameWithType: Storage.Dispose()
  fullName: cfEngine.IO.Storage.Dispose()
  spec.csharp:
  - uid: cfEngine.IO.Storage.Dispose
    name: Dispose
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: cfEngine.IO.Storage.Dispose
    name: Dispose
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_Dispose
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: cfEngine.IO.LocalFileStorage.#ctor*
  commentId: Overload:cfEngine.IO.LocalFileStorage.#ctor
  href: cfEngine.IO.LocalFileStorage.html#cfEngine_IO_LocalFileStorage__ctor_System_String_
  name: LocalFileStorage
  nameWithType: LocalFileStorage.LocalFileStorage
  fullName: cfEngine.IO.LocalFileStorage.LocalFileStorage
  nameWithType.vb: LocalFileStorage.New
  fullName.vb: cfEngine.IO.LocalFileStorage.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: cfEngine.IO.Storage.GetFiles(System.String)
  commentId: M:cfEngine.IO.Storage.GetFiles(System.String)
  parent: cfEngine.IO.Storage
  isExternal: true
  href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_GetFiles_System_String_
  name: GetFiles(string)
  nameWithType: Storage.GetFiles(string)
  fullName: cfEngine.IO.Storage.GetFiles(string)
  nameWithType.vb: Storage.GetFiles(String)
  fullName.vb: cfEngine.IO.Storage.GetFiles(String)
  name.vb: GetFiles(String)
  spec.csharp:
  - uid: cfEngine.IO.Storage.GetFiles(System.String)
    name: GetFiles
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_GetFiles_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: cfEngine.IO.Storage.GetFiles(System.String)
    name: GetFiles
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_GetFiles_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: cfEngine.IO.LocalFileStorage.GetFiles*
  commentId: Overload:cfEngine.IO.LocalFileStorage.GetFiles
  href: cfEngine.IO.LocalFileStorage.html#cfEngine_IO_LocalFileStorage_GetFiles_System_String_
  name: GetFiles
  nameWithType: LocalFileStorage.GetFiles
  fullName: cfEngine.IO.LocalFileStorage.GetFiles
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: cfEngine.IO.Storage.IsFileExist(System.String)
  commentId: M:cfEngine.IO.Storage.IsFileExist(System.String)
  parent: cfEngine.IO.Storage
  isExternal: true
  href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_IsFileExist_System_String_
  name: IsFileExist(string)
  nameWithType: Storage.IsFileExist(string)
  fullName: cfEngine.IO.Storage.IsFileExist(string)
  nameWithType.vb: Storage.IsFileExist(String)
  fullName.vb: cfEngine.IO.Storage.IsFileExist(String)
  name.vb: IsFileExist(String)
  spec.csharp:
  - uid: cfEngine.IO.Storage.IsFileExist(System.String)
    name: IsFileExist
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_IsFileExist_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: cfEngine.IO.Storage.IsFileExist(System.String)
    name: IsFileExist
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_IsFileExist_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: cfEngine.IO.LocalFileStorage.IsFileExist*
  commentId: Overload:cfEngine.IO.LocalFileStorage.IsFileExist
  href: cfEngine.IO.LocalFileStorage.html#cfEngine_IO_LocalFileStorage_IsFileExist_System_String_
  name: IsFileExist
  nameWithType: LocalFileStorage.IsFileExist
  fullName: cfEngine.IO.LocalFileStorage.IsFileExist
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: cfEngine.IO.Storage.CopyFile(System.String,System.String,System.Boolean)
  commentId: M:cfEngine.IO.Storage.CopyFile(System.String,System.String,System.Boolean)
  parent: cfEngine.IO.Storage
  isExternal: true
  href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_CopyFile_System_String_System_String_System_Boolean_
  name: CopyFile(string, string, bool)
  nameWithType: Storage.CopyFile(string, string, bool)
  fullName: cfEngine.IO.Storage.CopyFile(string, string, bool)
  nameWithType.vb: Storage.CopyFile(String, String, Boolean)
  fullName.vb: cfEngine.IO.Storage.CopyFile(String, String, Boolean)
  name.vb: CopyFile(String, String, Boolean)
  spec.csharp:
  - uid: cfEngine.IO.Storage.CopyFile(System.String,System.String,System.Boolean)
    name: CopyFile
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_CopyFile_System_String_System_String_System_Boolean_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: cfEngine.IO.Storage.CopyFile(System.String,System.String,System.Boolean)
    name: CopyFile
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_CopyFile_System_String_System_String_System_Boolean_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: cfEngine.IO.LocalFileStorage.CopyFile*
  commentId: Overload:cfEngine.IO.LocalFileStorage.CopyFile
  href: cfEngine.IO.LocalFileStorage.html#cfEngine_IO_LocalFileStorage_CopyFile_System_String_System_String_System_Boolean_
  name: CopyFile
  nameWithType: LocalFileStorage.CopyFile
  fullName: cfEngine.IO.LocalFileStorage.CopyFile
- uid: cfEngine.IO.Storage.DeleteFile(System.String)
  commentId: M:cfEngine.IO.Storage.DeleteFile(System.String)
  parent: cfEngine.IO.Storage
  isExternal: true
  href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_DeleteFile_System_String_
  name: DeleteFile(string)
  nameWithType: Storage.DeleteFile(string)
  fullName: cfEngine.IO.Storage.DeleteFile(string)
  nameWithType.vb: Storage.DeleteFile(String)
  fullName.vb: cfEngine.IO.Storage.DeleteFile(String)
  name.vb: DeleteFile(String)
  spec.csharp:
  - uid: cfEngine.IO.Storage.DeleteFile(System.String)
    name: DeleteFile
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_DeleteFile_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: cfEngine.IO.Storage.DeleteFile(System.String)
    name: DeleteFile
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_DeleteFile_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: cfEngine.IO.LocalFileStorage.DeleteFile*
  commentId: Overload:cfEngine.IO.LocalFileStorage.DeleteFile
  href: cfEngine.IO.LocalFileStorage.html#cfEngine_IO_LocalFileStorage_DeleteFile_System_String_
  name: DeleteFile
  nameWithType: LocalFileStorage.DeleteFile
  fullName: cfEngine.IO.LocalFileStorage.DeleteFile
- uid: cfEngine.IO.Storage.LoadBytes(System.String)
  commentId: M:cfEngine.IO.Storage.LoadBytes(System.String)
  parent: cfEngine.IO.Storage
  isExternal: true
  href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_LoadBytes_System_String_
  name: LoadBytes(string)
  nameWithType: Storage.LoadBytes(string)
  fullName: cfEngine.IO.Storage.LoadBytes(string)
  nameWithType.vb: Storage.LoadBytes(String)
  fullName.vb: cfEngine.IO.Storage.LoadBytes(String)
  name.vb: LoadBytes(String)
  spec.csharp:
  - uid: cfEngine.IO.Storage.LoadBytes(System.String)
    name: LoadBytes
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_LoadBytes_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: cfEngine.IO.Storage.LoadBytes(System.String)
    name: LoadBytes
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_LoadBytes_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: cfEngine.IO.LocalFileStorage.LoadBytes*
  commentId: Overload:cfEngine.IO.LocalFileStorage.LoadBytes
  href: cfEngine.IO.LocalFileStorage.html#cfEngine_IO_LocalFileStorage_LoadBytes_System_String_
  name: LoadBytes
  nameWithType: LocalFileStorage.LoadBytes
  fullName: cfEngine.IO.LocalFileStorage.LoadBytes
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: cfEngine.IO.Storage.LoadBytesAsync(System.String,System.Threading.CancellationToken)
  commentId: M:cfEngine.IO.Storage.LoadBytesAsync(System.String,System.Threading.CancellationToken)
  parent: cfEngine.IO.Storage
  isExternal: true
  href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_LoadBytesAsync_System_String_System_Threading_CancellationToken_
  name: LoadBytesAsync(string, CancellationToken)
  nameWithType: Storage.LoadBytesAsync(string, CancellationToken)
  fullName: cfEngine.IO.Storage.LoadBytesAsync(string, System.Threading.CancellationToken)
  nameWithType.vb: Storage.LoadBytesAsync(String, CancellationToken)
  fullName.vb: cfEngine.IO.Storage.LoadBytesAsync(String, System.Threading.CancellationToken)
  name.vb: LoadBytesAsync(String, CancellationToken)
  spec.csharp:
  - uid: cfEngine.IO.Storage.LoadBytesAsync(System.String,System.Threading.CancellationToken)
    name: LoadBytesAsync
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_LoadBytesAsync_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: cfEngine.IO.Storage.LoadBytesAsync(System.String,System.Threading.CancellationToken)
    name: LoadBytesAsync
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_LoadBytesAsync_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: cfEngine.IO.LocalFileStorage.LoadBytesAsync*
  commentId: Overload:cfEngine.IO.LocalFileStorage.LoadBytesAsync
  href: cfEngine.IO.LocalFileStorage.html#cfEngine_IO_LocalFileStorage_LoadBytesAsync_System_String_System_Threading_CancellationToken_
  name: LoadBytesAsync
  nameWithType: LocalFileStorage.LoadBytesAsync
  fullName: cfEngine.IO.LocalFileStorage.LoadBytesAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Byte[]}
  commentId: T:System.Threading.Tasks.Task{System.Byte[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<byte[]>
  nameWithType: Task<byte[]>
  fullName: System.Threading.Tasks.Task<byte[]>
  nameWithType.vb: Task(Of Byte())
  fullName.vb: System.Threading.Tasks.Task(Of Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: cfEngine.IO.Storage.CreateStream(System.String,System.Boolean)
  commentId: M:cfEngine.IO.Storage.CreateStream(System.String,System.Boolean)
  parent: cfEngine.IO.Storage
  isExternal: true
  href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_CreateStream_System_String_System_Boolean_
  name: CreateStream(string, bool)
  nameWithType: Storage.CreateStream(string, bool)
  fullName: cfEngine.IO.Storage.CreateStream(string, bool)
  nameWithType.vb: Storage.CreateStream(String, Boolean)
  fullName.vb: cfEngine.IO.Storage.CreateStream(String, Boolean)
  name.vb: CreateStream(String, Boolean)
  spec.csharp:
  - uid: cfEngine.IO.Storage.CreateStream(System.String,System.Boolean)
    name: CreateStream
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_CreateStream_System_String_System_Boolean_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: cfEngine.IO.Storage.CreateStream(System.String,System.Boolean)
    name: CreateStream
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_CreateStream_System_String_System_Boolean_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: cfEngine.IO.LocalFileStorage.CreateStream*
  commentId: Overload:cfEngine.IO.LocalFileStorage.CreateStream
  href: cfEngine.IO.LocalFileStorage.html#cfEngine_IO_LocalFileStorage_CreateStream_System_String_System_Boolean_
  name: CreateStream
  nameWithType: LocalFileStorage.CreateStream
  fullName: cfEngine.IO.LocalFileStorage.CreateStream
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: cfEngine.IO.Storage.Save(System.String,System.Byte[])
  commentId: M:cfEngine.IO.Storage.Save(System.String,System.Byte[])
  parent: cfEngine.IO.Storage
  isExternal: true
  href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_Save_System_String_System_Byte___
  name: Save(string, byte[])
  nameWithType: Storage.Save(string, byte[])
  fullName: cfEngine.IO.Storage.Save(string, byte[])
  nameWithType.vb: Storage.Save(String, Byte())
  fullName.vb: cfEngine.IO.Storage.Save(String, Byte())
  name.vb: Save(String, Byte())
  spec.csharp:
  - uid: cfEngine.IO.Storage.Save(System.String,System.Byte[])
    name: Save
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_Save_System_String_System_Byte___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: cfEngine.IO.Storage.Save(System.String,System.Byte[])
    name: Save
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_Save_System_String_System_Byte___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: )
- uid: cfEngine.IO.LocalFileStorage.Save*
  commentId: Overload:cfEngine.IO.LocalFileStorage.Save
  href: cfEngine.IO.LocalFileStorage.html#cfEngine_IO_LocalFileStorage_Save_System_String_System_Byte___
  name: Save
  nameWithType: LocalFileStorage.Save
  fullName: cfEngine.IO.LocalFileStorage.Save
- uid: cfEngine.IO.Storage.SaveAsync(System.String,System.Byte[],System.Threading.CancellationToken)
  commentId: M:cfEngine.IO.Storage.SaveAsync(System.String,System.Byte[],System.Threading.CancellationToken)
  parent: cfEngine.IO.Storage
  isExternal: true
  href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_SaveAsync_System_String_System_Byte___System_Threading_CancellationToken_
  name: SaveAsync(string, byte[], CancellationToken)
  nameWithType: Storage.SaveAsync(string, byte[], CancellationToken)
  fullName: cfEngine.IO.Storage.SaveAsync(string, byte[], System.Threading.CancellationToken)
  nameWithType.vb: Storage.SaveAsync(String, Byte(), CancellationToken)
  fullName.vb: cfEngine.IO.Storage.SaveAsync(String, Byte(), System.Threading.CancellationToken)
  name.vb: SaveAsync(String, Byte(), CancellationToken)
  spec.csharp:
  - uid: cfEngine.IO.Storage.SaveAsync(System.String,System.Byte[],System.Threading.CancellationToken)
    name: SaveAsync
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_SaveAsync_System_String_System_Byte___System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: cfEngine.IO.Storage.SaveAsync(System.String,System.Byte[],System.Threading.CancellationToken)
    name: SaveAsync
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_SaveAsync_System_String_System_Byte___System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: cfEngine.IO.LocalFileStorage.SaveAsync*
  commentId: Overload:cfEngine.IO.LocalFileStorage.SaveAsync
  href: cfEngine.IO.LocalFileStorage.html#cfEngine_IO_LocalFileStorage_SaveAsync_System_String_System_Byte___System_Threading_CancellationToken_
  name: SaveAsync
  nameWithType: LocalFileStorage.SaveAsync
  fullName: cfEngine.IO.LocalFileStorage.SaveAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: cfEngine.IO.Storage.IsStorageExist
  commentId: M:cfEngine.IO.Storage.IsStorageExist
  parent: cfEngine.IO.Storage
  href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_IsStorageExist
  name: IsStorageExist()
  nameWithType: Storage.IsStorageExist()
  fullName: cfEngine.IO.Storage.IsStorageExist()
  spec.csharp:
  - uid: cfEngine.IO.Storage.IsStorageExist
    name: IsStorageExist
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_IsStorageExist
  - name: (
  - name: )
  spec.vb:
  - uid: cfEngine.IO.Storage.IsStorageExist
    name: IsStorageExist
    href: cfEngine.IO.Storage.html#cfEngine_IO_Storage_IsStorageExist
  - name: (
  - name: )
- uid: cfEngine.IO.LocalFileStorage.IsStorageExist*
  commentId: Overload:cfEngine.IO.LocalFileStorage.IsStorageExist
  href: cfEngine.IO.LocalFileStorage.html#cfEngine_IO_LocalFileStorage_IsStorageExist
  name: IsStorageExist
  nameWithType: LocalFileStorage.IsStorageExist
  fullName: cfEngine.IO.LocalFileStorage.IsStorageExist
