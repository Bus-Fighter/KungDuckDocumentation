### YamlMime:ManagedReference
items:
- uid: cfUnityEngine.Util.ActionCommandController`2
  commentId: T:cfUnityEngine.Util.ActionCommandController`2
  id: ActionCommandController`2
  parent: cfUnityEngine.Util
  children:
  - cfUnityEngine.Util.ActionCommandController`2.#ctor(System.Int32)
  - cfUnityEngine.Util.ActionCommandController`2.ExecuteCommand(`1)
  - cfUnityEngine.Util.ActionCommandController`2.RegisterPattern(cfUnityEngine.Util.CommandPattern{`0})
  langs:
  - csharp
  - vb
  name: ActionCommandController<TCommandType, TCommand>
  nameWithType: ActionCommandController<TCommandType, TCommand>
  fullName: cfUnityEngine.Util.ActionCommandController<TCommandType, TCommand>
  type: Class
  source:
    id: ActionCommandController
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfUnityEngine/util/command/ActionCommandController.cs
    startLine: 6
  namespace: cfUnityEngine.Util
  syntax:
    content: 'public class ActionCommandController<TCommandType, TCommand> where TCommand : ActionCommand<TCommandType, TCommand>'
    typeParameters:
    - id: TCommandType
    - id: TCommand
    content.vb: Public Class ActionCommandController(Of TCommandType, TCommand As ActionCommand(Of TCommandType, TCommand))
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ActionCommandController(Of TCommandType, TCommand)
  fullName.vb: cfUnityEngine.Util.ActionCommandController(Of TCommandType, TCommand)
  name.vb: ActionCommandController(Of TCommandType, TCommand)
- uid: cfUnityEngine.Util.ActionCommandController`2.#ctor(System.Int32)
  commentId: M:cfUnityEngine.Util.ActionCommandController`2.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: cfUnityEngine.Util.ActionCommandController`2
  langs:
  - csharp
  - vb
  name: ActionCommandController(int)
  nameWithType: ActionCommandController<TCommandType, TCommand>.ActionCommandController(int)
  fullName: cfUnityEngine.Util.ActionCommandController<TCommandType, TCommand>.ActionCommandController(int)
  type: Constructor
  source:
    id: .ctor
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfUnityEngine/util/command/ActionCommandController.cs
    startLine: 14
  namespace: cfUnityEngine.Util
  syntax:
    content: public ActionCommandController(int commandBufferCount)
    parameters:
    - id: commandBufferCount
      type: System.Int32
    content.vb: Public Sub New(commandBufferCount As Integer)
  overload: cfUnityEngine.Util.ActionCommandController`2.#ctor*
  nameWithType.vb: ActionCommandController(Of TCommandType, TCommand).New(Integer)
  fullName.vb: cfUnityEngine.Util.ActionCommandController(Of TCommandType, TCommand).New(Integer)
  name.vb: New(Integer)
- uid: cfUnityEngine.Util.ActionCommandController`2.RegisterPattern(cfUnityEngine.Util.CommandPattern{`0})
  commentId: M:cfUnityEngine.Util.ActionCommandController`2.RegisterPattern(cfUnityEngine.Util.CommandPattern{`0})
  id: RegisterPattern(cfUnityEngine.Util.CommandPattern{`0})
  parent: cfUnityEngine.Util.ActionCommandController`2
  langs:
  - csharp
  - vb
  name: RegisterPattern(CommandPattern<TCommandType>)
  nameWithType: ActionCommandController<TCommandType, TCommand>.RegisterPattern(CommandPattern<TCommandType>)
  fullName: cfUnityEngine.Util.ActionCommandController<TCommandType, TCommand>.RegisterPattern(cfUnityEngine.Util.CommandPattern<TCommandType>)
  type: Method
  source:
    id: RegisterPattern
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfUnityEngine/util/command/ActionCommandController.cs
    startLine: 19
  namespace: cfUnityEngine.Util
  syntax:
    content: public void RegisterPattern(CommandPattern<TCommandType> pattern)
    parameters:
    - id: pattern
      type: cfUnityEngine.Util.CommandPattern{{TCommandType}}
    content.vb: Public Sub RegisterPattern(pattern As CommandPattern(Of TCommandType))
  overload: cfUnityEngine.Util.ActionCommandController`2.RegisterPattern*
  nameWithType.vb: ActionCommandController(Of TCommandType, TCommand).RegisterPattern(CommandPattern(Of TCommandType))
  fullName.vb: cfUnityEngine.Util.ActionCommandController(Of TCommandType, TCommand).RegisterPattern(cfUnityEngine.Util.CommandPattern(Of TCommandType))
  name.vb: RegisterPattern(CommandPattern(Of TCommandType))
- uid: cfUnityEngine.Util.ActionCommandController`2.ExecuteCommand(`1)
  commentId: M:cfUnityEngine.Util.ActionCommandController`2.ExecuteCommand(`1)
  id: ExecuteCommand(`1)
  parent: cfUnityEngine.Util.ActionCommandController`2
  langs:
  - csharp
  - vb
  name: ExecuteCommand(TCommand)
  nameWithType: ActionCommandController<TCommandType, TCommand>.ExecuteCommand(TCommand)
  fullName: cfUnityEngine.Util.ActionCommandController<TCommandType, TCommand>.ExecuteCommand(TCommand)
  type: Method
  source:
    id: ExecuteCommand
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfUnityEngine/util/command/ActionCommandController.cs
    startLine: 25
  namespace: cfUnityEngine.Util
  syntax:
    content: public void ExecuteCommand(TCommand command)
    parameters:
    - id: command
      type: '{TCommand}'
    content.vb: Public Sub ExecuteCommand(command As TCommand)
  overload: cfUnityEngine.Util.ActionCommandController`2.ExecuteCommand*
  nameWithType.vb: ActionCommandController(Of TCommandType, TCommand).ExecuteCommand(TCommand)
  fullName.vb: cfUnityEngine.Util.ActionCommandController(Of TCommandType, TCommand).ExecuteCommand(TCommand)
references:
- uid: cfUnityEngine.Util
  commentId: N:cfUnityEngine.Util
  href: cfUnityEngine.html
  name: cfUnityEngine.Util
  nameWithType: cfUnityEngine.Util
  fullName: cfUnityEngine.Util
  spec.csharp:
  - uid: cfUnityEngine
    name: cfUnityEngine
    href: cfUnityEngine.html
  - name: .
  - uid: cfUnityEngine.Util
    name: Util
    href: cfUnityEngine.Util.html
  spec.vb:
  - uid: cfUnityEngine
    name: cfUnityEngine
    href: cfUnityEngine.html
  - name: .
  - uid: cfUnityEngine.Util
    name: Util
    href: cfUnityEngine.Util.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: cfUnityEngine.Util.ActionCommandController`2.#ctor*
  commentId: Overload:cfUnityEngine.Util.ActionCommandController`2.#ctor
  href: cfUnityEngine.Util.ActionCommandController-2.html#cfUnityEngine_Util_ActionCommandController_2__ctor_System_Int32_
  name: ActionCommandController
  nameWithType: ActionCommandController<TCommandType, TCommand>.ActionCommandController
  fullName: cfUnityEngine.Util.ActionCommandController<TCommandType, TCommand>.ActionCommandController
  nameWithType.vb: ActionCommandController(Of TCommandType, TCommand).New
  fullName.vb: cfUnityEngine.Util.ActionCommandController(Of TCommandType, TCommand).New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: cfUnityEngine.Util.ActionCommandController`2.RegisterPattern*
  commentId: Overload:cfUnityEngine.Util.ActionCommandController`2.RegisterPattern
  href: cfUnityEngine.Util.ActionCommandController-2.html#cfUnityEngine_Util_ActionCommandController_2_RegisterPattern_cfUnityEngine_Util_CommandPattern__0__
  name: RegisterPattern
  nameWithType: ActionCommandController<TCommandType, TCommand>.RegisterPattern
  fullName: cfUnityEngine.Util.ActionCommandController<TCommandType, TCommand>.RegisterPattern
  nameWithType.vb: ActionCommandController(Of TCommandType, TCommand).RegisterPattern
  fullName.vb: cfUnityEngine.Util.ActionCommandController(Of TCommandType, TCommand).RegisterPattern
- uid: cfUnityEngine.Util.CommandPattern{{TCommandType}}
  commentId: T:cfUnityEngine.Util.CommandPattern{`0}
  parent: cfUnityEngine.Util
  definition: cfUnityEngine.Util.CommandPattern`1
  href: cfUnityEngine.Util.CommandPattern-1.html
  name: CommandPattern<TCommandType>
  nameWithType: CommandPattern<TCommandType>
  fullName: cfUnityEngine.Util.CommandPattern<TCommandType>
  nameWithType.vb: CommandPattern(Of TCommandType)
  fullName.vb: cfUnityEngine.Util.CommandPattern(Of TCommandType)
  name.vb: CommandPattern(Of TCommandType)
  spec.csharp:
  - uid: cfUnityEngine.Util.CommandPattern`1
    name: CommandPattern
    href: cfUnityEngine.Util.CommandPattern-1.html
  - name: <
  - name: TCommandType
  - name: '>'
  spec.vb:
  - uid: cfUnityEngine.Util.CommandPattern`1
    name: CommandPattern
    href: cfUnityEngine.Util.CommandPattern-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TCommandType
  - name: )
- uid: cfUnityEngine.Util.CommandPattern`1
  commentId: T:cfUnityEngine.Util.CommandPattern`1
  href: cfUnityEngine.Util.CommandPattern-1.html
  name: CommandPattern<TCommandType>
  nameWithType: CommandPattern<TCommandType>
  fullName: cfUnityEngine.Util.CommandPattern<TCommandType>
  nameWithType.vb: CommandPattern(Of TCommandType)
  fullName.vb: cfUnityEngine.Util.CommandPattern(Of TCommandType)
  name.vb: CommandPattern(Of TCommandType)
  spec.csharp:
  - uid: cfUnityEngine.Util.CommandPattern`1
    name: CommandPattern
    href: cfUnityEngine.Util.CommandPattern-1.html
  - name: <
  - name: TCommandType
  - name: '>'
  spec.vb:
  - uid: cfUnityEngine.Util.CommandPattern`1
    name: CommandPattern
    href: cfUnityEngine.Util.CommandPattern-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TCommandType
  - name: )
- uid: cfUnityEngine.Util.ActionCommandController`2.ExecuteCommand*
  commentId: Overload:cfUnityEngine.Util.ActionCommandController`2.ExecuteCommand
  href: cfUnityEngine.Util.ActionCommandController-2.html#cfUnityEngine_Util_ActionCommandController_2_ExecuteCommand__1_
  name: ExecuteCommand
  nameWithType: ActionCommandController<TCommandType, TCommand>.ExecuteCommand
  fullName: cfUnityEngine.Util.ActionCommandController<TCommandType, TCommand>.ExecuteCommand
  nameWithType.vb: ActionCommandController(Of TCommandType, TCommand).ExecuteCommand
  fullName.vb: cfUnityEngine.Util.ActionCommandController(Of TCommandType, TCommand).ExecuteCommand
- uid: '{TCommand}'
  commentId: '!:TCommand'
  definition: TCommand
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: TCommand
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
