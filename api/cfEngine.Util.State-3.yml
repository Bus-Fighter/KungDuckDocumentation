### YamlMime:ManagedReference
items:
- uid: cfEngine.Util.State`3
  commentId: T:cfEngine.Util.State`3
  id: State`3
  parent: cfEngine.Util
  children:
  - cfEngine.Util.State`3.Dispose
  - cfEngine.Util.State`3.Id
  - cfEngine.Util.State`3.IsReady
  - cfEngine.Util.State`3.OnEndContext
  - cfEngine.Util.State`3.StartContext(cfEngine.Util.StateParam)
  - cfEngine.Util.State`3.StateMachine
  - cfEngine.Util.State`3.Whitelist
  langs:
  - csharp
  - vb
  name: State<TStateId, TState, TStateMachine>
  nameWithType: State<TStateId, TState, TStateMachine>
  fullName: cfEngine.Util.State<TStateId, TState, TStateMachine>
  type: Class
  source:
    id: State
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/util/State.cs
    startLine: 5
  namespace: cfEngine.Util
  syntax:
    content: 'public abstract class State<TStateId, TState, TStateMachine> : IDisposable where TState : State<TStateId, TState, TStateMachine> where TStateMachine : StateMachine<TStateId, TState, TStateMachine>'
    typeParameters:
    - id: TStateId
    - id: TState
    - id: TStateMachine
    content.vb: Public MustInherit Class State(Of TStateId, TState As State(Of TStateId, TState, TStateMachine), TStateMachine As StateMachine(Of TStateId, TState, TStateMachine)) Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: State(Of TStateId, TState, TStateMachine)
  fullName.vb: cfEngine.Util.State(Of TStateId, TState, TStateMachine)
  name.vb: State(Of TStateId, TState, TStateMachine)
- uid: cfEngine.Util.State`3.Id
  commentId: P:cfEngine.Util.State`3.Id
  id: Id
  parent: cfEngine.Util.State`3
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: State<TStateId, TState, TStateMachine>.Id
  fullName: cfEngine.Util.State<TStateId, TState, TStateMachine>.Id
  type: Property
  source:
    id: Id
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/util/State.cs
    startLine: 9
  namespace: cfEngine.Util
  syntax:
    content: public abstract TStateId Id { get; }
    parameters: []
    return:
      type: '{TStateId}'
    content.vb: Public MustOverride ReadOnly Property Id As TStateId
  overload: cfEngine.Util.State`3.Id*
  nameWithType.vb: State(Of TStateId, TState, TStateMachine).Id
  fullName.vb: cfEngine.Util.State(Of TStateId, TState, TStateMachine).Id
- uid: cfEngine.Util.State`3.Whitelist
  commentId: P:cfEngine.Util.State`3.Whitelist
  id: Whitelist
  parent: cfEngine.Util.State`3
  langs:
  - csharp
  - vb
  name: Whitelist
  nameWithType: State<TStateId, TState, TStateMachine>.Whitelist
  fullName: cfEngine.Util.State<TStateId, TState, TStateMachine>.Whitelist
  type: Property
  source:
    id: Whitelist
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/util/State.cs
    startLine: 10
  namespace: cfEngine.Util
  syntax:
    content: public virtual HashSet<TStateId> Whitelist { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{{TStateId}}
    content.vb: Public Overridable ReadOnly Property Whitelist As HashSet(Of TStateId)
  overload: cfEngine.Util.State`3.Whitelist*
  nameWithType.vb: State(Of TStateId, TState, TStateMachine).Whitelist
  fullName.vb: cfEngine.Util.State(Of TStateId, TState, TStateMachine).Whitelist
- uid: cfEngine.Util.State`3.StateMachine
  commentId: P:cfEngine.Util.State`3.StateMachine
  id: StateMachine
  parent: cfEngine.Util.State`3
  langs:
  - csharp
  - vb
  name: StateMachine
  nameWithType: State<TStateId, TState, TStateMachine>.StateMachine
  fullName: cfEngine.Util.State<TStateId, TState, TStateMachine>.StateMachine
  type: Property
  source:
    id: StateMachine
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/util/State.cs
    startLine: 12
  namespace: cfEngine.Util
  syntax:
    content: public TStateMachine StateMachine { get; }
    parameters: []
    return:
      type: '{TStateMachine}'
    content.vb: Public Property StateMachine As TStateMachine
  overload: cfEngine.Util.State`3.StateMachine*
  nameWithType.vb: State(Of TStateId, TState, TStateMachine).StateMachine
  fullName.vb: cfEngine.Util.State(Of TStateId, TState, TStateMachine).StateMachine
- uid: cfEngine.Util.State`3.IsReady
  commentId: M:cfEngine.Util.State`3.IsReady
  id: IsReady
  parent: cfEngine.Util.State`3
  langs:
  - csharp
  - vb
  name: IsReady()
  nameWithType: State<TStateId, TState, TStateMachine>.IsReady()
  fullName: cfEngine.Util.State<TStateId, TState, TStateMachine>.IsReady()
  type: Method
  source:
    id: IsReady
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/util/State.cs
    startLine: 14
  namespace: cfEngine.Util
  syntax:
    content: public virtual bool IsReady()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsReady() As Boolean
  overload: cfEngine.Util.State`3.IsReady*
  nameWithType.vb: State(Of TStateId, TState, TStateMachine).IsReady()
  fullName.vb: cfEngine.Util.State(Of TStateId, TState, TStateMachine).IsReady()
- uid: cfEngine.Util.State`3.StartContext(cfEngine.Util.StateParam)
  commentId: M:cfEngine.Util.State`3.StartContext(cfEngine.Util.StateParam)
  id: StartContext(cfEngine.Util.StateParam)
  parent: cfEngine.Util.State`3
  langs:
  - csharp
  - vb
  name: StartContext(StateParam)
  nameWithType: State<TStateId, TState, TStateMachine>.StartContext(StateParam)
  fullName: cfEngine.Util.State<TStateId, TState, TStateMachine>.StartContext(cfEngine.Util.StateParam)
  type: Method
  source:
    id: StartContext
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/util/State.cs
    startLine: 19
  namespace: cfEngine.Util
  syntax:
    content: protected abstract void StartContext(StateParam param)
    parameters:
    - id: param
      type: cfEngine.Util.StateParam
    content.vb: Protected MustOverride Sub StartContext(param As StateParam)
  overload: cfEngine.Util.State`3.StartContext*
  nameWithType.vb: State(Of TStateId, TState, TStateMachine).StartContext(StateParam)
  fullName.vb: cfEngine.Util.State(Of TStateId, TState, TStateMachine).StartContext(cfEngine.Util.StateParam)
- uid: cfEngine.Util.State`3.OnEndContext
  commentId: M:cfEngine.Util.State`3.OnEndContext
  id: OnEndContext
  parent: cfEngine.Util.State`3
  langs:
  - csharp
  - vb
  name: OnEndContext()
  nameWithType: State<TStateId, TState, TStateMachine>.OnEndContext()
  fullName: cfEngine.Util.State<TStateId, TState, TStateMachine>.OnEndContext()
  type: Method
  source:
    id: OnEndContext
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/util/State.cs
    startLine: 21
  namespace: cfEngine.Util
  syntax:
    content: protected virtual void OnEndContext()
    content.vb: Protected Overridable Sub OnEndContext()
  overload: cfEngine.Util.State`3.OnEndContext*
  nameWithType.vb: State(Of TStateId, TState, TStateMachine).OnEndContext()
  fullName.vb: cfEngine.Util.State(Of TStateId, TState, TStateMachine).OnEndContext()
- uid: cfEngine.Util.State`3.Dispose
  commentId: M:cfEngine.Util.State`3.Dispose
  id: Dispose
  parent: cfEngine.Util.State`3
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: State<TStateId, TState, TStateMachine>.Dispose()
  fullName: cfEngine.Util.State<TStateId, TState, TStateMachine>.Dispose()
  type: Method
  source:
    id: Dispose
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/util/State.cs
    startLine: 25
  namespace: cfEngine.Util
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose()
  overload: cfEngine.Util.State`3.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: State(Of TStateId, TState, TStateMachine).Dispose()
  fullName.vb: cfEngine.Util.State(Of TStateId, TState, TStateMachine).Dispose()
references:
- uid: cfEngine.Util
  commentId: N:cfEngine.Util
  href: cfEngine.html
  name: cfEngine.Util
  nameWithType: cfEngine.Util
  fullName: cfEngine.Util
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Util
    name: Util
    href: cfEngine.Util.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Util
    name: Util
    href: cfEngine.Util.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: cfEngine.Util.State`3.Id*
  commentId: Overload:cfEngine.Util.State`3.Id
  href: cfEngine.Util.State-3.html#cfEngine_Util_State_3_Id
  name: Id
  nameWithType: State<TStateId, TState, TStateMachine>.Id
  fullName: cfEngine.Util.State<TStateId, TState, TStateMachine>.Id
  nameWithType.vb: State(Of TStateId, TState, TStateMachine).Id
  fullName.vb: cfEngine.Util.State(Of TStateId, TState, TStateMachine).Id
- uid: '{TStateId}'
  commentId: '!:TStateId'
  definition: TStateId
  name: TStateId
  nameWithType: TStateId
  fullName: TStateId
- uid: TStateId
  name: TStateId
  nameWithType: TStateId
  fullName: TStateId
- uid: cfEngine.Util.State`3.Whitelist*
  commentId: Overload:cfEngine.Util.State`3.Whitelist
  href: cfEngine.Util.State-3.html#cfEngine_Util_State_3_Whitelist
  name: Whitelist
  nameWithType: State<TStateId, TState, TStateMachine>.Whitelist
  fullName: cfEngine.Util.State<TStateId, TState, TStateMachine>.Whitelist
  nameWithType.vb: State(Of TStateId, TState, TStateMachine).Whitelist
  fullName.vb: cfEngine.Util.State(Of TStateId, TState, TStateMachine).Whitelist
- uid: System.Collections.Generic.HashSet{{TStateId}}
  commentId: T:System.Collections.Generic.HashSet{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<TStateId>
  nameWithType: HashSet<TStateId>
  fullName: System.Collections.Generic.HashSet<TStateId>
  nameWithType.vb: HashSet(Of TStateId)
  fullName.vb: System.Collections.Generic.HashSet(Of TStateId)
  name.vb: HashSet(Of TStateId)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: TStateId
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: TStateId
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: cfEngine.Util.State`3.StateMachine*
  commentId: Overload:cfEngine.Util.State`3.StateMachine
  href: cfEngine.Util.State-3.html#cfEngine_Util_State_3_StateMachine
  name: StateMachine
  nameWithType: State<TStateId, TState, TStateMachine>.StateMachine
  fullName: cfEngine.Util.State<TStateId, TState, TStateMachine>.StateMachine
  nameWithType.vb: State(Of TStateId, TState, TStateMachine).StateMachine
  fullName.vb: cfEngine.Util.State(Of TStateId, TState, TStateMachine).StateMachine
- uid: '{TStateMachine}'
  commentId: '!:TStateMachine'
  definition: TStateMachine
  name: TStateMachine
  nameWithType: TStateMachine
  fullName: TStateMachine
- uid: TStateMachine
  name: TStateMachine
  nameWithType: TStateMachine
  fullName: TStateMachine
- uid: cfEngine.Util.State`3.IsReady*
  commentId: Overload:cfEngine.Util.State`3.IsReady
  href: cfEngine.Util.State-3.html#cfEngine_Util_State_3_IsReady
  name: IsReady
  nameWithType: State<TStateId, TState, TStateMachine>.IsReady
  fullName: cfEngine.Util.State<TStateId, TState, TStateMachine>.IsReady
  nameWithType.vb: State(Of TStateId, TState, TStateMachine).IsReady
  fullName.vb: cfEngine.Util.State(Of TStateId, TState, TStateMachine).IsReady
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: cfEngine.Util.State`3.StartContext*
  commentId: Overload:cfEngine.Util.State`3.StartContext
  href: cfEngine.Util.State-3.html#cfEngine_Util_State_3_StartContext_cfEngine_Util_StateParam_
  name: StartContext
  nameWithType: State<TStateId, TState, TStateMachine>.StartContext
  fullName: cfEngine.Util.State<TStateId, TState, TStateMachine>.StartContext
  nameWithType.vb: State(Of TStateId, TState, TStateMachine).StartContext
  fullName.vb: cfEngine.Util.State(Of TStateId, TState, TStateMachine).StartContext
- uid: cfEngine.Util.StateParam
  commentId: T:cfEngine.Util.StateParam
  parent: cfEngine.Util
  href: cfEngine.Util.StateParam.html
  name: StateParam
  nameWithType: StateParam
  fullName: cfEngine.Util.StateParam
- uid: cfEngine.Util.State`3.OnEndContext*
  commentId: Overload:cfEngine.Util.State`3.OnEndContext
  href: cfEngine.Util.State-3.html#cfEngine_Util_State_3_OnEndContext
  name: OnEndContext
  nameWithType: State<TStateId, TState, TStateMachine>.OnEndContext
  fullName: cfEngine.Util.State<TStateId, TState, TStateMachine>.OnEndContext
  nameWithType.vb: State(Of TStateId, TState, TStateMachine).OnEndContext
  fullName.vb: cfEngine.Util.State(Of TStateId, TState, TStateMachine).OnEndContext
- uid: cfEngine.Util.State`3.Dispose*
  commentId: Overload:cfEngine.Util.State`3.Dispose
  href: cfEngine.Util.State-3.html#cfEngine_Util_State_3_Dispose
  name: Dispose
  nameWithType: State<TStateId, TState, TStateMachine>.Dispose
  fullName: cfEngine.Util.State<TStateId, TState, TStateMachine>.Dispose
  nameWithType.vb: State(Of TStateId, TState, TStateMachine).Dispose
  fullName.vb: cfEngine.Util.State(Of TStateId, TState, TStateMachine).Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
