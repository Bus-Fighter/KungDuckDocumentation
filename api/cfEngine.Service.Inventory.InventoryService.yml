### YamlMime:ManagedReference
items:
- uid: cfEngine.Service.Inventory.InventoryService
  commentId: T:cfEngine.Service.Inventory.InventoryService
  id: InventoryService
  parent: cfEngine.Service.Inventory
  children:
  - cfEngine.Service.Inventory.InventoryService.#ctor
  - cfEngine.Service.Inventory.InventoryService.AddAllToNewStacks(System.String,System.Int32)
  - cfEngine.Service.Inventory.InventoryService.AddItem(cfEngine.Service.Inventory.InventoryService.UpdateRequest)
  - cfEngine.Service.Inventory.InventoryService.Dispose
  - cfEngine.Service.Inventory.InventoryService.GetPage(System.Int32)
  - cfEngine.Service.Inventory.InventoryService.Initialize(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Text.Json.Nodes.JsonObject})
  - cfEngine.Service.Inventory.InventoryService.ItemStackGroup
  - cfEngine.Service.Inventory.InventoryService.Pages
  - cfEngine.Service.Inventory.InventoryService.RemoveItem(cfEngine.Service.Inventory.InventoryService.UpdateRequest)
  - cfEngine.Service.Inventory.InventoryService.Save(System.Collections.Generic.Dictionary{System.String,System.Object})
  - cfEngine.Service.Inventory.InventoryService.StackMap
  - cfEngine.Service.Inventory.InventoryService.TryAddToStack(System.Guid,System.Int32,System.Int32@)
  - cfEngine.Service.Inventory.InventoryService.TryRemoveFromStack(System.Guid,System.Int32,System.Int32@)
  - cfEngine.Service.Inventory.InventoryService.VacantItemStackGroup
  langs:
  - csharp
  - vb
  name: InventoryService
  nameWithType: InventoryService
  fullName: cfEngine.Service.Inventory.InventoryService
  type: Class
  source:
    id: InventoryService
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/service/inventory/InventoryService.PageRecord.cs
    startLine: 6
  namespace: cfEngine.Service.Inventory
  syntax:
    content: 'public class InventoryService : IRuntimeSavable, IInventoryService, IService, IDisposable'
    content.vb: Public Class InventoryService Implements IRuntimeSavable, IInventoryService, IService, IDisposable
  inheritance:
  - System.Object
  implements:
  - cfEngine.Core.IRuntimeSavable
  - cfEngine.Service.Inventory.IInventoryService
  - cfEngine.Service.IService
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: cfEngine.Service.Inventory.InventoryService.StackMap
  commentId: P:cfEngine.Service.Inventory.InventoryService.StackMap
  id: StackMap
  parent: cfEngine.Service.Inventory.InventoryService
  langs:
  - csharp
  - vb
  name: StackMap
  nameWithType: InventoryService.StackMap
  fullName: cfEngine.Service.Inventory.InventoryService.StackMap
  type: Property
  source:
    id: StackMap
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/service/inventory/InventoryService.cs
    startLine: 55
  namespace: cfEngine.Service.Inventory
  syntax:
    content: public RtReadOnlyDictionary<Guid, InventoryService.StackRecord> StackMap { get; }
    parameters: []
    return:
      type: cfEngine.Rx.RtReadOnlyDictionary{System.Guid,cfEngine.Service.Inventory.InventoryService.StackRecord}
    content.vb: Public ReadOnly Property StackMap As RtReadOnlyDictionary(Of Guid, InventoryService.StackRecord)
  overload: cfEngine.Service.Inventory.InventoryService.StackMap*
- uid: cfEngine.Service.Inventory.InventoryService.ItemStackGroup
  commentId: F:cfEngine.Service.Inventory.InventoryService.ItemStackGroup
  id: ItemStackGroup
  parent: cfEngine.Service.Inventory.InventoryService
  langs:
  - csharp
  - vb
  name: ItemStackGroup
  nameWithType: InventoryService.ItemStackGroup
  fullName: cfEngine.Service.Inventory.InventoryService.ItemStackGroup
  type: Field
  source:
    id: ItemStackGroup
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/service/inventory/InventoryService.cs
    startLine: 56
  namespace: cfEngine.Service.Inventory
  syntax:
    content: public RtGroup<string, InventoryService.StackRecord> ItemStackGroup
    return:
      type: cfEngine.Rx.RtGroup{System.String,cfEngine.Service.Inventory.InventoryService.StackRecord}
    content.vb: Public ItemStackGroup As RtGroup(Of String, InventoryService.StackRecord)
- uid: cfEngine.Service.Inventory.InventoryService.VacantItemStackGroup
  commentId: F:cfEngine.Service.Inventory.InventoryService.VacantItemStackGroup
  id: VacantItemStackGroup
  parent: cfEngine.Service.Inventory.InventoryService
  langs:
  - csharp
  - vb
  name: VacantItemStackGroup
  nameWithType: InventoryService.VacantItemStackGroup
  fullName: cfEngine.Service.Inventory.InventoryService.VacantItemStackGroup
  type: Field
  source:
    id: VacantItemStackGroup
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/service/inventory/InventoryService.cs
    startLine: 57
  namespace: cfEngine.Service.Inventory
  syntax:
    content: public RtGroup<string, InventoryService.StackRecord> VacantItemStackGroup
    return:
      type: cfEngine.Rx.RtGroup{System.String,cfEngine.Service.Inventory.InventoryService.StackRecord}
    content.vb: Public VacantItemStackGroup As RtGroup(Of String, InventoryService.StackRecord)
- uid: cfEngine.Service.Inventory.InventoryService.Pages
  commentId: P:cfEngine.Service.Inventory.InventoryService.Pages
  id: Pages
  parent: cfEngine.Service.Inventory.InventoryService
  langs:
  - csharp
  - vb
  name: Pages
  nameWithType: InventoryService.Pages
  fullName: cfEngine.Service.Inventory.InventoryService.Pages
  type: Property
  source:
    id: Pages
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/service/inventory/InventoryService.cs
    startLine: 60
  namespace: cfEngine.Service.Inventory
  syntax:
    content: public RtReadOnlyList<InventoryService.PageRecord> Pages { get; }
    parameters: []
    return:
      type: cfEngine.Rx.RtReadOnlyList{cfEngine.Service.Inventory.InventoryService.PageRecord}
    content.vb: Public ReadOnly Property Pages As RtReadOnlyList(Of InventoryService.PageRecord)
  overload: cfEngine.Service.Inventory.InventoryService.Pages*
- uid: cfEngine.Service.Inventory.InventoryService.#ctor
  commentId: M:cfEngine.Service.Inventory.InventoryService.#ctor
  id: '#ctor'
  parent: cfEngine.Service.Inventory.InventoryService
  langs:
  - csharp
  - vb
  name: InventoryService()
  nameWithType: InventoryService.InventoryService()
  fullName: cfEngine.Service.Inventory.InventoryService.InventoryService()
  type: Constructor
  source:
    id: .ctor
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/service/inventory/InventoryService.cs
    startLine: 64
  namespace: cfEngine.Service.Inventory
  syntax:
    content: public InventoryService()
    content.vb: Public Sub New()
  overload: cfEngine.Service.Inventory.InventoryService.#ctor*
  nameWithType.vb: InventoryService.New()
  fullName.vb: cfEngine.Service.Inventory.InventoryService.New()
  name.vb: New()
- uid: cfEngine.Service.Inventory.InventoryService.Dispose
  commentId: M:cfEngine.Service.Inventory.InventoryService.Dispose
  id: Dispose
  parent: cfEngine.Service.Inventory.InventoryService
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: InventoryService.Dispose()
  fullName: cfEngine.Service.Inventory.InventoryService.Dispose()
  type: Method
  source:
    id: Dispose
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/service/inventory/InventoryService.cs
    startLine: 79
  namespace: cfEngine.Service.Inventory
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: cfEngine.Service.Inventory.InventoryService.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: cfEngine.Service.Inventory.InventoryService.Initialize(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Text.Json.Nodes.JsonObject})
  commentId: M:cfEngine.Service.Inventory.InventoryService.Initialize(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Text.Json.Nodes.JsonObject})
  id: Initialize(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Text.Json.Nodes.JsonObject})
  parent: cfEngine.Service.Inventory.InventoryService
  langs:
  - csharp
  - vb
  name: Initialize(IReadOnlyDictionary<string, JsonObject>)
  nameWithType: InventoryService.Initialize(IReadOnlyDictionary<string, JsonObject>)
  fullName: cfEngine.Service.Inventory.InventoryService.Initialize(System.Collections.Generic.IReadOnlyDictionary<string, System.Text.Json.Nodes.JsonObject>)
  type: Method
  source:
    id: Initialize
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/service/inventory/InventoryService.cs
    startLine: 93
  namespace: cfEngine.Service.Inventory
  example: []
  syntax:
    content: public void Initialize(IReadOnlyDictionary<string, JsonObject> dataMap)
    parameters:
    - id: dataMap
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Text.Json.Nodes.JsonObject}
    content.vb: Public Sub Initialize(dataMap As IReadOnlyDictionary(Of String, JsonObject))
  overload: cfEngine.Service.Inventory.InventoryService.Initialize*
  implements:
  - cfEngine.Core.IRuntimeSavable.Initialize(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Text.Json.Nodes.JsonObject})
  nameWithType.vb: InventoryService.Initialize(IReadOnlyDictionary(Of String, JsonObject))
  fullName.vb: cfEngine.Service.Inventory.InventoryService.Initialize(System.Collections.Generic.IReadOnlyDictionary(Of String, System.Text.Json.Nodes.JsonObject))
  name.vb: Initialize(IReadOnlyDictionary(Of String, JsonObject))
- uid: cfEngine.Service.Inventory.InventoryService.Save(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:cfEngine.Service.Inventory.InventoryService.Save(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: Save(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: cfEngine.Service.Inventory.InventoryService
  langs:
  - csharp
  - vb
  name: Save(Dictionary<string, object>)
  nameWithType: InventoryService.Save(Dictionary<string, object>)
  fullName: cfEngine.Service.Inventory.InventoryService.Save(System.Collections.Generic.Dictionary<string, object>)
  type: Method
  source:
    id: Save
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/service/inventory/InventoryService.cs
    startLine: 110
  namespace: cfEngine.Service.Inventory
  example: []
  syntax:
    content: public void Save(Dictionary<string, object> dataMap)
    parameters:
    - id: dataMap
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public Sub Save(dataMap As Dictionary(Of String, Object))
  overload: cfEngine.Service.Inventory.InventoryService.Save*
  implements:
  - cfEngine.Core.IRuntimeSavable.Save(System.Collections.Generic.Dictionary{System.String,System.Object})
  nameWithType.vb: InventoryService.Save(Dictionary(Of String, Object))
  fullName.vb: cfEngine.Service.Inventory.InventoryService.Save(System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: Save(Dictionary(Of String, Object))
- uid: cfEngine.Service.Inventory.InventoryService.AddItem(cfEngine.Service.Inventory.InventoryService.UpdateRequest)
  commentId: M:cfEngine.Service.Inventory.InventoryService.AddItem(cfEngine.Service.Inventory.InventoryService.UpdateRequest)
  id: AddItem(cfEngine.Service.Inventory.InventoryService.UpdateRequest)
  parent: cfEngine.Service.Inventory.InventoryService
  langs:
  - csharp
  - vb
  name: AddItem(UpdateRequest)
  nameWithType: InventoryService.AddItem(InventoryService.UpdateRequest)
  fullName: cfEngine.Service.Inventory.InventoryService.AddItem(cfEngine.Service.Inventory.InventoryService.UpdateRequest)
  type: Method
  source:
    id: AddItem
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/service/inventory/InventoryService.cs
    startLine: 175
  namespace: cfEngine.Service.Inventory
  syntax:
    content: public void AddItem(InventoryService.UpdateRequest request)
    parameters:
    - id: request
      type: cfEngine.Service.Inventory.InventoryService.UpdateRequest
    content.vb: Public Sub AddItem(request As InventoryService.UpdateRequest)
  overload: cfEngine.Service.Inventory.InventoryService.AddItem*
- uid: cfEngine.Service.Inventory.InventoryService.TryAddToStack(System.Guid,System.Int32,System.Int32@)
  commentId: M:cfEngine.Service.Inventory.InventoryService.TryAddToStack(System.Guid,System.Int32,System.Int32@)
  id: TryAddToStack(System.Guid,System.Int32,System.Int32@)
  parent: cfEngine.Service.Inventory.InventoryService
  langs:
  - csharp
  - vb
  name: TryAddToStack(Guid, int, out int)
  nameWithType: InventoryService.TryAddToStack(Guid, int, out int)
  fullName: cfEngine.Service.Inventory.InventoryService.TryAddToStack(System.Guid, int, out int)
  type: Method
  source:
    id: TryAddToStack
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/service/inventory/InventoryService.cs
    startLine: 208
  namespace: cfEngine.Service.Inventory
  syntax:
    content: public bool TryAddToStack(Guid stackId, int count, out int remain)
    parameters:
    - id: stackId
      type: System.Guid
    - id: count
      type: System.Int32
    - id: remain
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function TryAddToStack(stackId As Guid, count As Integer, remain As Integer) As Boolean
  overload: cfEngine.Service.Inventory.InventoryService.TryAddToStack*
  nameWithType.vb: InventoryService.TryAddToStack(Guid, Integer, Integer)
  fullName.vb: cfEngine.Service.Inventory.InventoryService.TryAddToStack(System.Guid, Integer, Integer)
  name.vb: TryAddToStack(Guid, Integer, Integer)
- uid: cfEngine.Service.Inventory.InventoryService.AddAllToNewStacks(System.String,System.Int32)
  commentId: M:cfEngine.Service.Inventory.InventoryService.AddAllToNewStacks(System.String,System.Int32)
  id: AddAllToNewStacks(System.String,System.Int32)
  parent: cfEngine.Service.Inventory.InventoryService
  langs:
  - csharp
  - vb
  name: AddAllToNewStacks(string, int)
  nameWithType: InventoryService.AddAllToNewStacks(string, int)
  fullName: cfEngine.Service.Inventory.InventoryService.AddAllToNewStacks(string, int)
  type: Method
  source:
    id: AddAllToNewStacks
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/service/inventory/InventoryService.cs
    startLine: 223
  namespace: cfEngine.Service.Inventory
  syntax:
    content: public void AddAllToNewStacks(string itemId, int count)
    parameters:
    - id: itemId
      type: System.String
    - id: count
      type: System.Int32
    content.vb: Public Sub AddAllToNewStacks(itemId As String, count As Integer)
  overload: cfEngine.Service.Inventory.InventoryService.AddAllToNewStacks*
  nameWithType.vb: InventoryService.AddAllToNewStacks(String, Integer)
  fullName.vb: cfEngine.Service.Inventory.InventoryService.AddAllToNewStacks(String, Integer)
  name.vb: AddAllToNewStacks(String, Integer)
- uid: cfEngine.Service.Inventory.InventoryService.RemoveItem(cfEngine.Service.Inventory.InventoryService.UpdateRequest)
  commentId: M:cfEngine.Service.Inventory.InventoryService.RemoveItem(cfEngine.Service.Inventory.InventoryService.UpdateRequest)
  id: RemoveItem(cfEngine.Service.Inventory.InventoryService.UpdateRequest)
  parent: cfEngine.Service.Inventory.InventoryService
  langs:
  - csharp
  - vb
  name: RemoveItem(UpdateRequest)
  nameWithType: InventoryService.RemoveItem(InventoryService.UpdateRequest)
  fullName: cfEngine.Service.Inventory.InventoryService.RemoveItem(cfEngine.Service.Inventory.InventoryService.UpdateRequest)
  type: Method
  source:
    id: RemoveItem
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/service/inventory/InventoryService.cs
    startLine: 235
  namespace: cfEngine.Service.Inventory
  syntax:
    content: public Validation<bool> RemoveItem(InventoryService.UpdateRequest request)
    parameters:
    - id: request
      type: cfEngine.Service.Inventory.InventoryService.UpdateRequest
    return:
      type: cfEngine.Util.Validation{System.Boolean}
    content.vb: Public Function RemoveItem(request As InventoryService.UpdateRequest) As Validation(Of Boolean)
  overload: cfEngine.Service.Inventory.InventoryService.RemoveItem*
- uid: cfEngine.Service.Inventory.InventoryService.TryRemoveFromStack(System.Guid,System.Int32,System.Int32@)
  commentId: M:cfEngine.Service.Inventory.InventoryService.TryRemoveFromStack(System.Guid,System.Int32,System.Int32@)
  id: TryRemoveFromStack(System.Guid,System.Int32,System.Int32@)
  parent: cfEngine.Service.Inventory.InventoryService
  langs:
  - csharp
  - vb
  name: TryRemoveFromStack(Guid, int, out int)
  nameWithType: InventoryService.TryRemoveFromStack(Guid, int, out int)
  fullName: cfEngine.Service.Inventory.InventoryService.TryRemoveFromStack(System.Guid, int, out int)
  type: Method
  source:
    id: TryRemoveFromStack
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/service/inventory/InventoryService.cs
    startLine: 280
  namespace: cfEngine.Service.Inventory
  syntax:
    content: public bool TryRemoveFromStack(Guid stackId, int count, out int remain)
    parameters:
    - id: stackId
      type: System.Guid
    - id: count
      type: System.Int32
    - id: remain
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function TryRemoveFromStack(stackId As Guid, count As Integer, remain As Integer) As Boolean
  overload: cfEngine.Service.Inventory.InventoryService.TryRemoveFromStack*
  nameWithType.vb: InventoryService.TryRemoveFromStack(Guid, Integer, Integer)
  fullName.vb: cfEngine.Service.Inventory.InventoryService.TryRemoveFromStack(System.Guid, Integer, Integer)
  name.vb: TryRemoveFromStack(Guid, Integer, Integer)
- uid: cfEngine.Service.Inventory.InventoryService.GetPage(System.Int32)
  commentId: M:cfEngine.Service.Inventory.InventoryService.GetPage(System.Int32)
  id: GetPage(System.Int32)
  parent: cfEngine.Service.Inventory.InventoryService
  langs:
  - csharp
  - vb
  name: GetPage(int)
  nameWithType: InventoryService.GetPage(int)
  fullName: cfEngine.Service.Inventory.InventoryService.GetPage(int)
  type: Method
  source:
    id: GetPage
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/service/inventory/InventoryService.cs
    startLine: 304
  namespace: cfEngine.Service.Inventory
  syntax:
    content: public InventoryService.PageRecord GetPage(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: cfEngine.Service.Inventory.InventoryService.PageRecord
    content.vb: Public Function GetPage(index As Integer) As InventoryService.PageRecord
  overload: cfEngine.Service.Inventory.InventoryService.GetPage*
  nameWithType.vb: InventoryService.GetPage(Integer)
  fullName.vb: cfEngine.Service.Inventory.InventoryService.GetPage(Integer)
  name.vb: GetPage(Integer)
references:
- uid: cfEngine.Service.Inventory
  commentId: N:cfEngine.Service.Inventory
  href: cfEngine.html
  name: cfEngine.Service.Inventory
  nameWithType: cfEngine.Service.Inventory
  fullName: cfEngine.Service.Inventory
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Service
    name: Service
    href: cfEngine.Service.html
  - name: .
  - uid: cfEngine.Service.Inventory
    name: Inventory
    href: cfEngine.Service.Inventory.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Service
    name: Service
    href: cfEngine.Service.html
  - name: .
  - uid: cfEngine.Service.Inventory
    name: Inventory
    href: cfEngine.Service.Inventory.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: cfEngine.Core.IRuntimeSavable
  commentId: T:cfEngine.Core.IRuntimeSavable
  parent: cfEngine.Core
  href: cfEngine.Core.IRuntimeSavable.html
  name: IRuntimeSavable
  nameWithType: IRuntimeSavable
  fullName: cfEngine.Core.IRuntimeSavable
- uid: cfEngine.Service.Inventory.IInventoryService
  commentId: T:cfEngine.Service.Inventory.IInventoryService
  parent: cfEngine.Service.Inventory
  href: cfEngine.Service.Inventory.IInventoryService.html
  name: IInventoryService
  nameWithType: IInventoryService
  fullName: cfEngine.Service.Inventory.IInventoryService
- uid: cfEngine.Service.IService
  commentId: T:cfEngine.Service.IService
  parent: cfEngine.Service
  href: cfEngine.Service.IService.html
  name: IService
  nameWithType: IService
  fullName: cfEngine.Service.IService
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: cfEngine.Core
  commentId: N:cfEngine.Core
  href: cfEngine.html
  name: cfEngine.Core
  nameWithType: cfEngine.Core
  fullName: cfEngine.Core
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Core
    name: Core
    href: cfEngine.Core.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Core
    name: Core
    href: cfEngine.Core.html
- uid: cfEngine.Service
  commentId: N:cfEngine.Service
  href: cfEngine.html
  name: cfEngine.Service
  nameWithType: cfEngine.Service
  fullName: cfEngine.Service
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Service
    name: Service
    href: cfEngine.Service.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Service
    name: Service
    href: cfEngine.Service.html
- uid: cfEngine.Service.Inventory.InventoryService.StackMap*
  commentId: Overload:cfEngine.Service.Inventory.InventoryService.StackMap
  href: cfEngine.Service.Inventory.InventoryService.html#cfEngine_Service_Inventory_InventoryService_StackMap
  name: StackMap
  nameWithType: InventoryService.StackMap
  fullName: cfEngine.Service.Inventory.InventoryService.StackMap
- uid: cfEngine.Rx.RtReadOnlyDictionary{System.Guid,cfEngine.Service.Inventory.InventoryService.StackRecord}
  commentId: T:cfEngine.Rx.RtReadOnlyDictionary{System.Guid,cfEngine.Service.Inventory.InventoryService.StackRecord}
  parent: cfEngine.Rx
  definition: cfEngine.Rx.RtReadOnlyDictionary`2
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  name: RtReadOnlyDictionary<Guid, InventoryService.StackRecord>
  nameWithType: RtReadOnlyDictionary<Guid, InventoryService.StackRecord>
  fullName: cfEngine.Rx.RtReadOnlyDictionary<System.Guid, cfEngine.Service.Inventory.InventoryService.StackRecord>
  nameWithType.vb: RtReadOnlyDictionary(Of Guid, InventoryService.StackRecord)
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of System.Guid, cfEngine.Service.Inventory.InventoryService.StackRecord)
  name.vb: RtReadOnlyDictionary(Of Guid, InventoryService.StackRecord)
  spec.csharp:
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: <
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: cfEngine.Service.Inventory.InventoryService
    name: InventoryService
    href: cfEngine.Service.Inventory.InventoryService.html
  - name: .
  - uid: cfEngine.Service.Inventory.InventoryService.StackRecord
    name: StackRecord
    href: cfEngine.Service.Inventory.InventoryService.StackRecord.html
  - name: '>'
  spec.vb:
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: cfEngine.Service.Inventory.InventoryService
    name: InventoryService
    href: cfEngine.Service.Inventory.InventoryService.html
  - name: .
  - uid: cfEngine.Service.Inventory.InventoryService.StackRecord
    name: StackRecord
    href: cfEngine.Service.Inventory.InventoryService.StackRecord.html
  - name: )
- uid: cfEngine.Rx.RtReadOnlyDictionary`2
  commentId: T:cfEngine.Rx.RtReadOnlyDictionary`2
  href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  name: RtReadOnlyDictionary<TKey, TValue>
  nameWithType: RtReadOnlyDictionary<TKey, TValue>
  fullName: cfEngine.Rx.RtReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: RtReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: cfEngine.Rx.RtReadOnlyDictionary(Of TKey, TValue)
  name.vb: RtReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: cfEngine.Rx.RtReadOnlyDictionary`2
    name: RtReadOnlyDictionary
    href: cfEngine.Rx.RtReadOnlyDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: cfEngine.Rx
  commentId: N:cfEngine.Rx
  href: cfEngine.html
  name: cfEngine.Rx
  nameWithType: cfEngine.Rx
  fullName: cfEngine.Rx
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Rx
    name: Rx
    href: cfEngine.Rx.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Rx
    name: Rx
    href: cfEngine.Rx.html
- uid: cfEngine.Rx.RtGroup{System.String,cfEngine.Service.Inventory.InventoryService.StackRecord}
  commentId: T:cfEngine.Rx.RtGroup{System.String,cfEngine.Service.Inventory.InventoryService.StackRecord}
  parent: cfEngine.Rx
  definition: cfEngine.Rx.RtGroup`2
  href: cfEngine.Rx.RtGroup-2.html
  name: RtGroup<string, InventoryService.StackRecord>
  nameWithType: RtGroup<string, InventoryService.StackRecord>
  fullName: cfEngine.Rx.RtGroup<string, cfEngine.Service.Inventory.InventoryService.StackRecord>
  nameWithType.vb: RtGroup(Of String, InventoryService.StackRecord)
  fullName.vb: cfEngine.Rx.RtGroup(Of String, cfEngine.Service.Inventory.InventoryService.StackRecord)
  name.vb: RtGroup(Of String, InventoryService.StackRecord)
  spec.csharp:
  - uid: cfEngine.Rx.RtGroup`2
    name: RtGroup
    href: cfEngine.Rx.RtGroup-2.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: cfEngine.Service.Inventory.InventoryService
    name: InventoryService
    href: cfEngine.Service.Inventory.InventoryService.html
  - name: .
  - uid: cfEngine.Service.Inventory.InventoryService.StackRecord
    name: StackRecord
    href: cfEngine.Service.Inventory.InventoryService.StackRecord.html
  - name: '>'
  spec.vb:
  - uid: cfEngine.Rx.RtGroup`2
    name: RtGroup
    href: cfEngine.Rx.RtGroup-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: cfEngine.Service.Inventory.InventoryService
    name: InventoryService
    href: cfEngine.Service.Inventory.InventoryService.html
  - name: .
  - uid: cfEngine.Service.Inventory.InventoryService.StackRecord
    name: StackRecord
    href: cfEngine.Service.Inventory.InventoryService.StackRecord.html
  - name: )
- uid: cfEngine.Rx.RtGroup`2
  commentId: T:cfEngine.Rx.RtGroup`2
  href: cfEngine.Rx.RtGroup-2.html
  name: RtGroup<TKey, TValue>
  nameWithType: RtGroup<TKey, TValue>
  fullName: cfEngine.Rx.RtGroup<TKey, TValue>
  nameWithType.vb: RtGroup(Of TKey, TValue)
  fullName.vb: cfEngine.Rx.RtGroup(Of TKey, TValue)
  name.vb: RtGroup(Of TKey, TValue)
  spec.csharp:
  - uid: cfEngine.Rx.RtGroup`2
    name: RtGroup
    href: cfEngine.Rx.RtGroup-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: cfEngine.Rx.RtGroup`2
    name: RtGroup
    href: cfEngine.Rx.RtGroup-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: cfEngine.Service.Inventory.InventoryService.Pages*
  commentId: Overload:cfEngine.Service.Inventory.InventoryService.Pages
  href: cfEngine.Service.Inventory.InventoryService.html#cfEngine_Service_Inventory_InventoryService_Pages
  name: Pages
  nameWithType: InventoryService.Pages
  fullName: cfEngine.Service.Inventory.InventoryService.Pages
- uid: cfEngine.Rx.RtReadOnlyList{cfEngine.Service.Inventory.InventoryService.PageRecord}
  commentId: T:cfEngine.Rx.RtReadOnlyList{cfEngine.Service.Inventory.InventoryService.PageRecord}
  parent: cfEngine.Rx
  definition: cfEngine.Rx.RtReadOnlyList`1
  href: cfEngine.Rx.RtReadOnlyList-1.html
  name: RtReadOnlyList<InventoryService.PageRecord>
  nameWithType: RtReadOnlyList<InventoryService.PageRecord>
  fullName: cfEngine.Rx.RtReadOnlyList<cfEngine.Service.Inventory.InventoryService.PageRecord>
  nameWithType.vb: RtReadOnlyList(Of InventoryService.PageRecord)
  fullName.vb: cfEngine.Rx.RtReadOnlyList(Of cfEngine.Service.Inventory.InventoryService.PageRecord)
  name.vb: RtReadOnlyList(Of InventoryService.PageRecord)
  spec.csharp:
  - uid: cfEngine.Rx.RtReadOnlyList`1
    name: RtReadOnlyList
    href: cfEngine.Rx.RtReadOnlyList-1.html
  - name: <
  - uid: cfEngine.Service.Inventory.InventoryService
    name: InventoryService
    href: cfEngine.Service.Inventory.InventoryService.html
  - name: .
  - uid: cfEngine.Service.Inventory.InventoryService.PageRecord
    name: PageRecord
    href: cfEngine.Service.Inventory.InventoryService.PageRecord.html
  - name: '>'
  spec.vb:
  - uid: cfEngine.Rx.RtReadOnlyList`1
    name: RtReadOnlyList
    href: cfEngine.Rx.RtReadOnlyList-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: cfEngine.Service.Inventory.InventoryService
    name: InventoryService
    href: cfEngine.Service.Inventory.InventoryService.html
  - name: .
  - uid: cfEngine.Service.Inventory.InventoryService.PageRecord
    name: PageRecord
    href: cfEngine.Service.Inventory.InventoryService.PageRecord.html
  - name: )
- uid: cfEngine.Rx.RtReadOnlyList`1
  commentId: T:cfEngine.Rx.RtReadOnlyList`1
  parent: cfEngine.Rx
  href: cfEngine.Rx.RtReadOnlyList-1.html
  name: RtReadOnlyList<T>
  nameWithType: RtReadOnlyList<T>
  fullName: cfEngine.Rx.RtReadOnlyList<T>
  nameWithType.vb: RtReadOnlyList(Of T)
  fullName.vb: cfEngine.Rx.RtReadOnlyList(Of T)
  name.vb: RtReadOnlyList(Of T)
  spec.csharp:
  - uid: cfEngine.Rx.RtReadOnlyList`1
    name: RtReadOnlyList
    href: cfEngine.Rx.RtReadOnlyList-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: cfEngine.Rx.RtReadOnlyList`1
    name: RtReadOnlyList
    href: cfEngine.Rx.RtReadOnlyList-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: cfEngine.Service.Inventory.InventoryService.#ctor*
  commentId: Overload:cfEngine.Service.Inventory.InventoryService.#ctor
  href: cfEngine.Service.Inventory.InventoryService.html#cfEngine_Service_Inventory_InventoryService__ctor
  name: InventoryService
  nameWithType: InventoryService.InventoryService
  fullName: cfEngine.Service.Inventory.InventoryService.InventoryService
  nameWithType.vb: InventoryService.New
  fullName.vb: cfEngine.Service.Inventory.InventoryService.New
  name.vb: New
- uid: cfEngine.Service.Inventory.InventoryService.Dispose*
  commentId: Overload:cfEngine.Service.Inventory.InventoryService.Dispose
  href: cfEngine.Service.Inventory.InventoryService.html#cfEngine_Service_Inventory_InventoryService_Dispose
  name: Dispose
  nameWithType: InventoryService.Dispose
  fullName: cfEngine.Service.Inventory.InventoryService.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: cfEngine.Service.Inventory.InventoryService.Initialize*
  commentId: Overload:cfEngine.Service.Inventory.InventoryService.Initialize
  href: cfEngine.Service.Inventory.InventoryService.html#cfEngine_Service_Inventory_InventoryService_Initialize_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Text_Json_Nodes_JsonObject__
  name: Initialize
  nameWithType: InventoryService.Initialize
  fullName: cfEngine.Service.Inventory.InventoryService.Initialize
- uid: cfEngine.Core.IRuntimeSavable.Initialize(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Text.Json.Nodes.JsonObject})
  commentId: M:cfEngine.Core.IRuntimeSavable.Initialize(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Text.Json.Nodes.JsonObject})
  parent: cfEngine.Core.IRuntimeSavable
  isExternal: true
  href: cfEngine.Core.IRuntimeSavable.html#cfEngine_Core_IRuntimeSavable_Initialize_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Text_Json_Nodes_JsonObject__
  name: Initialize(IReadOnlyDictionary<string, JsonObject>)
  nameWithType: IRuntimeSavable.Initialize(IReadOnlyDictionary<string, JsonObject>)
  fullName: cfEngine.Core.IRuntimeSavable.Initialize(System.Collections.Generic.IReadOnlyDictionary<string, System.Text.Json.Nodes.JsonObject>)
  nameWithType.vb: IRuntimeSavable.Initialize(IReadOnlyDictionary(Of String, JsonObject))
  fullName.vb: cfEngine.Core.IRuntimeSavable.Initialize(System.Collections.Generic.IReadOnlyDictionary(Of String, System.Text.Json.Nodes.JsonObject))
  name.vb: Initialize(IReadOnlyDictionary(Of String, JsonObject))
  spec.csharp:
  - uid: cfEngine.Core.IRuntimeSavable.Initialize(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Text.Json.Nodes.JsonObject})
    name: Initialize
    href: cfEngine.Core.IRuntimeSavable.html#cfEngine_Core_IRuntimeSavable_Initialize_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Text_Json_Nodes_JsonObject__
  - name: (
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Text.Json.Nodes.JsonObject
    name: JsonObject
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.nodes.jsonobject
  - name: '>'
  - name: )
  spec.vb:
  - uid: cfEngine.Core.IRuntimeSavable.Initialize(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Text.Json.Nodes.JsonObject})
    name: Initialize
    href: cfEngine.Core.IRuntimeSavable.html#cfEngine_Core_IRuntimeSavable_Initialize_System_Collections_Generic_IReadOnlyDictionary_System_String_System_Text_Json_Nodes_JsonObject__
  - name: (
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Text.Json.Nodes.JsonObject
    name: JsonObject
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.nodes.jsonobject
  - name: )
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.Text.Json.Nodes.JsonObject}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.Text.Json.Nodes.JsonObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<string, JsonObject>
  nameWithType: IReadOnlyDictionary<string, JsonObject>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string, System.Text.Json.Nodes.JsonObject>
  nameWithType.vb: IReadOnlyDictionary(Of String, JsonObject)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of String, System.Text.Json.Nodes.JsonObject)
  name.vb: IReadOnlyDictionary(Of String, JsonObject)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Text.Json.Nodes.JsonObject
    name: JsonObject
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.nodes.jsonobject
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Text.Json.Nodes.JsonObject
    name: JsonObject
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.nodes.jsonobject
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: cfEngine.Service.Inventory.InventoryService.Save*
  commentId: Overload:cfEngine.Service.Inventory.InventoryService.Save
  href: cfEngine.Service.Inventory.InventoryService.html#cfEngine_Service_Inventory_InventoryService_Save_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: Save
  nameWithType: InventoryService.Save
  fullName: cfEngine.Service.Inventory.InventoryService.Save
- uid: cfEngine.Core.IRuntimeSavable.Save(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:cfEngine.Core.IRuntimeSavable.Save(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: cfEngine.Core.IRuntimeSavable
  isExternal: true
  href: cfEngine.Core.IRuntimeSavable.html#cfEngine_Core_IRuntimeSavable_Save_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: Save(Dictionary<string, object>)
  nameWithType: IRuntimeSavable.Save(Dictionary<string, object>)
  fullName: cfEngine.Core.IRuntimeSavable.Save(System.Collections.Generic.Dictionary<string, object>)
  nameWithType.vb: IRuntimeSavable.Save(Dictionary(Of String, Object))
  fullName.vb: cfEngine.Core.IRuntimeSavable.Save(System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: Save(Dictionary(Of String, Object))
  spec.csharp:
  - uid: cfEngine.Core.IRuntimeSavable.Save(System.Collections.Generic.Dictionary{System.String,System.Object})
    name: Save
    href: cfEngine.Core.IRuntimeSavable.html#cfEngine_Core_IRuntimeSavable_Save_System_Collections_Generic_Dictionary_System_String_System_Object__
  - name: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: )
  spec.vb:
  - uid: cfEngine.Core.IRuntimeSavable.Save(System.Collections.Generic.Dictionary{System.String,System.Object})
    name: Save
    href: cfEngine.Core.IRuntimeSavable.html#cfEngine_Core_IRuntimeSavable_Save_System_Collections_Generic_Dictionary_System_String_System_Object__
  - name: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, object>
  nameWithType: Dictionary<string, object>
  fullName: System.Collections.Generic.Dictionary<string, object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: cfEngine.Service.Inventory.InventoryService.AddItem*
  commentId: Overload:cfEngine.Service.Inventory.InventoryService.AddItem
  href: cfEngine.Service.Inventory.InventoryService.html#cfEngine_Service_Inventory_InventoryService_AddItem_cfEngine_Service_Inventory_InventoryService_UpdateRequest_
  name: AddItem
  nameWithType: InventoryService.AddItem
  fullName: cfEngine.Service.Inventory.InventoryService.AddItem
- uid: cfEngine.Service.Inventory.InventoryService.UpdateRequest
  commentId: T:cfEngine.Service.Inventory.InventoryService.UpdateRequest
  parent: cfEngine.Service.Inventory
  href: cfEngine.Service.Inventory.InventoryService.html
  name: InventoryService.UpdateRequest
  nameWithType: InventoryService.UpdateRequest
  fullName: cfEngine.Service.Inventory.InventoryService.UpdateRequest
  spec.csharp:
  - uid: cfEngine.Service.Inventory.InventoryService
    name: InventoryService
    href: cfEngine.Service.Inventory.InventoryService.html
  - name: .
  - uid: cfEngine.Service.Inventory.InventoryService.UpdateRequest
    name: UpdateRequest
    href: cfEngine.Service.Inventory.InventoryService.UpdateRequest.html
  spec.vb:
  - uid: cfEngine.Service.Inventory.InventoryService
    name: InventoryService
    href: cfEngine.Service.Inventory.InventoryService.html
  - name: .
  - uid: cfEngine.Service.Inventory.InventoryService.UpdateRequest
    name: UpdateRequest
    href: cfEngine.Service.Inventory.InventoryService.UpdateRequest.html
- uid: cfEngine.Service.Inventory.InventoryService.TryAddToStack*
  commentId: Overload:cfEngine.Service.Inventory.InventoryService.TryAddToStack
  href: cfEngine.Service.Inventory.InventoryService.html#cfEngine_Service_Inventory_InventoryService_TryAddToStack_System_Guid_System_Int32_System_Int32__
  name: TryAddToStack
  nameWithType: InventoryService.TryAddToStack
  fullName: cfEngine.Service.Inventory.InventoryService.TryAddToStack
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: cfEngine.Service.Inventory.InventoryService.AddAllToNewStacks*
  commentId: Overload:cfEngine.Service.Inventory.InventoryService.AddAllToNewStacks
  href: cfEngine.Service.Inventory.InventoryService.html#cfEngine_Service_Inventory_InventoryService_AddAllToNewStacks_System_String_System_Int32_
  name: AddAllToNewStacks
  nameWithType: InventoryService.AddAllToNewStacks
  fullName: cfEngine.Service.Inventory.InventoryService.AddAllToNewStacks
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: cfEngine.Service.Inventory.InventoryService.RemoveItem*
  commentId: Overload:cfEngine.Service.Inventory.InventoryService.RemoveItem
  href: cfEngine.Service.Inventory.InventoryService.html#cfEngine_Service_Inventory_InventoryService_RemoveItem_cfEngine_Service_Inventory_InventoryService_UpdateRequest_
  name: RemoveItem
  nameWithType: InventoryService.RemoveItem
  fullName: cfEngine.Service.Inventory.InventoryService.RemoveItem
- uid: cfEngine.Util.Validation{System.Boolean}
  commentId: T:cfEngine.Util.Validation{System.Boolean}
  parent: cfEngine.Util
  definition: cfEngine.Util.Validation`1
  href: cfEngine.Util.Validation-1.html
  name: Validation<bool>
  nameWithType: Validation<bool>
  fullName: cfEngine.Util.Validation<bool>
  nameWithType.vb: Validation(Of Boolean)
  fullName.vb: cfEngine.Util.Validation(Of Boolean)
  name.vb: Validation(Of Boolean)
  spec.csharp:
  - uid: cfEngine.Util.Validation`1
    name: Validation
    href: cfEngine.Util.Validation-1.html
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: cfEngine.Util.Validation`1
    name: Validation
    href: cfEngine.Util.Validation-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: cfEngine.Util.Validation`1
  commentId: T:cfEngine.Util.Validation`1
  parent: cfEngine.Util
  href: cfEngine.Util.Validation-1.html
  name: Validation<T>
  nameWithType: Validation<T>
  fullName: cfEngine.Util.Validation<T>
  nameWithType.vb: Validation(Of T)
  fullName.vb: cfEngine.Util.Validation(Of T)
  name.vb: Validation(Of T)
  spec.csharp:
  - uid: cfEngine.Util.Validation`1
    name: Validation
    href: cfEngine.Util.Validation-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: cfEngine.Util.Validation`1
    name: Validation
    href: cfEngine.Util.Validation-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: cfEngine.Util
  commentId: N:cfEngine.Util
  href: cfEngine.html
  name: cfEngine.Util
  nameWithType: cfEngine.Util
  fullName: cfEngine.Util
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Util
    name: Util
    href: cfEngine.Util.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Util
    name: Util
    href: cfEngine.Util.html
- uid: cfEngine.Service.Inventory.InventoryService.TryRemoveFromStack*
  commentId: Overload:cfEngine.Service.Inventory.InventoryService.TryRemoveFromStack
  href: cfEngine.Service.Inventory.InventoryService.html#cfEngine_Service_Inventory_InventoryService_TryRemoveFromStack_System_Guid_System_Int32_System_Int32__
  name: TryRemoveFromStack
  nameWithType: InventoryService.TryRemoveFromStack
  fullName: cfEngine.Service.Inventory.InventoryService.TryRemoveFromStack
- uid: cfEngine.Service.Inventory.InventoryService.GetPage*
  commentId: Overload:cfEngine.Service.Inventory.InventoryService.GetPage
  href: cfEngine.Service.Inventory.InventoryService.html#cfEngine_Service_Inventory_InventoryService_GetPage_System_Int32_
  name: GetPage
  nameWithType: InventoryService.GetPage
  fullName: cfEngine.Service.Inventory.InventoryService.GetPage
- uid: cfEngine.Service.Inventory.InventoryService.PageRecord
  commentId: T:cfEngine.Service.Inventory.InventoryService.PageRecord
  parent: cfEngine.Service.Inventory
  href: cfEngine.Service.Inventory.InventoryService.html
  name: InventoryService.PageRecord
  nameWithType: InventoryService.PageRecord
  fullName: cfEngine.Service.Inventory.InventoryService.PageRecord
  spec.csharp:
  - uid: cfEngine.Service.Inventory.InventoryService
    name: InventoryService
    href: cfEngine.Service.Inventory.InventoryService.html
  - name: .
  - uid: cfEngine.Service.Inventory.InventoryService.PageRecord
    name: PageRecord
    href: cfEngine.Service.Inventory.InventoryService.PageRecord.html
  spec.vb:
  - uid: cfEngine.Service.Inventory.InventoryService
    name: InventoryService
    href: cfEngine.Service.Inventory.InventoryService.html
  - name: .
  - uid: cfEngine.Service.Inventory.InventoryService.PageRecord
    name: PageRecord
    href: cfEngine.Service.Inventory.InventoryService.PageRecord.html
