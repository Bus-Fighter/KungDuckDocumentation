### YamlMime:ManagedReference
items:
- uid: cfEngine.Pooling.PoolManager
  commentId: T:cfEngine.Pooling.PoolManager
  id: PoolManager
  parent: cfEngine.Pooling
  children:
  - cfEngine.Pooling.PoolManager.AddPool``1(System.String,``0)
  - cfEngine.Pooling.PoolManager.Dispose
  - cfEngine.Pooling.PoolManager.GetOrCreatPool``1(System.String,System.Func{``0})
  - cfEngine.Pooling.PoolManager.TryGetPool(System.String,cfEngine.Pooling.IObjectPool@)
  - cfEngine.Pooling.PoolManager.TryGetPool``1(System.String,``0@)
  langs:
  - csharp
  - vb
  name: PoolManager
  nameWithType: PoolManager
  fullName: cfEngine.Pooling.PoolManager
  type: Class
  source:
    id: PoolManager
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/pooling/PoolManager.cs
    startLine: 28
  namespace: cfEngine.Pooling
  syntax:
    content: 'public class PoolManager : IService, IDisposable'
    content.vb: Public Class PoolManager Implements IService, IDisposable
  inheritance:
  - System.Object
  implements:
  - cfEngine.Service.IService
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: cfEngine.Pooling.PoolManager.TryGetPool(System.String,cfEngine.Pooling.IObjectPool@)
  commentId: M:cfEngine.Pooling.PoolManager.TryGetPool(System.String,cfEngine.Pooling.IObjectPool@)
  id: TryGetPool(System.String,cfEngine.Pooling.IObjectPool@)
  parent: cfEngine.Pooling.PoolManager
  langs:
  - csharp
  - vb
  name: TryGetPool(string, out IObjectPool)
  nameWithType: PoolManager.TryGetPool(string, out IObjectPool)
  fullName: cfEngine.Pooling.PoolManager.TryGetPool(string, out cfEngine.Pooling.IObjectPool)
  type: Method
  source:
    id: TryGetPool
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/pooling/PoolManager.cs
    startLine: 32
  namespace: cfEngine.Pooling
  syntax:
    content: public bool TryGetPool(string key, out IObjectPool pool)
    parameters:
    - id: key
      type: System.String
    - id: pool
      type: cfEngine.Pooling.IObjectPool
    return:
      type: System.Boolean
    content.vb: Public Function TryGetPool(key As String, pool As IObjectPool) As Boolean
  overload: cfEngine.Pooling.PoolManager.TryGetPool*
  nameWithType.vb: PoolManager.TryGetPool(String, IObjectPool)
  fullName.vb: cfEngine.Pooling.PoolManager.TryGetPool(String, cfEngine.Pooling.IObjectPool)
  name.vb: TryGetPool(String, IObjectPool)
- uid: cfEngine.Pooling.PoolManager.TryGetPool``1(System.String,``0@)
  commentId: M:cfEngine.Pooling.PoolManager.TryGetPool``1(System.String,``0@)
  id: TryGetPool``1(System.String,``0@)
  parent: cfEngine.Pooling.PoolManager
  langs:
  - csharp
  - vb
  name: TryGetPool<T>(string, out T)
  nameWithType: PoolManager.TryGetPool<T>(string, out T)
  fullName: cfEngine.Pooling.PoolManager.TryGetPool<T>(string, out T)
  type: Method
  source:
    id: TryGetPool
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/pooling/PoolManager.cs
    startLine: 37
  namespace: cfEngine.Pooling
  syntax:
    content: 'public bool TryGetPool<T>(string key, out T pool) where T : class, IObjectPool'
    parameters:
    - id: key
      type: System.String
    - id: pool
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function TryGetPool(Of T As {Class, IObjectPool})(key As String, pool As T) As Boolean
  overload: cfEngine.Pooling.PoolManager.TryGetPool*
  nameWithType.vb: PoolManager.TryGetPool(Of T)(String, T)
  fullName.vb: cfEngine.Pooling.PoolManager.TryGetPool(Of T)(String, T)
  name.vb: TryGetPool(Of T)(String, T)
- uid: cfEngine.Pooling.PoolManager.AddPool``1(System.String,``0)
  commentId: M:cfEngine.Pooling.PoolManager.AddPool``1(System.String,``0)
  id: AddPool``1(System.String,``0)
  parent: cfEngine.Pooling.PoolManager
  langs:
  - csharp
  - vb
  name: AddPool<T>(string, T)
  nameWithType: PoolManager.AddPool<T>(string, T)
  fullName: cfEngine.Pooling.PoolManager.AddPool<T>(string, T)
  type: Method
  source:
    id: AddPool
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/pooling/PoolManager.cs
    startLine: 57
  namespace: cfEngine.Pooling
  syntax:
    content: 'public void AddPool<T>(string key, T pool) where T : IObjectPool'
    parameters:
    - id: key
      type: System.String
    - id: pool
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Sub AddPool(Of T As IObjectPool)(key As String, pool As T)
  overload: cfEngine.Pooling.PoolManager.AddPool*
  nameWithType.vb: PoolManager.AddPool(Of T)(String, T)
  fullName.vb: cfEngine.Pooling.PoolManager.AddPool(Of T)(String, T)
  name.vb: AddPool(Of T)(String, T)
- uid: cfEngine.Pooling.PoolManager.GetOrCreatPool``1(System.String,System.Func{``0})
  commentId: M:cfEngine.Pooling.PoolManager.GetOrCreatPool``1(System.String,System.Func{``0})
  id: GetOrCreatPool``1(System.String,System.Func{``0})
  parent: cfEngine.Pooling.PoolManager
  langs:
  - csharp
  - vb
  name: GetOrCreatPool<T>(string, Func<T>)
  nameWithType: PoolManager.GetOrCreatPool<T>(string, Func<T>)
  fullName: cfEngine.Pooling.PoolManager.GetOrCreatPool<T>(string, System.Func<T>)
  type: Method
  source:
    id: GetOrCreatPool
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/pooling/PoolManager.cs
    startLine: 67
  namespace: cfEngine.Pooling
  syntax:
    content: 'public T GetOrCreatPool<T>(string key, Func<T> createFunc) where T : class, IObjectPool'
    parameters:
    - id: key
      type: System.String
    - id: createFunc
      type: System.Func{{T}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetOrCreatPool(Of T As {Class, IObjectPool})(key As String, createFunc As Func(Of T)) As T
  overload: cfEngine.Pooling.PoolManager.GetOrCreatPool*
  nameWithType.vb: PoolManager.GetOrCreatPool(Of T)(String, Func(Of T))
  fullName.vb: cfEngine.Pooling.PoolManager.GetOrCreatPool(Of T)(String, System.Func(Of T))
  name.vb: GetOrCreatPool(Of T)(String, Func(Of T))
- uid: cfEngine.Pooling.PoolManager.Dispose
  commentId: M:cfEngine.Pooling.PoolManager.Dispose
  id: Dispose
  parent: cfEngine.Pooling.PoolManager
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: PoolManager.Dispose()
  fullName: cfEngine.Pooling.PoolManager.Dispose()
  type: Method
  source:
    id: Dispose
    path: D:/Drive/Unity/KungDuckSimulator/Assets/Modules/cfEngine/pooling/PoolManager.cs
    startLine: 76
  namespace: cfEngine.Pooling
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: cfEngine.Pooling.PoolManager.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: cfEngine.Pooling
  commentId: N:cfEngine.Pooling
  href: cfEngine.html
  name: cfEngine.Pooling
  nameWithType: cfEngine.Pooling
  fullName: cfEngine.Pooling
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Pooling
    name: Pooling
    href: cfEngine.Pooling.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Pooling
    name: Pooling
    href: cfEngine.Pooling.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: cfEngine.Service.IService
  commentId: T:cfEngine.Service.IService
  parent: cfEngine.Service
  href: cfEngine.Service.IService.html
  name: IService
  nameWithType: IService
  fullName: cfEngine.Service.IService
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: cfEngine.Service
  commentId: N:cfEngine.Service
  href: cfEngine.html
  name: cfEngine.Service
  nameWithType: cfEngine.Service
  fullName: cfEngine.Service
  spec.csharp:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Service
    name: Service
    href: cfEngine.Service.html
  spec.vb:
  - uid: cfEngine
    name: cfEngine
    href: cfEngine.html
  - name: .
  - uid: cfEngine.Service
    name: Service
    href: cfEngine.Service.html
- uid: cfEngine.Pooling.PoolManager.TryGetPool*
  commentId: Overload:cfEngine.Pooling.PoolManager.TryGetPool
  href: cfEngine.Pooling.PoolManager.html#cfEngine_Pooling_PoolManager_TryGetPool_System_String_cfEngine_Pooling_IObjectPool__
  name: TryGetPool
  nameWithType: PoolManager.TryGetPool
  fullName: cfEngine.Pooling.PoolManager.TryGetPool
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: cfEngine.Pooling.IObjectPool
  commentId: T:cfEngine.Pooling.IObjectPool
  parent: cfEngine.Pooling
  href: cfEngine.Pooling.IObjectPool.html
  name: IObjectPool
  nameWithType: IObjectPool
  fullName: cfEngine.Pooling.IObjectPool
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: cfEngine.Pooling.PoolManager.AddPool*
  commentId: Overload:cfEngine.Pooling.PoolManager.AddPool
  href: cfEngine.Pooling.PoolManager.html#cfEngine_Pooling_PoolManager_AddPool__1_System_String___0_
  name: AddPool
  nameWithType: PoolManager.AddPool
  fullName: cfEngine.Pooling.PoolManager.AddPool
- uid: cfEngine.Pooling.PoolManager.GetOrCreatPool*
  commentId: Overload:cfEngine.Pooling.PoolManager.GetOrCreatPool
  href: cfEngine.Pooling.PoolManager.html#cfEngine_Pooling_PoolManager_GetOrCreatPool__1_System_String_System_Func___0__
  name: GetOrCreatPool
  nameWithType: PoolManager.GetOrCreatPool
  fullName: cfEngine.Pooling.PoolManager.GetOrCreatPool
- uid: System.Func{{T}}
  commentId: T:System.Func{`0}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullName.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: cfEngine.Pooling.PoolManager.Dispose*
  commentId: Overload:cfEngine.Pooling.PoolManager.Dispose
  href: cfEngine.Pooling.PoolManager.html#cfEngine_Pooling_PoolManager_Dispose
  name: Dispose
  nameWithType: PoolManager.Dispose
  fullName: cfEngine.Pooling.PoolManager.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
